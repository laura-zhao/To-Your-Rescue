{"ast":null,"code":"import \"antd/lib/space/style\";\nimport _Space from \"antd/lib/space\";\nimport \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nimport \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nimport \"antd/lib/select/style\";\nimport _Select from \"antd/lib/select\";\nimport \"antd/lib/typography/style\";\nimport _Typography from \"antd/lib/typography\";\nvar _jsxFileName = \"/Users/zhaoke/Desktop/TYR/TYR.WEB.CLIENT/src/components/animals/FtrAnimals.tsx\",\n  _s = $RefreshSig$();\nimport { FlagFilled } from '@ant-design/icons';\nimport { useEffect, useState } from 'react';\nimport './FtrAnimals.less';\nimport { AnimalsAddModal } from './components/AnimalsAddModal';\nimport { ContentToolbar } from './components/ContentToolbar';\nimport { columns, CURRENT, FORMER } from './FtrAnimals.data';\nimport { animalMock } from './animals-mock';\nimport { pageLength } from '../../shared/constants/pagination.json';\nimport { apiCall } from '../../shared/api/apiWrapper';\nimport { pluralToSingular } from '../../utils/pluralToSingular';\nimport CustomTablePagination from '../../shared/components/CustomTablePagination';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Title\n} = _Typography;\nconst {\n  Option\n} = _Select;\nconst {\n  confirm\n} = _Modal;\nconst cssPrefix = 'ftr-animals';\n\n// eslint-disable-next-line\nexport const Animals = props => {\n  _s();\n  const {\n    getAnimalListLoading,\n    getAnimalListSuccess,\n    animalList,\n    totalNumber,\n    currentPage,\n    addAnimalLoading,\n    updateAnimalLoading,\n    addAnimalSuccess,\n    pcoList,\n    setSelectedPcoId,\n    getAnimalListCall,\n    getAnimalListSuggestionCall,\n    addAnimalCall,\n    updateAnimalCall,\n    deleteAnimalCall,\n    selectedPcoId,\n    selectedAnimalId,\n    setSelectedAnimal,\n    uploadImageCall,\n    deleteImageCall\n  } = props;\n  const filterOptions = [\n  // { id: 'all', name: 'All' },\n  {\n    id: CURRENT,\n    name: 'Current Residents'\n  }, {\n    id: FORMER,\n    name: 'Former Residents'\n  }];\n  const [onLoad, setOnLoadFlag] = useState(true);\n  const [tableData, setTableData] = useState(JSON.parse(JSON.stringify(animalMock))); // eslint-disable-line\n  const [filteredTableData, setFilteredTableData] = useState(tableData);\n  const [tableFilter, setTableFilter] = useState(true);\n  const [addModalVisible, setAddModalVisible] = useState(false);\n  const [selectedRows, setSelectedRows] = useState([]);\n  const [editRecord, setEditRecord] = useState(null);\n  const [currentPageLocal, setCurrentPageLocal] = useState(1);\n  const [searchKey, setSearchKey] = useState('');\n  const [searchKeyFinal, setSearchKeyFinal] = useState('');\n  const [selectedId, setSelectedId] = useState('');\n  const [animalDataForDelete, setAnimalDataForDelete] = useState('');\n\n  /** Methods related to CRUD operations goes below * */\n\n  // eslint-disable-next-line no-unused-vars\n  const onDeleteAnimal = id => {\n    deleteAnimalCall({\n      id\n    }, () => {\n      getAnimalListCall({\n        length: pageLength,\n        page: currentPageLocal,\n        isDeleted: false,\n        isAvailable: tableFilter,\n        searchText: searchKey\n      }, () => console.log('get list of pco'));\n    });\n  };\n  const getAnimalMilestoneById = animalId => {\n    setAnimalDataForDelete('');\n    apiCall(`animal/get-animal-milestone/${animalId}`, 'GET', {}).then(resp => {\n      if (resp.status === 200) {\n        var _resp$data;\n        setAnimalDataForDelete(resp === null || resp === void 0 ? void 0 : (_resp$data = resp.data) === null || _resp$data === void 0 ? void 0 : _resp$data.data);\n      }\n    });\n  };\n  const deleteAllClicked = () => {\n    const myPromises = []; // eslint-disable-line\n  };\n\n  /** Navigate or move view to other components * */\n\n  const setAddModalVisibility = flag => {\n    setAddModalVisible(flag);\n  };\n  const onActionItemClick = (key, value) => {\n    if (key === 'wide-exposure') {\n      return;\n    }\n    if (String(value).includes('*')) {\n      if (selectedRows.length === 0) {\n        _message.warn({\n          content: 'You must select at least one animal',\n          style: {\n            marginTop: '2vh'\n          },\n          key: 'actionItemClick'\n        });\n      }\n    } else {\n      // eslint-disable-next-line no-lonely-if\n      if (selectedRows.length === 0) {\n        _message.warn({\n          content: 'You must select an animal',\n          style: {\n            marginTop: '2vh'\n          },\n          key: 'actionItemClick'\n        });\n      } else if (selectedRows.length > 1) {\n        _message.warn({\n          content: 'You may only select one animal',\n          style: {\n            marginTop: '2vh'\n          },\n          key: 'actionItemClick'\n        });\n      }\n    }\n  };\n  const onRefresh = () => {\n    setOnLoadFlag(true);\n  };\n\n  /** Business Logic goes below * */\n\n  const filterTableEntries = key => str => {\n    const newData = key && key !== '' && str && str !== '' ? tableData.filter(entry => entry[key].toLowerCase().includes(str.toLowerCase())) : tableData;\n    setFilteredTableData(newData);\n  };\n  const handleFilterChange = val => {\n    setSelectedAnimal([]);\n    setTableFilter(val === 'current');\n  };\n  const updateSelectedRows = records => {\n    const keys = records.length > 0 ? records.map(r => r.key) : [];\n    setSelectedRows(keys);\n  };\n  useEffect(() => {\n    getAnimalListCall({\n      length: pageLength,\n      page: currentPageLocal,\n      isDeleted: false,\n      isAvailable: tableFilter,\n      searchText: searchKeyFinal\n    }, () => console.log('get list of animal length'));\n  }, [currentPageLocal, tableFilter, searchKeyFinal]);\n  useEffect(() => {\n    if (!searchKey) {\n      setSearchKeyFinal('');\n      getAnimalListCall({\n        length: pageLength,\n        page: currentPageLocal,\n        isDeleted: false,\n        isAvailable: tableFilter,\n        searchText: ''\n      }, () => console.log('get list of animal length'));\n    }\n  }, [searchKey]);\n  useEffect(() => {\n    setSelectedAnimal('');\n  }, []);\n\n  /** All ReactElements or JSX Elements are below * */\n  const pageHeader = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${cssPrefix}__header-row`,\n    children: /*#__PURE__*/_jsxDEV(Title, {\n      level: 3,\n      style: {\n        margin: '16px 0'\n      },\n      children: \"Animals\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 5\n  }, this);\n  const filterSlot = /*#__PURE__*/_jsxDEV(_Select, {\n    className: `${cssPrefix}__ct__filter`,\n    defaultValue: filterOptions[0].id,\n    onChange: handleFilterChange,\n    children: filterOptions === null || filterOptions === void 0 ? void 0 : filterOptions.map(opt => /*#__PURE__*/_jsxDEV(Option, {\n      value: opt.id,\n      children: opt.name\n    }, opt.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 187,\n    columnNumber: 5\n  }, this);\n  const contentToolbar = /*#__PURE__*/_jsxDEV(ContentToolbar, {\n    selectedAnimalId: selectedAnimalId,\n    filterSlot: filterSlot,\n    searchKey: searchKey,\n    setSearchKey: setSearchKey,\n    setSearchKeyFinal: setSearchKeyFinal,\n    onAddIconClicked: setAddModalVisibility,\n    disableDeleteIcon: false,\n    onDeleteIconClicked: deleteAllClicked,\n    onActionItemClick: onActionItemClick,\n    onRefresh: () => onRefresh()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 5\n  }, this);\n  const nameColumnRenderer = (text, record) => /*#__PURE__*/_jsxDEV(_Space, {\n    align: \"baseline\",\n    size: \"middle\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this), record.flag ? /*#__PURE__*/_jsxDEV(FlagFilled, {\n      className: `${cssPrefix}__table-cell-flag${record.flag ? '--flagged' : ''}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 214,\n    columnNumber: 5\n  }, this);\n  const animalTypeRender = (text, record) => /*#__PURE__*/_jsxDEV(\"span\", {\n    children: pluralToSingular(record === null || record === void 0 ? void 0 : record.animalType)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 227,\n    columnNumber: 5\n  }, this);\n  const columnsConfig = [{\n    title: 'Name',\n    dataIndex: 'animalName',\n    sorter: (a, b) => a.animalName.localeCompare(b.animalName),\n    render: nameColumnRenderer\n  }, {\n    title: 'Type',\n    dataIndex: 'animalType',\n    sorter: (a, b) => {\n      var _a$animalType;\n      return a === null || a === void 0 ? void 0 : (_a$animalType = a.animalType) === null || _a$animalType === void 0 ? void 0 : _a$animalType.localeCompare(b === null || b === void 0 ? void 0 : b.animalType);\n    },\n    render: animalTypeRender\n  }, ...columns];\n\n  /** API calls and Hooks * */\n\n  if (onLoad) {\n    filterTableEntries('resident')('current');\n    setOnLoadFlag(false);\n  }\n  const setEditModalOpen = (value, data) => {\n    setEditRecord(data);\n    setAddModalVisible(value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${cssPrefix}`,\n    children: [contentToolbar, /*#__PURE__*/_jsxDEV(CustomTablePagination, {\n      config: {\n        rowSelection: 'checkbox',\n        selectedRow: selectedAnimalId,\n        setSelectedRow: setSelectedAnimal,\n        isNotEditable: false,\n        showHeader: true,\n        selectable: true,\n        tableType: 'Animals',\n        deleteConfirmationData: animalDataForDelete,\n        getDeleteConfirmationDetail: id => getAnimalMilestoneById(id)\n      },\n      totalNumber: totalNumber,\n      currentPage: currentPageLocal,\n      setPaginationData: setCurrentPageLocal,\n      tableData: animalList,\n      columnData: columnsConfig,\n      isLoading: getAnimalListLoading,\n      delete: id => onDeleteAnimal(id),\n      setEditModalOpen: (isOpen, data) => setEditModalOpen(isOpen, data)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AnimalsAddModal, {\n      pcoList: pcoList,\n      visible: addModalVisible,\n      editRecord: editRecord,\n      setEditRecord: setEditRecord,\n      selectedPcoId: selectedPcoId,\n      addAnimalCall: addAnimalCall,\n      getAnimalListCall: getAnimalListCall,\n      addAnimalLoading: addAnimalLoading,\n      updateAnimalCall: updateAnimalCall,\n      updateAnimalLoading: updateAnimalLoading,\n      setSelectedPcoId: setSelectedPcoId,\n      setSelectedAnimal: setSelectedAnimal,\n      selectedAnimalId: selectedAnimalId,\n      setAddModalVisibility: setAddModalVisibility,\n      setSearchKey: setSearchKey,\n      setSearchKeyFinal: setSearchKeyFinal,\n      uploadImageCall: uploadImageCall,\n      deleteImageCall: deleteImageCall,\n      getAnimalFilter: {\n        length: pageLength,\n        page: currentPageLocal,\n        isDeleted: false,\n        isAvailable: tableFilter,\n        searchText: searchKey\n      },\n      handleCancel: () => {\n        setAddModalVisibility(false);\n        setEditRecord(null);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 259,\n    columnNumber: 5\n  }, this);\n};\n_s(Animals, \"DwOH42jTfv5C9kcGBHuVmtGqcHA=\");\n_c = Animals;\nexport default Animals;\nvar _c;\n$RefreshReg$(_c, \"Animals\");","map":{"version":3,"names":["FlagFilled","useEffect","useState","AnimalsAddModal","ContentToolbar","columns","CURRENT","FORMER","animalMock","pageLength","apiCall","pluralToSingular","CustomTablePagination","Title","Option","confirm","cssPrefix","Animals","props","getAnimalListLoading","getAnimalListSuccess","animalList","totalNumber","currentPage","addAnimalLoading","updateAnimalLoading","addAnimalSuccess","pcoList","setSelectedPcoId","getAnimalListCall","getAnimalListSuggestionCall","addAnimalCall","updateAnimalCall","deleteAnimalCall","selectedPcoId","selectedAnimalId","setSelectedAnimal","uploadImageCall","deleteImageCall","filterOptions","id","name","onLoad","setOnLoadFlag","tableData","setTableData","JSON","parse","stringify","filteredTableData","setFilteredTableData","tableFilter","setTableFilter","addModalVisible","setAddModalVisible","selectedRows","setSelectedRows","editRecord","setEditRecord","currentPageLocal","setCurrentPageLocal","searchKey","setSearchKey","searchKeyFinal","setSearchKeyFinal","selectedId","setSelectedId","animalDataForDelete","setAnimalDataForDelete","onDeleteAnimal","length","page","isDeleted","isAvailable","searchText","console","log","getAnimalMilestoneById","animalId","then","resp","status","data","deleteAllClicked","myPromises","setAddModalVisibility","flag","onActionItemClick","key","value","String","includes","warn","content","style","marginTop","onRefresh","filterTableEntries","str","newData","filter","entry","toLowerCase","handleFilterChange","val","updateSelectedRows","records","keys","map","r","pageHeader","margin","filterSlot","opt","contentToolbar","nameColumnRenderer","text","record","animalTypeRender","animalType","columnsConfig","title","dataIndex","sorter","a","b","animalName","localeCompare","render","setEditModalOpen","rowSelection","selectedRow","setSelectedRow","isNotEditable","showHeader","selectable","tableType","deleteConfirmationData","getDeleteConfirmationDetail","isOpen"],"sources":["/Users/zhaoke/Desktop/TYR/TYR.WEB.CLIENT/src/components/animals/FtrAnimals.tsx"],"sourcesContent":["/* eslint-disable no-unused-vars */\nimport {\n  message, Modal, Select, Space, Typography,\n} from 'antd';\nimport {\n  FlagFilled,\n} from '@ant-design/icons';\nimport { useEffect, useState } from 'react';\nimport {\n  AnimalsProps, DataType, TableFilterOptions, TableFilterTypes,\n} from './FtrAnimals.types';\nimport './FtrAnimals.less';\nimport { AnimalsAddModal } from './components/AnimalsAddModal';\nimport { ContentToolbar } from './components/ContentToolbar';\nimport { columns, CURRENT, FORMER } from './FtrAnimals.data';\nimport { animalMock } from './animals-mock';\nimport { pageLength } from '../../shared/constants/pagination.json';\nimport { apiCall } from '../../shared/api/apiWrapper';\nimport { pluralToSingular } from '../../utils/pluralToSingular';\nimport CustomTablePagination from '../../shared/components/CustomTablePagination';\nimport BreadCrumb from '../../shared/components/BreadCrumb';\n\nconst { Title } = Typography;\nconst { Option } = Select;\nconst { confirm } = Modal;\n\nconst cssPrefix = 'ftr-animals';\n\n// eslint-disable-next-line\nexport const Animals = (props: AnimalsProps) => {\n  const {\n    getAnimalListLoading, getAnimalListSuccess, animalList, totalNumber, currentPage,\n    addAnimalLoading, updateAnimalLoading, addAnimalSuccess, pcoList, setSelectedPcoId,\n    getAnimalListCall, getAnimalListSuggestionCall, addAnimalCall, updateAnimalCall,\n    deleteAnimalCall, selectedPcoId, selectedAnimalId, setSelectedAnimal, uploadImageCall, deleteImageCall,\n  } = props;\n  const filterOptions: TableFilterOptions[] = [\n    // { id: 'all', name: 'All' },\n    { id: CURRENT, name: 'Current Residents' },\n    { id: FORMER, name: 'Former Residents' },\n  ];\n\n  const [onLoad, setOnLoadFlag] = useState(true);\n  const [tableData, setTableData] = useState(JSON.parse(JSON.stringify(animalMock))); // eslint-disable-line\n  const [filteredTableData, setFilteredTableData] = useState(tableData);\n  const [tableFilter, setTableFilter] = useState(true);\n  const [addModalVisible, setAddModalVisible] = useState(false);\n  const [selectedRows, setSelectedRows] = useState<React.Key[]>([]);\n  const [editRecord, setEditRecord] = useState(null);\n  const [currentPageLocal, setCurrentPageLocal] = useState(1);\n  const [searchKey, setSearchKey] = useState('');\n  const [searchKeyFinal, setSearchKeyFinal] = useState('');\n  const [selectedId, setSelectedId] = useState('');\n  const [animalDataForDelete, setAnimalDataForDelete] = useState<any>('');\n\n  /** Methods related to CRUD operations goes below * */\n\n  // eslint-disable-next-line no-unused-vars\n  const onDeleteAnimal = (id: string): void => {\n    deleteAnimalCall({ id }, () => {\n      getAnimalListCall({\n        length: pageLength,\n        page: currentPageLocal,\n        isDeleted: false,\n        isAvailable: tableFilter,\n        searchText: searchKey,\n      }, () => console.log('get list of pco'));\n    });\n  };\n\n  const getAnimalMilestoneById = (animalId: any) => {\n    setAnimalDataForDelete('');\n    apiCall(`animal/get-animal-milestone/${animalId}`, 'GET', {})\n      .then((resp: any) => {\n        if (resp.status === 200) {\n          setAnimalDataForDelete(resp?.data?.data);\n        }\n      });\n  };\n\n  const deleteAllClicked = () => {\n    const myPromises = []; // eslint-disable-line\n  };\n\n  /** Navigate or move view to other components * */\n\n  const setAddModalVisibility = (flag: boolean): void => {\n    setAddModalVisible(flag);\n  };\n\n  const onActionItemClick = (key: React.Key, value: string) => {\n    if (key === 'wide-exposure') {\n      return;\n    }\n    if (String(value).includes('*')) {\n      if (selectedRows.length === 0) {\n        message.warn({\n          content: 'You must select at least one animal',\n          style: {\n            marginTop: '2vh',\n          },\n          key: 'actionItemClick',\n        });\n      }\n    } else {\n      // eslint-disable-next-line no-lonely-if\n      if (selectedRows.length === 0) {\n        message.warn({\n          content: 'You must select an animal',\n          style: {\n            marginTop: '2vh',\n          },\n          key: 'actionItemClick',\n        });\n      } else if (selectedRows.length > 1) {\n        message.warn({\n          content: 'You may only select one animal',\n          style: {\n            marginTop: '2vh',\n          },\n          key: 'actionItemClick',\n        });\n      }\n    }\n  };\n\n  const onRefresh = () => {\n    setOnLoadFlag(true);\n  };\n\n  /** Business Logic goes below * */\n\n  const filterTableEntries = (key: string) => (str: string) => {\n    const newData: DataType[] = (key && key !== '') && (str && str !== '')\n      ? tableData.filter((entry: any) => entry[key].toLowerCase().includes(str.toLowerCase())) as DataType[]\n      : tableData as DataType[];\n    setFilteredTableData(newData as any);\n  };\n\n  const handleFilterChange = (val: TableFilterTypes) => {\n    setSelectedAnimal([]);\n    setTableFilter(val === 'current');\n  };\n\n  const updateSelectedRows = (records: DataType[]) => {\n    const keys: React.Key[] = records.length > 0 ? records.map((r) => r.key) : [];\n    setSelectedRows(keys);\n  };\n\n  useEffect(() => {\n    getAnimalListCall({\n      length: pageLength,\n      page: currentPageLocal,\n      isDeleted: false,\n      isAvailable: tableFilter,\n      searchText: searchKeyFinal,\n    }, () => console.log('get list of animal length'));\n  }, [currentPageLocal, tableFilter, searchKeyFinal]);\n\n  useEffect(() => {\n    if (!searchKey) {\n      setSearchKeyFinal('');\n      getAnimalListCall({\n        length: pageLength,\n        page: currentPageLocal,\n        isDeleted: false,\n        isAvailable: tableFilter,\n        searchText: '',\n      }, () => console.log('get list of animal length'));\n    }\n  }, [searchKey]);\n\n  useEffect(() => {\n    setSelectedAnimal('');\n  }, []);\n\n  /** All ReactElements or JSX Elements are below * */\n  const pageHeader = (\n    <div className={`${cssPrefix}__header-row`}>\n      <Title level={3} style={{ margin: '16px 0' }}>\n        Animals\n      </Title>\n    </div>\n  );\n\n  const filterSlot = (\n    <Select\n      className={`${cssPrefix}__ct__filter`}\n      defaultValue={filterOptions[0].id}\n      onChange={handleFilterChange}\n    >\n      {filterOptions?.map((opt) => (\n        <Option key={opt.id} value={opt.id}>{opt.name}</Option>\n      ))}\n    </Select>\n  );\n\n  const contentToolbar = (\n    <ContentToolbar\n      selectedAnimalId={selectedAnimalId}\n      filterSlot={filterSlot}\n      searchKey={searchKey}\n      setSearchKey={setSearchKey}\n      setSearchKeyFinal={setSearchKeyFinal}\n      onAddIconClicked={setAddModalVisibility}\n      disableDeleteIcon={false}\n      onDeleteIconClicked={deleteAllClicked}\n      onActionItemClick={onActionItemClick}\n      onRefresh={() => onRefresh()}\n    />\n  );\n\n  const nameColumnRenderer = (text: string, record: any) => (\n    <Space align=\"baseline\" size=\"middle\">\n      <span>\n        {text}\n      </span>\n      {record.flag ? (\n        <FlagFilled\n          className={`${cssPrefix}__table-cell-flag${record.flag ? '--flagged' : ''}`}\n        />\n      ) : <span />}\n    </Space>\n  );\n\n  const animalTypeRender = (text: string, record: any) => (\n    <span>{pluralToSingular(record?.animalType)}</span>\n  );\n\n  const columnsConfig = [\n    {\n      title: 'Name',\n      dataIndex: 'animalName',\n      sorter: (a: any, b: any) => a.animalName.localeCompare(b.animalName),\n      render: nameColumnRenderer,\n    },\n    {\n      title: 'Type',\n      dataIndex: 'animalType',\n      sorter: (a: any, b: any) => a?.animalType?.localeCompare(b?.animalType),\n      render: animalTypeRender,\n    },\n    ...columns,\n  ];\n\n  /** API calls and Hooks * */\n\n  if (onLoad) {\n    filterTableEntries('resident')('current');\n    setOnLoadFlag(false);\n  }\n\n  const setEditModalOpen = (value: boolean, data: any) => {\n    setEditRecord(data);\n    setAddModalVisible(value);\n  };\n\n  return (\n    <div className={`${cssPrefix}`}>\n      {/* {pageHeader} */}\n      {contentToolbar}\n      <CustomTablePagination\n        config={{\n          rowSelection: 'checkbox',\n          selectedRow: selectedAnimalId,\n          setSelectedRow: setSelectedAnimal,\n          isNotEditable: false,\n          showHeader: true,\n          selectable: true,\n          tableType: 'Animals',\n          deleteConfirmationData: animalDataForDelete,\n          getDeleteConfirmationDetail: (id: string) => getAnimalMilestoneById(id),\n        }}\n        totalNumber={totalNumber}\n        currentPage={currentPageLocal}\n        setPaginationData={setCurrentPageLocal}\n        tableData={animalList}\n        columnData={columnsConfig}\n        isLoading={getAnimalListLoading}\n        delete={(id: string) => onDeleteAnimal(id)}\n        setEditModalOpen={(isOpen: boolean, data: any) => setEditModalOpen(isOpen, data)}\n      />\n      {/* <SharedTable\n        columns={columnsConfig}\n        dataSource={animalList}\n        selectedRowKeys={selectedRows}\n        updateSelectedRows={updateSelectedRows}\n      /> */}\n      <AnimalsAddModal\n        pcoList={pcoList}\n        visible={addModalVisible}\n        editRecord={editRecord}\n        setEditRecord={setEditRecord}\n        selectedPcoId={selectedPcoId}\n        addAnimalCall={addAnimalCall}\n        getAnimalListCall={getAnimalListCall}\n        addAnimalLoading={addAnimalLoading}\n        updateAnimalCall={updateAnimalCall}\n        updateAnimalLoading={updateAnimalLoading}\n        setSelectedPcoId={setSelectedPcoId}\n        setSelectedAnimal={setSelectedAnimal}\n        selectedAnimalId={selectedAnimalId}\n        setAddModalVisibility={setAddModalVisibility}\n        setSearchKey={setSearchKey}\n        setSearchKeyFinal={setSearchKeyFinal}\n        uploadImageCall={uploadImageCall}\n        deleteImageCall={deleteImageCall}\n        getAnimalFilter={{\n          length: pageLength,\n          page: currentPageLocal,\n          isDeleted: false,\n          isAvailable: tableFilter,\n          searchText: searchKey,\n        }}\n        handleCancel={() => {\n          setAddModalVisibility(false);\n          setEditRecord(null);\n        }}\n      />\n    </div>\n  );\n};\n\nexport default Animals;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}