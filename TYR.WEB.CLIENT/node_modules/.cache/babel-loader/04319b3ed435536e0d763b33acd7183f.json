{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nvar _typeof3 = require(\"@babel/runtime/helpers/typeof\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = useSelection;\nexports.SELECTION_NONE = exports.SELECTION_INVERT = exports.SELECTION_ALL = void 0;\nvar _toArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toArray\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _DownOutlined = _interopRequireDefault(require(\"@ant-design/icons/DownOutlined\"));\nvar _treeUtil = require(\"rc-tree/lib/utils/treeUtil\");\nvar _conductUtil = require(\"rc-tree/lib/utils/conductUtil\");\nvar _util = require(\"rc-tree/lib/util\");\nvar _rcTable = require(\"rc-table\");\nvar _useMergedState3 = _interopRequireDefault(require(\"rc-util/lib/hooks/useMergedState\"));\nvar _checkbox = _interopRequireDefault(require(\"../../checkbox\"));\nvar _dropdown = _interopRequireDefault(require(\"../../dropdown\"));\nvar _menu = _interopRequireDefault(require(\"../../menu\"));\nvar _radio = _interopRequireDefault(require(\"../../radio\"));\nvar _devWarning = _interopRequireDefault(require(\"../../_util/devWarning\"));\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || _typeof3(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n  var cache = _getRequireWildcardCache(nodeInterop);\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj[\"default\"] = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\n\n// TODO: warning if use ajax!!!\nvar SELECTION_ALL = 'SELECT_ALL';\nexports.SELECTION_ALL = SELECTION_ALL;\nvar SELECTION_INVERT = 'SELECT_INVERT';\nexports.SELECTION_INVERT = SELECTION_INVERT;\nvar SELECTION_NONE = 'SELECT_NONE';\nexports.SELECTION_NONE = SELECTION_NONE;\nfunction getFixedType(column) {\n  return column && column.fixed;\n}\nfunction flattenData(data, childrenColumnName) {\n  var list = [];\n  (data || []).forEach(function (record) {\n    list.push(record);\n    if (record && (0, _typeof2[\"default\"])(record) === 'object' && childrenColumnName in record) {\n      list = [].concat((0, _toConsumableArray2[\"default\"])(list), (0, _toConsumableArray2[\"default\"])(flattenData(record[childrenColumnName], childrenColumnName)));\n    }\n  });\n  return list;\n}\nfunction useSelection(rowSelection, config) {\n  var _ref = rowSelection || {},\n    preserveSelectedRowKeys = _ref.preserveSelectedRowKeys,\n    selectedRowKeys = _ref.selectedRowKeys,\n    defaultSelectedRowKeys = _ref.defaultSelectedRowKeys,\n    getCheckboxProps = _ref.getCheckboxProps,\n    onSelectionChange = _ref.onChange,\n    onSelect = _ref.onSelect,\n    onSelectAll = _ref.onSelectAll,\n    onSelectInvert = _ref.onSelectInvert,\n    onSelectNone = _ref.onSelectNone,\n    onSelectMultiple = _ref.onSelectMultiple,\n    selectionColWidth = _ref.columnWidth,\n    selectionType = _ref.type,\n    selections = _ref.selections,\n    fixed = _ref.fixed,\n    customizeRenderCell = _ref.renderCell,\n    hideSelectAll = _ref.hideSelectAll,\n    _ref$checkStrictly = _ref.checkStrictly,\n    checkStrictly = _ref$checkStrictly === void 0 ? true : _ref$checkStrictly;\n  var prefixCls = config.prefixCls,\n    data = config.data,\n    pageData = config.pageData,\n    getRecordByKey = config.getRecordByKey,\n    getRowKey = config.getRowKey,\n    expandType = config.expandType,\n    childrenColumnName = config.childrenColumnName,\n    tableLocale = config.locale,\n    expandIconColumnIndex = config.expandIconColumnIndex,\n    getPopupContainer = config.getPopupContainer; // ========================= Keys =========================\n\n  var _useMergedState = (0, _useMergedState3[\"default\"])(selectedRowKeys || defaultSelectedRowKeys || [], {\n      value: selectedRowKeys\n    }),\n    _useMergedState2 = (0, _slicedToArray2[\"default\"])(_useMergedState, 2),\n    mergedSelectedKeys = _useMergedState2[0],\n    setMergedSelectedKeys = _useMergedState2[1]; // ======================== Caches ========================\n\n  var preserveRecordsRef = React.useRef(new Map());\n  var updatePreserveRecordsCache = (0, React.useCallback)(function (keys) {\n    if (preserveSelectedRowKeys) {\n      var newCache = new Map(); // Keep key if mark as preserveSelectedRowKeys\n\n      keys.forEach(function (key) {\n        var record = getRecordByKey(key);\n        if (!record && preserveRecordsRef.current.has(key)) {\n          record = preserveRecordsRef.current.get(key);\n        }\n        newCache.set(key, record);\n      }); // Refresh to new cache\n\n      preserveRecordsRef.current = newCache;\n    }\n  }, [getRecordByKey, preserveSelectedRowKeys]); // Update cache with selectedKeys\n\n  React.useEffect(function () {\n    updatePreserveRecordsCache(mergedSelectedKeys);\n  }, [mergedSelectedKeys]);\n  var _useMemo = (0, React.useMemo)(function () {\n      return checkStrictly ? {\n        keyEntities: null\n      } : (0, _treeUtil.convertDataToEntities)(data, {\n        externalGetKey: getRowKey,\n        childrenPropName: childrenColumnName\n      });\n    }, [data, getRowKey, checkStrictly, childrenColumnName]),\n    keyEntities = _useMemo.keyEntities; // Get flatten data\n\n  var flattedData = (0, React.useMemo)(function () {\n    return flattenData(pageData, childrenColumnName);\n  }, [pageData, childrenColumnName]); // Get all checkbox props\n\n  var checkboxPropsMap = (0, React.useMemo)(function () {\n    var map = new Map();\n    flattedData.forEach(function (record, index) {\n      var key = getRowKey(record, index);\n      var checkboxProps = (getCheckboxProps ? getCheckboxProps(record) : null) || {};\n      map.set(key, checkboxProps);\n      if (process.env.NODE_ENV !== 'production' && ('checked' in checkboxProps || 'defaultChecked' in checkboxProps)) {\n        (0, _devWarning[\"default\"])(false, 'Table', 'Do not set `checked` or `defaultChecked` in `getCheckboxProps`. Please use `selectedRowKeys` instead.');\n      }\n    });\n    return map;\n  }, [flattedData, getRowKey, getCheckboxProps]);\n  var isCheckboxDisabled = (0, React.useCallback)(function (r) {\n    var _a;\n    return !!((_a = checkboxPropsMap.get(getRowKey(r))) === null || _a === void 0 ? void 0 : _a.disabled);\n  }, [checkboxPropsMap, getRowKey]);\n  var _useMemo2 = (0, React.useMemo)(function () {\n      if (checkStrictly) {\n        return [mergedSelectedKeys || [], []];\n      }\n      var _conductCheck = (0, _conductUtil.conductCheck)(mergedSelectedKeys, true, keyEntities, isCheckboxDisabled),\n        checkedKeys = _conductCheck.checkedKeys,\n        halfCheckedKeys = _conductCheck.halfCheckedKeys;\n      return [checkedKeys || [], halfCheckedKeys];\n    }, [mergedSelectedKeys, checkStrictly, keyEntities, isCheckboxDisabled]),\n    _useMemo3 = (0, _slicedToArray2[\"default\"])(_useMemo2, 2),\n    derivedSelectedKeys = _useMemo3[0],\n    derivedHalfSelectedKeys = _useMemo3[1];\n  var derivedSelectedKeySet = (0, React.useMemo)(function () {\n    var keys = selectionType === 'radio' ? derivedSelectedKeys.slice(0, 1) : derivedSelectedKeys;\n    return new Set(keys);\n  }, [derivedSelectedKeys, selectionType]);\n  var derivedHalfSelectedKeySet = (0, React.useMemo)(function () {\n    return selectionType === 'radio' ? new Set() : new Set(derivedHalfSelectedKeys);\n  }, [derivedHalfSelectedKeys, selectionType]); // Save last selected key to enable range selection\n\n  var _useState = (0, React.useState)(null),\n    _useState2 = (0, _slicedToArray2[\"default\"])(_useState, 2),\n    lastSelectedKey = _useState2[0],\n    setLastSelectedKey = _useState2[1]; // Reset if rowSelection reset\n\n  React.useEffect(function () {\n    if (!rowSelection) {\n      setMergedSelectedKeys([]);\n    }\n  }, [!!rowSelection]);\n  var setSelectedKeys = (0, React.useCallback)(function (keys) {\n    var availableKeys;\n    var records;\n    updatePreserveRecordsCache(keys);\n    if (preserveSelectedRowKeys) {\n      availableKeys = keys;\n      records = keys.map(function (key) {\n        return preserveRecordsRef.current.get(key);\n      });\n    } else {\n      // Filter key which not exist in the `dataSource`\n      availableKeys = [];\n      records = [];\n      keys.forEach(function (key) {\n        var record = getRecordByKey(key);\n        if (record !== undefined) {\n          availableKeys.push(key);\n          records.push(record);\n        }\n      });\n    }\n    setMergedSelectedKeys(availableKeys);\n    onSelectionChange === null || onSelectionChange === void 0 ? void 0 : onSelectionChange(availableKeys, records);\n  }, [setMergedSelectedKeys, getRecordByKey, onSelectionChange, preserveSelectedRowKeys]); // ====================== Selections ======================\n  // Trigger single `onSelect` event\n\n  var triggerSingleSelection = (0, React.useCallback)(function (key, selected, keys, event) {\n    if (onSelect) {\n      var rows = keys.map(function (k) {\n        return getRecordByKey(k);\n      });\n      onSelect(getRecordByKey(key), selected, rows, event);\n    }\n    setSelectedKeys(keys);\n  }, [onSelect, getRecordByKey, setSelectedKeys]);\n  var mergedSelections = (0, React.useMemo)(function () {\n    if (!selections || hideSelectAll) {\n      return null;\n    }\n    var selectionList = selections === true ? [SELECTION_ALL, SELECTION_INVERT, SELECTION_NONE] : selections;\n    return selectionList.map(function (selection) {\n      if (selection === SELECTION_ALL) {\n        return {\n          key: 'all',\n          text: tableLocale.selectionAll,\n          onSelect: function onSelect() {\n            setSelectedKeys(data.map(function (record, index) {\n              return getRowKey(record, index);\n            }));\n          }\n        };\n      }\n      if (selection === SELECTION_INVERT) {\n        return {\n          key: 'invert',\n          text: tableLocale.selectInvert,\n          onSelect: function onSelect() {\n            var keySet = new Set(derivedSelectedKeySet);\n            pageData.forEach(function (record, index) {\n              var key = getRowKey(record, index);\n              if (keySet.has(key)) {\n                keySet[\"delete\"](key);\n              } else {\n                keySet.add(key);\n              }\n            });\n            var keys = Array.from(keySet);\n            if (onSelectInvert) {\n              (0, _devWarning[\"default\"])(false, 'Table', '`onSelectInvert` will be removed in future. Please use `onChange` instead.');\n              onSelectInvert(keys);\n            }\n            setSelectedKeys(keys);\n          }\n        };\n      }\n      if (selection === SELECTION_NONE) {\n        return {\n          key: 'none',\n          text: tableLocale.selectNone,\n          onSelect: function onSelect() {\n            onSelectNone === null || onSelectNone === void 0 ? void 0 : onSelectNone();\n            setSelectedKeys([]);\n          }\n        };\n      }\n      return selection;\n    });\n  }, [selections, derivedSelectedKeySet, pageData, getRowKey, onSelectInvert, setSelectedKeys]); // ======================= Columns ========================\n\n  var transformColumns = (0, React.useCallback)(function (columns) {\n    if (!rowSelection) {\n      return columns;\n    } // Support selection\n\n    var keySet = new Set(derivedSelectedKeySet); // Record key only need check with enabled\n\n    var recordKeys = flattedData.map(getRowKey).filter(function (key) {\n      return !checkboxPropsMap.get(key).disabled;\n    });\n    var checkedCurrentAll = recordKeys.every(function (key) {\n      return keySet.has(key);\n    });\n    var checkedCurrentSome = recordKeys.some(function (key) {\n      return keySet.has(key);\n    });\n    var onSelectAllChange = function onSelectAllChange() {\n      var changeKeys = [];\n      if (checkedCurrentAll) {\n        recordKeys.forEach(function (key) {\n          keySet[\"delete\"](key);\n          changeKeys.push(key);\n        });\n      } else {\n        recordKeys.forEach(function (key) {\n          if (!keySet.has(key)) {\n            keySet.add(key);\n            changeKeys.push(key);\n          }\n        });\n      }\n      var keys = Array.from(keySet);\n      onSelectAll === null || onSelectAll === void 0 ? void 0 : onSelectAll(!checkedCurrentAll, keys.map(function (k) {\n        return getRecordByKey(k);\n      }), changeKeys.map(function (k) {\n        return getRecordByKey(k);\n      }));\n      setSelectedKeys(keys);\n    }; // ===================== Render =====================\n    // Title Cell\n\n    var title;\n    if (selectionType !== 'radio') {\n      var customizeSelections;\n      if (mergedSelections) {\n        var menu = /*#__PURE__*/React.createElement(_menu[\"default\"], {\n          getPopupContainer: getPopupContainer\n        }, mergedSelections.map(function (selection, index) {\n          var key = selection.key,\n            text = selection.text,\n            onSelectionClick = selection.onSelect;\n          return /*#__PURE__*/React.createElement(_menu[\"default\"].Item, {\n            key: key || index,\n            onClick: function onClick() {\n              onSelectionClick === null || onSelectionClick === void 0 ? void 0 : onSelectionClick(recordKeys);\n            }\n          }, text);\n        }));\n        customizeSelections = /*#__PURE__*/React.createElement(\"div\", {\n          className: \"\".concat(prefixCls, \"-selection-extra\")\n        }, /*#__PURE__*/React.createElement(_dropdown[\"default\"], {\n          overlay: menu,\n          getPopupContainer: getPopupContainer\n        }, /*#__PURE__*/React.createElement(\"span\", null, /*#__PURE__*/React.createElement(_DownOutlined[\"default\"], null))));\n      }\n      var allDisabledData = flattedData.map(function (record, index) {\n        var key = getRowKey(record, index);\n        var checkboxProps = checkboxPropsMap.get(key) || {};\n        return (0, _extends2[\"default\"])({\n          checked: keySet.has(key)\n        }, checkboxProps);\n      }).filter(function (_ref2) {\n        var disabled = _ref2.disabled;\n        return disabled;\n      });\n      var allDisabled = !!allDisabledData.length && allDisabledData.length === flattedData.length;\n      var allDisabledAndChecked = allDisabled && allDisabledData.every(function (_ref3) {\n        var checked = _ref3.checked;\n        return checked;\n      });\n      var allDisabledSomeChecked = allDisabled && allDisabledData.some(function (_ref4) {\n        var checked = _ref4.checked;\n        return checked;\n      });\n      title = !hideSelectAll && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-selection\")\n      }, /*#__PURE__*/React.createElement(_checkbox[\"default\"], {\n        checked: !allDisabled ? !!flattedData.length && checkedCurrentAll : allDisabledAndChecked,\n        indeterminate: !allDisabled ? !checkedCurrentAll && checkedCurrentSome : !allDisabledAndChecked && allDisabledSomeChecked,\n        onChange: onSelectAllChange,\n        disabled: flattedData.length === 0 || allDisabled,\n        skipGroup: true\n      }), customizeSelections);\n    } // Body Cell\n\n    var renderCell;\n    if (selectionType === 'radio') {\n      renderCell = function renderCell(_, record, index) {\n        var key = getRowKey(record, index);\n        var checked = keySet.has(key);\n        return {\n          node: /*#__PURE__*/React.createElement(_radio[\"default\"], (0, _extends2[\"default\"])({}, checkboxPropsMap.get(key), {\n            checked: checked,\n            onClick: function onClick(e) {\n              return e.stopPropagation();\n            },\n            onChange: function onChange(event) {\n              if (!keySet.has(key)) {\n                triggerSingleSelection(key, true, [key], event.nativeEvent);\n              }\n            }\n          })),\n          checked: checked\n        };\n      };\n    } else {\n      renderCell = function renderCell(_, record, index) {\n        var _a;\n        var key = getRowKey(record, index);\n        var checked = keySet.has(key);\n        var indeterminate = derivedHalfSelectedKeySet.has(key);\n        var checkboxProps = checkboxPropsMap.get(key);\n        var mergedIndeterminate;\n        if (expandType === 'nest') {\n          mergedIndeterminate = indeterminate;\n          (0, _devWarning[\"default\"])(typeof (checkboxProps === null || checkboxProps === void 0 ? void 0 : checkboxProps.indeterminate) !== 'boolean', 'Table', 'set `indeterminate` using `rowSelection.getCheckboxProps` is not allowed with tree structured dataSource.');\n        } else {\n          mergedIndeterminate = (_a = checkboxProps === null || checkboxProps === void 0 ? void 0 : checkboxProps.indeterminate) !== null && _a !== void 0 ? _a : indeterminate;\n        } // Record checked\n\n        return {\n          node: /*#__PURE__*/React.createElement(_checkbox[\"default\"], (0, _extends2[\"default\"])({}, checkboxProps, {\n            indeterminate: mergedIndeterminate,\n            checked: checked,\n            skipGroup: true,\n            onClick: function onClick(e) {\n              return e.stopPropagation();\n            },\n            onChange: function onChange(_ref5) {\n              var nativeEvent = _ref5.nativeEvent;\n              var shiftKey = nativeEvent.shiftKey;\n              var startIndex = -1;\n              var endIndex = -1; // Get range of this\n\n              if (shiftKey && checkStrictly) {\n                var pointKeys = new Set([lastSelectedKey, key]);\n                recordKeys.some(function (recordKey, recordIndex) {\n                  if (pointKeys.has(recordKey)) {\n                    if (startIndex === -1) {\n                      startIndex = recordIndex;\n                    } else {\n                      endIndex = recordIndex;\n                      return true;\n                    }\n                  }\n                  return false;\n                });\n              }\n              if (endIndex !== -1 && startIndex !== endIndex && checkStrictly) {\n                // Batch update selections\n                var rangeKeys = recordKeys.slice(startIndex, endIndex + 1);\n                var changedKeys = [];\n                if (checked) {\n                  rangeKeys.forEach(function (recordKey) {\n                    if (keySet.has(recordKey)) {\n                      changedKeys.push(recordKey);\n                      keySet[\"delete\"](recordKey);\n                    }\n                  });\n                } else {\n                  rangeKeys.forEach(function (recordKey) {\n                    if (!keySet.has(recordKey)) {\n                      changedKeys.push(recordKey);\n                      keySet.add(recordKey);\n                    }\n                  });\n                }\n                var keys = Array.from(keySet);\n                onSelectMultiple === null || onSelectMultiple === void 0 ? void 0 : onSelectMultiple(!checked, keys.map(function (recordKey) {\n                  return getRecordByKey(recordKey);\n                }), changedKeys.map(function (recordKey) {\n                  return getRecordByKey(recordKey);\n                }));\n                setSelectedKeys(keys);\n              } else {\n                // Single record selected\n                var originCheckedKeys = derivedSelectedKeys;\n                if (checkStrictly) {\n                  var checkedKeys = checked ? (0, _util.arrDel)(originCheckedKeys, key) : (0, _util.arrAdd)(originCheckedKeys, key);\n                  triggerSingleSelection(key, !checked, checkedKeys, nativeEvent);\n                } else {\n                  // Always fill first\n                  var result = (0, _conductUtil.conductCheck)([].concat((0, _toConsumableArray2[\"default\"])(originCheckedKeys), [key]), true, keyEntities, isCheckboxDisabled);\n                  var _checkedKeys = result.checkedKeys,\n                    halfCheckedKeys = result.halfCheckedKeys;\n                  var nextCheckedKeys = _checkedKeys; // If remove, we do it again to correction\n\n                  if (checked) {\n                    var tempKeySet = new Set(_checkedKeys);\n                    tempKeySet[\"delete\"](key);\n                    nextCheckedKeys = (0, _conductUtil.conductCheck)(Array.from(tempKeySet), {\n                      checked: false,\n                      halfCheckedKeys: halfCheckedKeys\n                    }, keyEntities, isCheckboxDisabled).checkedKeys;\n                  }\n                  triggerSingleSelection(key, !checked, nextCheckedKeys, nativeEvent);\n                }\n              }\n              setLastSelectedKey(key);\n            }\n          })),\n          checked: checked\n        };\n      };\n    }\n    var renderSelectionCell = function renderSelectionCell(_, record, index) {\n      var _renderCell = renderCell(_, record, index),\n        node = _renderCell.node,\n        checked = _renderCell.checked;\n      if (customizeRenderCell) {\n        return customizeRenderCell(checked, record, index, node);\n      }\n      return node;\n    }; // Columns\n\n    var selectionColumn = (0, _defineProperty2[\"default\"])({\n      width: selectionColWidth,\n      className: \"\".concat(prefixCls, \"-selection-column\"),\n      title: rowSelection.columnTitle || title,\n      render: renderSelectionCell\n    }, _rcTable.INTERNAL_COL_DEFINE, {\n      className: \"\".concat(prefixCls, \"-selection-col\")\n    });\n    if (expandType === 'row' && columns.length && !expandIconColumnIndex) {\n      var _columns = (0, _toArray2[\"default\"])(columns),\n        expandColumn = _columns[0],\n        restColumns = _columns.slice(1);\n      var selectionFixed = fixed || getFixedType(restColumns[0]);\n      if (selectionFixed) {\n        expandColumn.fixed = selectionFixed;\n      }\n      return [expandColumn, (0, _extends2[\"default\"])((0, _extends2[\"default\"])({}, selectionColumn), {\n        fixed: selectionFixed\n      })].concat((0, _toConsumableArray2[\"default\"])(restColumns));\n    }\n    return [(0, _extends2[\"default\"])((0, _extends2[\"default\"])({}, selectionColumn), {\n      fixed: fixed || getFixedType(columns[0])\n    })].concat((0, _toConsumableArray2[\"default\"])(columns));\n  }, [getRowKey, flattedData, rowSelection, derivedSelectedKeys, derivedSelectedKeySet, derivedHalfSelectedKeySet, selectionColWidth, mergedSelections, expandType, lastSelectedKey, checkboxPropsMap, onSelectMultiple, triggerSingleSelection, isCheckboxDisabled]);\n  return [transformColumns, derivedSelectedKeySet];\n}","map":{"version":3,"names":["_interopRequireDefault","require","_typeof3","Object","defineProperty","exports","value","useSelection","SELECTION_NONE","SELECTION_INVERT","SELECTION_ALL","_toArray2","_defineProperty2","_extends2","_slicedToArray2","_toConsumableArray2","_typeof2","React","_interopRequireWildcard","_DownOutlined","_treeUtil","_conductUtil","_util","_rcTable","_useMergedState3","_checkbox","_dropdown","_menu","_radio","_devWarning","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","cache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","getFixedType","column","fixed","flattenData","data","childrenColumnName","list","forEach","record","push","concat","rowSelection","config","_ref","preserveSelectedRowKeys","selectedRowKeys","defaultSelectedRowKeys","getCheckboxProps","onSelectionChange","onChange","onSelect","onSelectAll","onSelectInvert","onSelectNone","onSelectMultiple","selectionColWidth","columnWidth","selectionType","type","selections","customizeRenderCell","renderCell","hideSelectAll","_ref$checkStrictly","checkStrictly","prefixCls","pageData","getRecordByKey","getRowKey","expandType","tableLocale","locale","expandIconColumnIndex","getPopupContainer","_useMergedState","_useMergedState2","mergedSelectedKeys","setMergedSelectedKeys","preserveRecordsRef","useRef","Map","updatePreserveRecordsCache","useCallback","keys","newCache","current","useEffect","_useMemo","useMemo","keyEntities","convertDataToEntities","externalGetKey","childrenPropName","flattedData","checkboxPropsMap","map","index","checkboxProps","process","env","NODE_ENV","isCheckboxDisabled","r","_a","disabled","_useMemo2","_conductCheck","conductCheck","checkedKeys","halfCheckedKeys","_useMemo3","derivedSelectedKeys","derivedHalfSelectedKeys","derivedSelectedKeySet","slice","Set","derivedHalfSelectedKeySet","_useState","useState","_useState2","lastSelectedKey","setLastSelectedKey","setSelectedKeys","availableKeys","records","undefined","triggerSingleSelection","selected","event","rows","k","mergedSelections","selectionList","selection","text","selectionAll","selectInvert","keySet","add","Array","from","selectNone","transformColumns","columns","recordKeys","filter","checkedCurrentAll","every","checkedCurrentSome","some","onSelectAllChange","changeKeys","title","customizeSelections","menu","createElement","onSelectionClick","Item","onClick","className","overlay","allDisabledData","checked","_ref2","allDisabled","length","allDisabledAndChecked","_ref3","allDisabledSomeChecked","_ref4","indeterminate","skipGroup","_","node","e","stopPropagation","nativeEvent","mergedIndeterminate","_ref5","shiftKey","startIndex","endIndex","pointKeys","recordKey","recordIndex","rangeKeys","changedKeys","originCheckedKeys","arrDel","arrAdd","result","_checkedKeys","nextCheckedKeys","tempKeySet","renderSelectionCell","_renderCell","selectionColumn","width","columnTitle","render","INTERNAL_COL_DEFINE","_columns","expandColumn","restColumns","selectionFixed"],"sources":["/Users/zhaoke/Desktop/TYR/TYR.WEB.CLIENT/node_modules/antd/lib/table/hooks/useSelection.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof3 = require(\"@babel/runtime/helpers/typeof\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = useSelection;\nexports.SELECTION_NONE = exports.SELECTION_INVERT = exports.SELECTION_ALL = void 0;\n\nvar _toArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toArray\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _DownOutlined = _interopRequireDefault(require(\"@ant-design/icons/DownOutlined\"));\n\nvar _treeUtil = require(\"rc-tree/lib/utils/treeUtil\");\n\nvar _conductUtil = require(\"rc-tree/lib/utils/conductUtil\");\n\nvar _util = require(\"rc-tree/lib/util\");\n\nvar _rcTable = require(\"rc-table\");\n\nvar _useMergedState3 = _interopRequireDefault(require(\"rc-util/lib/hooks/useMergedState\"));\n\nvar _checkbox = _interopRequireDefault(require(\"../../checkbox\"));\n\nvar _dropdown = _interopRequireDefault(require(\"../../dropdown\"));\n\nvar _menu = _interopRequireDefault(require(\"../../menu\"));\n\nvar _radio = _interopRequireDefault(require(\"../../radio\"));\n\nvar _devWarning = _interopRequireDefault(require(\"../../_util/devWarning\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof3(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n// TODO: warning if use ajax!!!\nvar SELECTION_ALL = 'SELECT_ALL';\nexports.SELECTION_ALL = SELECTION_ALL;\nvar SELECTION_INVERT = 'SELECT_INVERT';\nexports.SELECTION_INVERT = SELECTION_INVERT;\nvar SELECTION_NONE = 'SELECT_NONE';\nexports.SELECTION_NONE = SELECTION_NONE;\n\nfunction getFixedType(column) {\n  return column && column.fixed;\n}\n\nfunction flattenData(data, childrenColumnName) {\n  var list = [];\n  (data || []).forEach(function (record) {\n    list.push(record);\n\n    if (record && (0, _typeof2[\"default\"])(record) === 'object' && childrenColumnName in record) {\n      list = [].concat((0, _toConsumableArray2[\"default\"])(list), (0, _toConsumableArray2[\"default\"])(flattenData(record[childrenColumnName], childrenColumnName)));\n    }\n  });\n  return list;\n}\n\nfunction useSelection(rowSelection, config) {\n  var _ref = rowSelection || {},\n      preserveSelectedRowKeys = _ref.preserveSelectedRowKeys,\n      selectedRowKeys = _ref.selectedRowKeys,\n      defaultSelectedRowKeys = _ref.defaultSelectedRowKeys,\n      getCheckboxProps = _ref.getCheckboxProps,\n      onSelectionChange = _ref.onChange,\n      onSelect = _ref.onSelect,\n      onSelectAll = _ref.onSelectAll,\n      onSelectInvert = _ref.onSelectInvert,\n      onSelectNone = _ref.onSelectNone,\n      onSelectMultiple = _ref.onSelectMultiple,\n      selectionColWidth = _ref.columnWidth,\n      selectionType = _ref.type,\n      selections = _ref.selections,\n      fixed = _ref.fixed,\n      customizeRenderCell = _ref.renderCell,\n      hideSelectAll = _ref.hideSelectAll,\n      _ref$checkStrictly = _ref.checkStrictly,\n      checkStrictly = _ref$checkStrictly === void 0 ? true : _ref$checkStrictly;\n\n  var prefixCls = config.prefixCls,\n      data = config.data,\n      pageData = config.pageData,\n      getRecordByKey = config.getRecordByKey,\n      getRowKey = config.getRowKey,\n      expandType = config.expandType,\n      childrenColumnName = config.childrenColumnName,\n      tableLocale = config.locale,\n      expandIconColumnIndex = config.expandIconColumnIndex,\n      getPopupContainer = config.getPopupContainer; // ========================= Keys =========================\n\n  var _useMergedState = (0, _useMergedState3[\"default\"])(selectedRowKeys || defaultSelectedRowKeys || [], {\n    value: selectedRowKeys\n  }),\n      _useMergedState2 = (0, _slicedToArray2[\"default\"])(_useMergedState, 2),\n      mergedSelectedKeys = _useMergedState2[0],\n      setMergedSelectedKeys = _useMergedState2[1]; // ======================== Caches ========================\n\n\n  var preserveRecordsRef = React.useRef(new Map());\n  var updatePreserveRecordsCache = (0, React.useCallback)(function (keys) {\n    if (preserveSelectedRowKeys) {\n      var newCache = new Map(); // Keep key if mark as preserveSelectedRowKeys\n\n      keys.forEach(function (key) {\n        var record = getRecordByKey(key);\n\n        if (!record && preserveRecordsRef.current.has(key)) {\n          record = preserveRecordsRef.current.get(key);\n        }\n\n        newCache.set(key, record);\n      }); // Refresh to new cache\n\n      preserveRecordsRef.current = newCache;\n    }\n  }, [getRecordByKey, preserveSelectedRowKeys]); // Update cache with selectedKeys\n\n  React.useEffect(function () {\n    updatePreserveRecordsCache(mergedSelectedKeys);\n  }, [mergedSelectedKeys]);\n\n  var _useMemo = (0, React.useMemo)(function () {\n    return checkStrictly ? {\n      keyEntities: null\n    } : (0, _treeUtil.convertDataToEntities)(data, {\n      externalGetKey: getRowKey,\n      childrenPropName: childrenColumnName\n    });\n  }, [data, getRowKey, checkStrictly, childrenColumnName]),\n      keyEntities = _useMemo.keyEntities; // Get flatten data\n\n\n  var flattedData = (0, React.useMemo)(function () {\n    return flattenData(pageData, childrenColumnName);\n  }, [pageData, childrenColumnName]); // Get all checkbox props\n\n  var checkboxPropsMap = (0, React.useMemo)(function () {\n    var map = new Map();\n    flattedData.forEach(function (record, index) {\n      var key = getRowKey(record, index);\n      var checkboxProps = (getCheckboxProps ? getCheckboxProps(record) : null) || {};\n      map.set(key, checkboxProps);\n\n      if (process.env.NODE_ENV !== 'production' && ('checked' in checkboxProps || 'defaultChecked' in checkboxProps)) {\n        (0, _devWarning[\"default\"])(false, 'Table', 'Do not set `checked` or `defaultChecked` in `getCheckboxProps`. Please use `selectedRowKeys` instead.');\n      }\n    });\n    return map;\n  }, [flattedData, getRowKey, getCheckboxProps]);\n  var isCheckboxDisabled = (0, React.useCallback)(function (r) {\n    var _a;\n\n    return !!((_a = checkboxPropsMap.get(getRowKey(r))) === null || _a === void 0 ? void 0 : _a.disabled);\n  }, [checkboxPropsMap, getRowKey]);\n\n  var _useMemo2 = (0, React.useMemo)(function () {\n    if (checkStrictly) {\n      return [mergedSelectedKeys || [], []];\n    }\n\n    var _conductCheck = (0, _conductUtil.conductCheck)(mergedSelectedKeys, true, keyEntities, isCheckboxDisabled),\n        checkedKeys = _conductCheck.checkedKeys,\n        halfCheckedKeys = _conductCheck.halfCheckedKeys;\n\n    return [checkedKeys || [], halfCheckedKeys];\n  }, [mergedSelectedKeys, checkStrictly, keyEntities, isCheckboxDisabled]),\n      _useMemo3 = (0, _slicedToArray2[\"default\"])(_useMemo2, 2),\n      derivedSelectedKeys = _useMemo3[0],\n      derivedHalfSelectedKeys = _useMemo3[1];\n\n  var derivedSelectedKeySet = (0, React.useMemo)(function () {\n    var keys = selectionType === 'radio' ? derivedSelectedKeys.slice(0, 1) : derivedSelectedKeys;\n    return new Set(keys);\n  }, [derivedSelectedKeys, selectionType]);\n  var derivedHalfSelectedKeySet = (0, React.useMemo)(function () {\n    return selectionType === 'radio' ? new Set() : new Set(derivedHalfSelectedKeys);\n  }, [derivedHalfSelectedKeys, selectionType]); // Save last selected key to enable range selection\n\n  var _useState = (0, React.useState)(null),\n      _useState2 = (0, _slicedToArray2[\"default\"])(_useState, 2),\n      lastSelectedKey = _useState2[0],\n      setLastSelectedKey = _useState2[1]; // Reset if rowSelection reset\n\n\n  React.useEffect(function () {\n    if (!rowSelection) {\n      setMergedSelectedKeys([]);\n    }\n  }, [!!rowSelection]);\n  var setSelectedKeys = (0, React.useCallback)(function (keys) {\n    var availableKeys;\n    var records;\n    updatePreserveRecordsCache(keys);\n\n    if (preserveSelectedRowKeys) {\n      availableKeys = keys;\n      records = keys.map(function (key) {\n        return preserveRecordsRef.current.get(key);\n      });\n    } else {\n      // Filter key which not exist in the `dataSource`\n      availableKeys = [];\n      records = [];\n      keys.forEach(function (key) {\n        var record = getRecordByKey(key);\n\n        if (record !== undefined) {\n          availableKeys.push(key);\n          records.push(record);\n        }\n      });\n    }\n\n    setMergedSelectedKeys(availableKeys);\n    onSelectionChange === null || onSelectionChange === void 0 ? void 0 : onSelectionChange(availableKeys, records);\n  }, [setMergedSelectedKeys, getRecordByKey, onSelectionChange, preserveSelectedRowKeys]); // ====================== Selections ======================\n  // Trigger single `onSelect` event\n\n  var triggerSingleSelection = (0, React.useCallback)(function (key, selected, keys, event) {\n    if (onSelect) {\n      var rows = keys.map(function (k) {\n        return getRecordByKey(k);\n      });\n      onSelect(getRecordByKey(key), selected, rows, event);\n    }\n\n    setSelectedKeys(keys);\n  }, [onSelect, getRecordByKey, setSelectedKeys]);\n  var mergedSelections = (0, React.useMemo)(function () {\n    if (!selections || hideSelectAll) {\n      return null;\n    }\n\n    var selectionList = selections === true ? [SELECTION_ALL, SELECTION_INVERT, SELECTION_NONE] : selections;\n    return selectionList.map(function (selection) {\n      if (selection === SELECTION_ALL) {\n        return {\n          key: 'all',\n          text: tableLocale.selectionAll,\n          onSelect: function onSelect() {\n            setSelectedKeys(data.map(function (record, index) {\n              return getRowKey(record, index);\n            }));\n          }\n        };\n      }\n\n      if (selection === SELECTION_INVERT) {\n        return {\n          key: 'invert',\n          text: tableLocale.selectInvert,\n          onSelect: function onSelect() {\n            var keySet = new Set(derivedSelectedKeySet);\n            pageData.forEach(function (record, index) {\n              var key = getRowKey(record, index);\n\n              if (keySet.has(key)) {\n                keySet[\"delete\"](key);\n              } else {\n                keySet.add(key);\n              }\n            });\n            var keys = Array.from(keySet);\n\n            if (onSelectInvert) {\n              (0, _devWarning[\"default\"])(false, 'Table', '`onSelectInvert` will be removed in future. Please use `onChange` instead.');\n              onSelectInvert(keys);\n            }\n\n            setSelectedKeys(keys);\n          }\n        };\n      }\n\n      if (selection === SELECTION_NONE) {\n        return {\n          key: 'none',\n          text: tableLocale.selectNone,\n          onSelect: function onSelect() {\n            onSelectNone === null || onSelectNone === void 0 ? void 0 : onSelectNone();\n            setSelectedKeys([]);\n          }\n        };\n      }\n\n      return selection;\n    });\n  }, [selections, derivedSelectedKeySet, pageData, getRowKey, onSelectInvert, setSelectedKeys]); // ======================= Columns ========================\n\n  var transformColumns = (0, React.useCallback)(function (columns) {\n    if (!rowSelection) {\n      return columns;\n    } // Support selection\n\n\n    var keySet = new Set(derivedSelectedKeySet); // Record key only need check with enabled\n\n    var recordKeys = flattedData.map(getRowKey).filter(function (key) {\n      return !checkboxPropsMap.get(key).disabled;\n    });\n    var checkedCurrentAll = recordKeys.every(function (key) {\n      return keySet.has(key);\n    });\n    var checkedCurrentSome = recordKeys.some(function (key) {\n      return keySet.has(key);\n    });\n\n    var onSelectAllChange = function onSelectAllChange() {\n      var changeKeys = [];\n\n      if (checkedCurrentAll) {\n        recordKeys.forEach(function (key) {\n          keySet[\"delete\"](key);\n          changeKeys.push(key);\n        });\n      } else {\n        recordKeys.forEach(function (key) {\n          if (!keySet.has(key)) {\n            keySet.add(key);\n            changeKeys.push(key);\n          }\n        });\n      }\n\n      var keys = Array.from(keySet);\n      onSelectAll === null || onSelectAll === void 0 ? void 0 : onSelectAll(!checkedCurrentAll, keys.map(function (k) {\n        return getRecordByKey(k);\n      }), changeKeys.map(function (k) {\n        return getRecordByKey(k);\n      }));\n      setSelectedKeys(keys);\n    }; // ===================== Render =====================\n    // Title Cell\n\n\n    var title;\n\n    if (selectionType !== 'radio') {\n      var customizeSelections;\n\n      if (mergedSelections) {\n        var menu = /*#__PURE__*/React.createElement(_menu[\"default\"], {\n          getPopupContainer: getPopupContainer\n        }, mergedSelections.map(function (selection, index) {\n          var key = selection.key,\n              text = selection.text,\n              onSelectionClick = selection.onSelect;\n          return /*#__PURE__*/React.createElement(_menu[\"default\"].Item, {\n            key: key || index,\n            onClick: function onClick() {\n              onSelectionClick === null || onSelectionClick === void 0 ? void 0 : onSelectionClick(recordKeys);\n            }\n          }, text);\n        }));\n        customizeSelections = /*#__PURE__*/React.createElement(\"div\", {\n          className: \"\".concat(prefixCls, \"-selection-extra\")\n        }, /*#__PURE__*/React.createElement(_dropdown[\"default\"], {\n          overlay: menu,\n          getPopupContainer: getPopupContainer\n        }, /*#__PURE__*/React.createElement(\"span\", null, /*#__PURE__*/React.createElement(_DownOutlined[\"default\"], null))));\n      }\n\n      var allDisabledData = flattedData.map(function (record, index) {\n        var key = getRowKey(record, index);\n        var checkboxProps = checkboxPropsMap.get(key) || {};\n        return (0, _extends2[\"default\"])({\n          checked: keySet.has(key)\n        }, checkboxProps);\n      }).filter(function (_ref2) {\n        var disabled = _ref2.disabled;\n        return disabled;\n      });\n      var allDisabled = !!allDisabledData.length && allDisabledData.length === flattedData.length;\n      var allDisabledAndChecked = allDisabled && allDisabledData.every(function (_ref3) {\n        var checked = _ref3.checked;\n        return checked;\n      });\n      var allDisabledSomeChecked = allDisabled && allDisabledData.some(function (_ref4) {\n        var checked = _ref4.checked;\n        return checked;\n      });\n      title = !hideSelectAll && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-selection\")\n      }, /*#__PURE__*/React.createElement(_checkbox[\"default\"], {\n        checked: !allDisabled ? !!flattedData.length && checkedCurrentAll : allDisabledAndChecked,\n        indeterminate: !allDisabled ? !checkedCurrentAll && checkedCurrentSome : !allDisabledAndChecked && allDisabledSomeChecked,\n        onChange: onSelectAllChange,\n        disabled: flattedData.length === 0 || allDisabled,\n        skipGroup: true\n      }), customizeSelections);\n    } // Body Cell\n\n\n    var renderCell;\n\n    if (selectionType === 'radio') {\n      renderCell = function renderCell(_, record, index) {\n        var key = getRowKey(record, index);\n        var checked = keySet.has(key);\n        return {\n          node: /*#__PURE__*/React.createElement(_radio[\"default\"], (0, _extends2[\"default\"])({}, checkboxPropsMap.get(key), {\n            checked: checked,\n            onClick: function onClick(e) {\n              return e.stopPropagation();\n            },\n            onChange: function onChange(event) {\n              if (!keySet.has(key)) {\n                triggerSingleSelection(key, true, [key], event.nativeEvent);\n              }\n            }\n          })),\n          checked: checked\n        };\n      };\n    } else {\n      renderCell = function renderCell(_, record, index) {\n        var _a;\n\n        var key = getRowKey(record, index);\n        var checked = keySet.has(key);\n        var indeterminate = derivedHalfSelectedKeySet.has(key);\n        var checkboxProps = checkboxPropsMap.get(key);\n        var mergedIndeterminate;\n\n        if (expandType === 'nest') {\n          mergedIndeterminate = indeterminate;\n          (0, _devWarning[\"default\"])(typeof (checkboxProps === null || checkboxProps === void 0 ? void 0 : checkboxProps.indeterminate) !== 'boolean', 'Table', 'set `indeterminate` using `rowSelection.getCheckboxProps` is not allowed with tree structured dataSource.');\n        } else {\n          mergedIndeterminate = (_a = checkboxProps === null || checkboxProps === void 0 ? void 0 : checkboxProps.indeterminate) !== null && _a !== void 0 ? _a : indeterminate;\n        } // Record checked\n\n\n        return {\n          node: /*#__PURE__*/React.createElement(_checkbox[\"default\"], (0, _extends2[\"default\"])({}, checkboxProps, {\n            indeterminate: mergedIndeterminate,\n            checked: checked,\n            skipGroup: true,\n            onClick: function onClick(e) {\n              return e.stopPropagation();\n            },\n            onChange: function onChange(_ref5) {\n              var nativeEvent = _ref5.nativeEvent;\n              var shiftKey = nativeEvent.shiftKey;\n              var startIndex = -1;\n              var endIndex = -1; // Get range of this\n\n              if (shiftKey && checkStrictly) {\n                var pointKeys = new Set([lastSelectedKey, key]);\n                recordKeys.some(function (recordKey, recordIndex) {\n                  if (pointKeys.has(recordKey)) {\n                    if (startIndex === -1) {\n                      startIndex = recordIndex;\n                    } else {\n                      endIndex = recordIndex;\n                      return true;\n                    }\n                  }\n\n                  return false;\n                });\n              }\n\n              if (endIndex !== -1 && startIndex !== endIndex && checkStrictly) {\n                // Batch update selections\n                var rangeKeys = recordKeys.slice(startIndex, endIndex + 1);\n                var changedKeys = [];\n\n                if (checked) {\n                  rangeKeys.forEach(function (recordKey) {\n                    if (keySet.has(recordKey)) {\n                      changedKeys.push(recordKey);\n                      keySet[\"delete\"](recordKey);\n                    }\n                  });\n                } else {\n                  rangeKeys.forEach(function (recordKey) {\n                    if (!keySet.has(recordKey)) {\n                      changedKeys.push(recordKey);\n                      keySet.add(recordKey);\n                    }\n                  });\n                }\n\n                var keys = Array.from(keySet);\n                onSelectMultiple === null || onSelectMultiple === void 0 ? void 0 : onSelectMultiple(!checked, keys.map(function (recordKey) {\n                  return getRecordByKey(recordKey);\n                }), changedKeys.map(function (recordKey) {\n                  return getRecordByKey(recordKey);\n                }));\n                setSelectedKeys(keys);\n              } else {\n                // Single record selected\n                var originCheckedKeys = derivedSelectedKeys;\n\n                if (checkStrictly) {\n                  var checkedKeys = checked ? (0, _util.arrDel)(originCheckedKeys, key) : (0, _util.arrAdd)(originCheckedKeys, key);\n                  triggerSingleSelection(key, !checked, checkedKeys, nativeEvent);\n                } else {\n                  // Always fill first\n                  var result = (0, _conductUtil.conductCheck)([].concat((0, _toConsumableArray2[\"default\"])(originCheckedKeys), [key]), true, keyEntities, isCheckboxDisabled);\n                  var _checkedKeys = result.checkedKeys,\n                      halfCheckedKeys = result.halfCheckedKeys;\n                  var nextCheckedKeys = _checkedKeys; // If remove, we do it again to correction\n\n                  if (checked) {\n                    var tempKeySet = new Set(_checkedKeys);\n                    tempKeySet[\"delete\"](key);\n                    nextCheckedKeys = (0, _conductUtil.conductCheck)(Array.from(tempKeySet), {\n                      checked: false,\n                      halfCheckedKeys: halfCheckedKeys\n                    }, keyEntities, isCheckboxDisabled).checkedKeys;\n                  }\n\n                  triggerSingleSelection(key, !checked, nextCheckedKeys, nativeEvent);\n                }\n              }\n\n              setLastSelectedKey(key);\n            }\n          })),\n          checked: checked\n        };\n      };\n    }\n\n    var renderSelectionCell = function renderSelectionCell(_, record, index) {\n      var _renderCell = renderCell(_, record, index),\n          node = _renderCell.node,\n          checked = _renderCell.checked;\n\n      if (customizeRenderCell) {\n        return customizeRenderCell(checked, record, index, node);\n      }\n\n      return node;\n    }; // Columns\n\n\n    var selectionColumn = (0, _defineProperty2[\"default\"])({\n      width: selectionColWidth,\n      className: \"\".concat(prefixCls, \"-selection-column\"),\n      title: rowSelection.columnTitle || title,\n      render: renderSelectionCell\n    }, _rcTable.INTERNAL_COL_DEFINE, {\n      className: \"\".concat(prefixCls, \"-selection-col\")\n    });\n\n    if (expandType === 'row' && columns.length && !expandIconColumnIndex) {\n      var _columns = (0, _toArray2[\"default\"])(columns),\n          expandColumn = _columns[0],\n          restColumns = _columns.slice(1);\n\n      var selectionFixed = fixed || getFixedType(restColumns[0]);\n\n      if (selectionFixed) {\n        expandColumn.fixed = selectionFixed;\n      }\n\n      return [expandColumn, (0, _extends2[\"default\"])((0, _extends2[\"default\"])({}, selectionColumn), {\n        fixed: selectionFixed\n      })].concat((0, _toConsumableArray2[\"default\"])(restColumns));\n    }\n\n    return [(0, _extends2[\"default\"])((0, _extends2[\"default\"])({}, selectionColumn), {\n      fixed: fixed || getFixedType(columns[0])\n    })].concat((0, _toConsumableArray2[\"default\"])(columns));\n  }, [getRowKey, flattedData, rowSelection, derivedSelectedKeys, derivedSelectedKeySet, derivedHalfSelectedKeySet, selectionColWidth, mergedSelections, expandType, lastSelectedKey, checkboxPropsMap, onSelectMultiple, triggerSingleSelection, isCheckboxDisabled]);\n  return [transformColumns, derivedSelectedKeySet];\n}"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAA8C,CAAC;AAEpF,IAAIC,QAAQ,GAAGD,OAAO,CAAC,+BAA+B,CAAC;AAEvDE,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAAC,SAAS,CAAC,GAAGE,YAAY;AACjCF,OAAO,CAACG,cAAc,GAAGH,OAAO,CAACI,gBAAgB,GAAGJ,OAAO,CAACK,aAAa,GAAG,KAAK,CAAC;AAElF,IAAIC,SAAS,GAAGX,sBAAsB,CAACC,OAAO,CAAC,gCAAgC,CAAC,CAAC;AAEjF,IAAIW,gBAAgB,GAAGZ,sBAAsB,CAACC,OAAO,CAAC,uCAAuC,CAAC,CAAC;AAE/F,IAAIY,SAAS,GAAGb,sBAAsB,CAACC,OAAO,CAAC,gCAAgC,CAAC,CAAC;AAEjF,IAAIa,eAAe,GAAGd,sBAAsB,CAACC,OAAO,CAAC,sCAAsC,CAAC,CAAC;AAE7F,IAAIc,mBAAmB,GAAGf,sBAAsB,CAACC,OAAO,CAAC,0CAA0C,CAAC,CAAC;AAErG,IAAIe,QAAQ,GAAGhB,sBAAsB,CAACC,OAAO,CAAC,+BAA+B,CAAC,CAAC;AAE/E,IAAIgB,KAAK,GAAGC,uBAAuB,CAACjB,OAAO,CAAC,OAAO,CAAC,CAAC;AAErD,IAAIkB,aAAa,GAAGnB,sBAAsB,CAACC,OAAO,CAAC,gCAAgC,CAAC,CAAC;AAErF,IAAImB,SAAS,GAAGnB,OAAO,CAAC,4BAA4B,CAAC;AAErD,IAAIoB,YAAY,GAAGpB,OAAO,CAAC,+BAA+B,CAAC;AAE3D,IAAIqB,KAAK,GAAGrB,OAAO,CAAC,kBAAkB,CAAC;AAEvC,IAAIsB,QAAQ,GAAGtB,OAAO,CAAC,UAAU,CAAC;AAElC,IAAIuB,gBAAgB,GAAGxB,sBAAsB,CAACC,OAAO,CAAC,kCAAkC,CAAC,CAAC;AAE1F,IAAIwB,SAAS,GAAGzB,sBAAsB,CAACC,OAAO,CAAC,gBAAgB,CAAC,CAAC;AAEjE,IAAIyB,SAAS,GAAG1B,sBAAsB,CAACC,OAAO,CAAC,gBAAgB,CAAC,CAAC;AAEjE,IAAI0B,KAAK,GAAG3B,sBAAsB,CAACC,OAAO,CAAC,YAAY,CAAC,CAAC;AAEzD,IAAI2B,MAAM,GAAG5B,sBAAsB,CAACC,OAAO,CAAC,aAAa,CAAC,CAAC;AAE3D,IAAI4B,WAAW,GAAG7B,sBAAsB,CAACC,OAAO,CAAC,wBAAwB,CAAC,CAAC;AAE3E,SAAS6B,wBAAwB,CAACC,WAAW,EAAE;EAAE,IAAI,OAAOC,OAAO,KAAK,UAAU,EAAE,OAAO,IAAI;EAAE,IAAIC,iBAAiB,GAAG,IAAID,OAAO,EAAE;EAAE,IAAIE,gBAAgB,GAAG,IAAIF,OAAO,EAAE;EAAE,OAAO,CAACF,wBAAwB,GAAG,SAASA,wBAAwB,CAACC,WAAW,EAAE;IAAE,OAAOA,WAAW,GAAGG,gBAAgB,GAAGD,iBAAiB;EAAE,CAAC,EAAEF,WAAW,CAAC;AAAE;AAE9U,SAASb,uBAAuB,CAACiB,GAAG,EAAEJ,WAAW,EAAE;EAAE,IAAI,CAACA,WAAW,IAAII,GAAG,IAAIA,GAAG,CAACC,UAAU,EAAE;IAAE,OAAOD,GAAG;EAAE;EAAE,IAAIA,GAAG,KAAK,IAAI,IAAIjC,QAAQ,CAACiC,GAAG,CAAC,KAAK,QAAQ,IAAI,OAAOA,GAAG,KAAK,UAAU,EAAE;IAAE,OAAO;MAAE,SAAS,EAAEA;IAAI,CAAC;EAAE;EAAE,IAAIE,KAAK,GAAGP,wBAAwB,CAACC,WAAW,CAAC;EAAE,IAAIM,KAAK,IAAIA,KAAK,CAACC,GAAG,CAACH,GAAG,CAAC,EAAE;IAAE,OAAOE,KAAK,CAACE,GAAG,CAACJ,GAAG,CAAC;EAAE;EAAE,IAAIK,MAAM,GAAG,CAAC,CAAC;EAAE,IAAIC,qBAAqB,GAAGtC,MAAM,CAACC,cAAc,IAAID,MAAM,CAACuC,wBAAwB;EAAE,KAAK,IAAIC,GAAG,IAAIR,GAAG,EAAE;IAAE,IAAIQ,GAAG,KAAK,SAAS,IAAIxC,MAAM,CAACyC,SAAS,CAACC,cAAc,CAACC,IAAI,CAACX,GAAG,EAAEQ,GAAG,CAAC,EAAE;MAAE,IAAII,IAAI,GAAGN,qBAAqB,GAAGtC,MAAM,CAACuC,wBAAwB,CAACP,GAAG,EAAEQ,GAAG,CAAC,GAAG,IAAI;MAAE,IAAII,IAAI,KAAKA,IAAI,CAACR,GAAG,IAAIQ,IAAI,CAACC,GAAG,CAAC,EAAE;QAAE7C,MAAM,CAACC,cAAc,CAACoC,MAAM,EAAEG,GAAG,EAAEI,IAAI,CAAC;MAAE,CAAC,MAAM;QAAEP,MAAM,CAACG,GAAG,CAAC,GAAGR,GAAG,CAACQ,GAAG,CAAC;MAAE;IAAE;EAAE;EAAEH,MAAM,CAAC,SAAS,CAAC,GAAGL,GAAG;EAAE,IAAIE,KAAK,EAAE;IAAEA,KAAK,CAACW,GAAG,CAACb,GAAG,EAAEK,MAAM,CAAC;EAAE;EAAE,OAAOA,MAAM;AAAE;;AAE3yB;AACA,IAAI9B,aAAa,GAAG,YAAY;AAChCL,OAAO,CAACK,aAAa,GAAGA,aAAa;AACrC,IAAID,gBAAgB,GAAG,eAAe;AACtCJ,OAAO,CAACI,gBAAgB,GAAGA,gBAAgB;AAC3C,IAAID,cAAc,GAAG,aAAa;AAClCH,OAAO,CAACG,cAAc,GAAGA,cAAc;AAEvC,SAASyC,YAAY,CAACC,MAAM,EAAE;EAC5B,OAAOA,MAAM,IAAIA,MAAM,CAACC,KAAK;AAC/B;AAEA,SAASC,WAAW,CAACC,IAAI,EAAEC,kBAAkB,EAAE;EAC7C,IAAIC,IAAI,GAAG,EAAE;EACb,CAACF,IAAI,IAAI,EAAE,EAAEG,OAAO,CAAC,UAAUC,MAAM,EAAE;IACrCF,IAAI,CAACG,IAAI,CAACD,MAAM,CAAC;IAEjB,IAAIA,MAAM,IAAI,CAAC,CAAC,EAAEzC,QAAQ,CAAC,SAAS,CAAC,EAAEyC,MAAM,CAAC,KAAK,QAAQ,IAAIH,kBAAkB,IAAIG,MAAM,EAAE;MAC3FF,IAAI,GAAG,EAAE,CAACI,MAAM,CAAC,CAAC,CAAC,EAAE5C,mBAAmB,CAAC,SAAS,CAAC,EAAEwC,IAAI,CAAC,EAAE,CAAC,CAAC,EAAExC,mBAAmB,CAAC,SAAS,CAAC,EAAEqC,WAAW,CAACK,MAAM,CAACH,kBAAkB,CAAC,EAAEA,kBAAkB,CAAC,CAAC,CAAC;IAC/J;EACF,CAAC,CAAC;EACF,OAAOC,IAAI;AACb;AAEA,SAAShD,YAAY,CAACqD,YAAY,EAAEC,MAAM,EAAE;EAC1C,IAAIC,IAAI,GAAGF,YAAY,IAAI,CAAC,CAAC;IACzBG,uBAAuB,GAAGD,IAAI,CAACC,uBAAuB;IACtDC,eAAe,GAAGF,IAAI,CAACE,eAAe;IACtCC,sBAAsB,GAAGH,IAAI,CAACG,sBAAsB;IACpDC,gBAAgB,GAAGJ,IAAI,CAACI,gBAAgB;IACxCC,iBAAiB,GAAGL,IAAI,CAACM,QAAQ;IACjCC,QAAQ,GAAGP,IAAI,CAACO,QAAQ;IACxBC,WAAW,GAAGR,IAAI,CAACQ,WAAW;IAC9BC,cAAc,GAAGT,IAAI,CAACS,cAAc;IACpCC,YAAY,GAAGV,IAAI,CAACU,YAAY;IAChCC,gBAAgB,GAAGX,IAAI,CAACW,gBAAgB;IACxCC,iBAAiB,GAAGZ,IAAI,CAACa,WAAW;IACpCC,aAAa,GAAGd,IAAI,CAACe,IAAI;IACzBC,UAAU,GAAGhB,IAAI,CAACgB,UAAU;IAC5B3B,KAAK,GAAGW,IAAI,CAACX,KAAK;IAClB4B,mBAAmB,GAAGjB,IAAI,CAACkB,UAAU;IACrCC,aAAa,GAAGnB,IAAI,CAACmB,aAAa;IAClCC,kBAAkB,GAAGpB,IAAI,CAACqB,aAAa;IACvCA,aAAa,GAAGD,kBAAkB,KAAK,KAAK,CAAC,GAAG,IAAI,GAAGA,kBAAkB;EAE7E,IAAIE,SAAS,GAAGvB,MAAM,CAACuB,SAAS;IAC5B/B,IAAI,GAAGQ,MAAM,CAACR,IAAI;IAClBgC,QAAQ,GAAGxB,MAAM,CAACwB,QAAQ;IAC1BC,cAAc,GAAGzB,MAAM,CAACyB,cAAc;IACtCC,SAAS,GAAG1B,MAAM,CAAC0B,SAAS;IAC5BC,UAAU,GAAG3B,MAAM,CAAC2B,UAAU;IAC9BlC,kBAAkB,GAAGO,MAAM,CAACP,kBAAkB;IAC9CmC,WAAW,GAAG5B,MAAM,CAAC6B,MAAM;IAC3BC,qBAAqB,GAAG9B,MAAM,CAAC8B,qBAAqB;IACpDC,iBAAiB,GAAG/B,MAAM,CAAC+B,iBAAiB,CAAC,CAAC;;EAElD,IAAIC,eAAe,GAAG,CAAC,CAAC,EAAErE,gBAAgB,CAAC,SAAS,CAAC,EAAEwC,eAAe,IAAIC,sBAAsB,IAAI,EAAE,EAAE;MACtG3D,KAAK,EAAE0D;IACT,CAAC,CAAC;IACE8B,gBAAgB,GAAG,CAAC,CAAC,EAAEhF,eAAe,CAAC,SAAS,CAAC,EAAE+E,eAAe,EAAE,CAAC,CAAC;IACtEE,kBAAkB,GAAGD,gBAAgB,CAAC,CAAC,CAAC;IACxCE,qBAAqB,GAAGF,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC;;EAGjD,IAAIG,kBAAkB,GAAGhF,KAAK,CAACiF,MAAM,CAAC,IAAIC,GAAG,EAAE,CAAC;EAChD,IAAIC,0BAA0B,GAAG,CAAC,CAAC,EAAEnF,KAAK,CAACoF,WAAW,EAAE,UAAUC,IAAI,EAAE;IACtE,IAAIvC,uBAAuB,EAAE;MAC3B,IAAIwC,QAAQ,GAAG,IAAIJ,GAAG,EAAE,CAAC,CAAC;;MAE1BG,IAAI,CAAC9C,OAAO,CAAC,UAAUb,GAAG,EAAE;QAC1B,IAAIc,MAAM,GAAG6B,cAAc,CAAC3C,GAAG,CAAC;QAEhC,IAAI,CAACc,MAAM,IAAIwC,kBAAkB,CAACO,OAAO,CAAClE,GAAG,CAACK,GAAG,CAAC,EAAE;UAClDc,MAAM,GAAGwC,kBAAkB,CAACO,OAAO,CAACjE,GAAG,CAACI,GAAG,CAAC;QAC9C;QAEA4D,QAAQ,CAACvD,GAAG,CAACL,GAAG,EAAEc,MAAM,CAAC;MAC3B,CAAC,CAAC,CAAC,CAAC;;MAEJwC,kBAAkB,CAACO,OAAO,GAAGD,QAAQ;IACvC;EACF,CAAC,EAAE,CAACjB,cAAc,EAAEvB,uBAAuB,CAAC,CAAC,CAAC,CAAC;;EAE/C9C,KAAK,CAACwF,SAAS,CAAC,YAAY;IAC1BL,0BAA0B,CAACL,kBAAkB,CAAC;EAChD,CAAC,EAAE,CAACA,kBAAkB,CAAC,CAAC;EAExB,IAAIW,QAAQ,GAAG,CAAC,CAAC,EAAEzF,KAAK,CAAC0F,OAAO,EAAE,YAAY;MAC5C,OAAOxB,aAAa,GAAG;QACrByB,WAAW,EAAE;MACf,CAAC,GAAG,CAAC,CAAC,EAAExF,SAAS,CAACyF,qBAAqB,EAAExD,IAAI,EAAE;QAC7CyD,cAAc,EAAEvB,SAAS;QACzBwB,gBAAgB,EAAEzD;MACpB,CAAC,CAAC;IACJ,CAAC,EAAE,CAACD,IAAI,EAAEkC,SAAS,EAAEJ,aAAa,EAAE7B,kBAAkB,CAAC,CAAC;IACpDsD,WAAW,GAAGF,QAAQ,CAACE,WAAW,CAAC,CAAC;;EAGxC,IAAII,WAAW,GAAG,CAAC,CAAC,EAAE/F,KAAK,CAAC0F,OAAO,EAAE,YAAY;IAC/C,OAAOvD,WAAW,CAACiC,QAAQ,EAAE/B,kBAAkB,CAAC;EAClD,CAAC,EAAE,CAAC+B,QAAQ,EAAE/B,kBAAkB,CAAC,CAAC,CAAC,CAAC;;EAEpC,IAAI2D,gBAAgB,GAAG,CAAC,CAAC,EAAEhG,KAAK,CAAC0F,OAAO,EAAE,YAAY;IACpD,IAAIO,GAAG,GAAG,IAAIf,GAAG,EAAE;IACnBa,WAAW,CAACxD,OAAO,CAAC,UAAUC,MAAM,EAAE0D,KAAK,EAAE;MAC3C,IAAIxE,GAAG,GAAG4C,SAAS,CAAC9B,MAAM,EAAE0D,KAAK,CAAC;MAClC,IAAIC,aAAa,GAAG,CAAClD,gBAAgB,GAAGA,gBAAgB,CAACT,MAAM,CAAC,GAAG,IAAI,KAAK,CAAC,CAAC;MAC9EyD,GAAG,CAAClE,GAAG,CAACL,GAAG,EAAEyE,aAAa,CAAC;MAE3B,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,KAAK,SAAS,IAAIH,aAAa,IAAI,gBAAgB,IAAIA,aAAa,CAAC,EAAE;QAC9G,CAAC,CAAC,EAAEvF,WAAW,CAAC,SAAS,CAAC,EAAE,KAAK,EAAE,OAAO,EAAE,uGAAuG,CAAC;MACtJ;IACF,CAAC,CAAC;IACF,OAAOqF,GAAG;EACZ,CAAC,EAAE,CAACF,WAAW,EAAEzB,SAAS,EAAErB,gBAAgB,CAAC,CAAC;EAC9C,IAAIsD,kBAAkB,GAAG,CAAC,CAAC,EAAEvG,KAAK,CAACoF,WAAW,EAAE,UAAUoB,CAAC,EAAE;IAC3D,IAAIC,EAAE;IAEN,OAAO,CAAC,EAAE,CAACA,EAAE,GAAGT,gBAAgB,CAAC1E,GAAG,CAACgD,SAAS,CAACkC,CAAC,CAAC,CAAC,MAAM,IAAI,IAAIC,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACC,QAAQ,CAAC;EACvG,CAAC,EAAE,CAACV,gBAAgB,EAAE1B,SAAS,CAAC,CAAC;EAEjC,IAAIqC,SAAS,GAAG,CAAC,CAAC,EAAE3G,KAAK,CAAC0F,OAAO,EAAE,YAAY;MAC7C,IAAIxB,aAAa,EAAE;QACjB,OAAO,CAACY,kBAAkB,IAAI,EAAE,EAAE,EAAE,CAAC;MACvC;MAEA,IAAI8B,aAAa,GAAG,CAAC,CAAC,EAAExG,YAAY,CAACyG,YAAY,EAAE/B,kBAAkB,EAAE,IAAI,EAAEa,WAAW,EAAEY,kBAAkB,CAAC;QACzGO,WAAW,GAAGF,aAAa,CAACE,WAAW;QACvCC,eAAe,GAAGH,aAAa,CAACG,eAAe;MAEnD,OAAO,CAACD,WAAW,IAAI,EAAE,EAAEC,eAAe,CAAC;IAC7C,CAAC,EAAE,CAACjC,kBAAkB,EAAEZ,aAAa,EAAEyB,WAAW,EAAEY,kBAAkB,CAAC,CAAC;IACpES,SAAS,GAAG,CAAC,CAAC,EAAEnH,eAAe,CAAC,SAAS,CAAC,EAAE8G,SAAS,EAAE,CAAC,CAAC;IACzDM,mBAAmB,GAAGD,SAAS,CAAC,CAAC,CAAC;IAClCE,uBAAuB,GAAGF,SAAS,CAAC,CAAC,CAAC;EAE1C,IAAIG,qBAAqB,GAAG,CAAC,CAAC,EAAEnH,KAAK,CAAC0F,OAAO,EAAE,YAAY;IACzD,IAAIL,IAAI,GAAG1B,aAAa,KAAK,OAAO,GAAGsD,mBAAmB,CAACG,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,GAAGH,mBAAmB;IAC5F,OAAO,IAAII,GAAG,CAAChC,IAAI,CAAC;EACtB,CAAC,EAAE,CAAC4B,mBAAmB,EAAEtD,aAAa,CAAC,CAAC;EACxC,IAAI2D,yBAAyB,GAAG,CAAC,CAAC,EAAEtH,KAAK,CAAC0F,OAAO,EAAE,YAAY;IAC7D,OAAO/B,aAAa,KAAK,OAAO,GAAG,IAAI0D,GAAG,EAAE,GAAG,IAAIA,GAAG,CAACH,uBAAuB,CAAC;EACjF,CAAC,EAAE,CAACA,uBAAuB,EAAEvD,aAAa,CAAC,CAAC,CAAC,CAAC;;EAE9C,IAAI4D,SAAS,GAAG,CAAC,CAAC,EAAEvH,KAAK,CAACwH,QAAQ,EAAE,IAAI,CAAC;IACrCC,UAAU,GAAG,CAAC,CAAC,EAAE5H,eAAe,CAAC,SAAS,CAAC,EAAE0H,SAAS,EAAE,CAAC,CAAC;IAC1DG,eAAe,GAAGD,UAAU,CAAC,CAAC,CAAC;IAC/BE,kBAAkB,GAAGF,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;;EAGxCzH,KAAK,CAACwF,SAAS,CAAC,YAAY;IAC1B,IAAI,CAAC7C,YAAY,EAAE;MACjBoC,qBAAqB,CAAC,EAAE,CAAC;IAC3B;EACF,CAAC,EAAE,CAAC,CAAC,CAACpC,YAAY,CAAC,CAAC;EACpB,IAAIiF,eAAe,GAAG,CAAC,CAAC,EAAE5H,KAAK,CAACoF,WAAW,EAAE,UAAUC,IAAI,EAAE;IAC3D,IAAIwC,aAAa;IACjB,IAAIC,OAAO;IACX3C,0BAA0B,CAACE,IAAI,CAAC;IAEhC,IAAIvC,uBAAuB,EAAE;MAC3B+E,aAAa,GAAGxC,IAAI;MACpByC,OAAO,GAAGzC,IAAI,CAACY,GAAG,CAAC,UAAUvE,GAAG,EAAE;QAChC,OAAOsD,kBAAkB,CAACO,OAAO,CAACjE,GAAG,CAACI,GAAG,CAAC;MAC5C,CAAC,CAAC;IACJ,CAAC,MAAM;MACL;MACAmG,aAAa,GAAG,EAAE;MAClBC,OAAO,GAAG,EAAE;MACZzC,IAAI,CAAC9C,OAAO,CAAC,UAAUb,GAAG,EAAE;QAC1B,IAAIc,MAAM,GAAG6B,cAAc,CAAC3C,GAAG,CAAC;QAEhC,IAAIc,MAAM,KAAKuF,SAAS,EAAE;UACxBF,aAAa,CAACpF,IAAI,CAACf,GAAG,CAAC;UACvBoG,OAAO,CAACrF,IAAI,CAACD,MAAM,CAAC;QACtB;MACF,CAAC,CAAC;IACJ;IAEAuC,qBAAqB,CAAC8C,aAAa,CAAC;IACpC3E,iBAAiB,KAAK,IAAI,IAAIA,iBAAiB,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,iBAAiB,CAAC2E,aAAa,EAAEC,OAAO,CAAC;EACjH,CAAC,EAAE,CAAC/C,qBAAqB,EAAEV,cAAc,EAAEnB,iBAAiB,EAAEJ,uBAAuB,CAAC,CAAC,CAAC,CAAC;EACzF;;EAEA,IAAIkF,sBAAsB,GAAG,CAAC,CAAC,EAAEhI,KAAK,CAACoF,WAAW,EAAE,UAAU1D,GAAG,EAAEuG,QAAQ,EAAE5C,IAAI,EAAE6C,KAAK,EAAE;IACxF,IAAI9E,QAAQ,EAAE;MACZ,IAAI+E,IAAI,GAAG9C,IAAI,CAACY,GAAG,CAAC,UAAUmC,CAAC,EAAE;QAC/B,OAAO/D,cAAc,CAAC+D,CAAC,CAAC;MAC1B,CAAC,CAAC;MACFhF,QAAQ,CAACiB,cAAc,CAAC3C,GAAG,CAAC,EAAEuG,QAAQ,EAAEE,IAAI,EAAED,KAAK,CAAC;IACtD;IAEAN,eAAe,CAACvC,IAAI,CAAC;EACvB,CAAC,EAAE,CAACjC,QAAQ,EAAEiB,cAAc,EAAEuD,eAAe,CAAC,CAAC;EAC/C,IAAIS,gBAAgB,GAAG,CAAC,CAAC,EAAErI,KAAK,CAAC0F,OAAO,EAAE,YAAY;IACpD,IAAI,CAAC7B,UAAU,IAAIG,aAAa,EAAE;MAChC,OAAO,IAAI;IACb;IAEA,IAAIsE,aAAa,GAAGzE,UAAU,KAAK,IAAI,GAAG,CAACpE,aAAa,EAAED,gBAAgB,EAAED,cAAc,CAAC,GAAGsE,UAAU;IACxG,OAAOyE,aAAa,CAACrC,GAAG,CAAC,UAAUsC,SAAS,EAAE;MAC5C,IAAIA,SAAS,KAAK9I,aAAa,EAAE;QAC/B,OAAO;UACLiC,GAAG,EAAE,KAAK;UACV8G,IAAI,EAAEhE,WAAW,CAACiE,YAAY;UAC9BrF,QAAQ,EAAE,SAASA,QAAQ,GAAG;YAC5BwE,eAAe,CAACxF,IAAI,CAAC6D,GAAG,CAAC,UAAUzD,MAAM,EAAE0D,KAAK,EAAE;cAChD,OAAO5B,SAAS,CAAC9B,MAAM,EAAE0D,KAAK,CAAC;YACjC,CAAC,CAAC,CAAC;UACL;QACF,CAAC;MACH;MAEA,IAAIqC,SAAS,KAAK/I,gBAAgB,EAAE;QAClC,OAAO;UACLkC,GAAG,EAAE,QAAQ;UACb8G,IAAI,EAAEhE,WAAW,CAACkE,YAAY;UAC9BtF,QAAQ,EAAE,SAASA,QAAQ,GAAG;YAC5B,IAAIuF,MAAM,GAAG,IAAItB,GAAG,CAACF,qBAAqB,CAAC;YAC3C/C,QAAQ,CAAC7B,OAAO,CAAC,UAAUC,MAAM,EAAE0D,KAAK,EAAE;cACxC,IAAIxE,GAAG,GAAG4C,SAAS,CAAC9B,MAAM,EAAE0D,KAAK,CAAC;cAElC,IAAIyC,MAAM,CAACtH,GAAG,CAACK,GAAG,CAAC,EAAE;gBACnBiH,MAAM,CAAC,QAAQ,CAAC,CAACjH,GAAG,CAAC;cACvB,CAAC,MAAM;gBACLiH,MAAM,CAACC,GAAG,CAAClH,GAAG,CAAC;cACjB;YACF,CAAC,CAAC;YACF,IAAI2D,IAAI,GAAGwD,KAAK,CAACC,IAAI,CAACH,MAAM,CAAC;YAE7B,IAAIrF,cAAc,EAAE;cAClB,CAAC,CAAC,EAAE1C,WAAW,CAAC,SAAS,CAAC,EAAE,KAAK,EAAE,OAAO,EAAE,4EAA4E,CAAC;cACzH0C,cAAc,CAAC+B,IAAI,CAAC;YACtB;YAEAuC,eAAe,CAACvC,IAAI,CAAC;UACvB;QACF,CAAC;MACH;MAEA,IAAIkD,SAAS,KAAKhJ,cAAc,EAAE;QAChC,OAAO;UACLmC,GAAG,EAAE,MAAM;UACX8G,IAAI,EAAEhE,WAAW,CAACuE,UAAU;UAC5B3F,QAAQ,EAAE,SAASA,QAAQ,GAAG;YAC5BG,YAAY,KAAK,IAAI,IAAIA,YAAY,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,YAAY,EAAE;YAC1EqE,eAAe,CAAC,EAAE,CAAC;UACrB;QACF,CAAC;MACH;MAEA,OAAOW,SAAS;IAClB,CAAC,CAAC;EACJ,CAAC,EAAE,CAAC1E,UAAU,EAAEsD,qBAAqB,EAAE/C,QAAQ,EAAEE,SAAS,EAAEhB,cAAc,EAAEsE,eAAe,CAAC,CAAC,CAAC,CAAC;;EAE/F,IAAIoB,gBAAgB,GAAG,CAAC,CAAC,EAAEhJ,KAAK,CAACoF,WAAW,EAAE,UAAU6D,OAAO,EAAE;IAC/D,IAAI,CAACtG,YAAY,EAAE;MACjB,OAAOsG,OAAO;IAChB,CAAC,CAAC;;IAGF,IAAIN,MAAM,GAAG,IAAItB,GAAG,CAACF,qBAAqB,CAAC,CAAC,CAAC;;IAE7C,IAAI+B,UAAU,GAAGnD,WAAW,CAACE,GAAG,CAAC3B,SAAS,CAAC,CAAC6E,MAAM,CAAC,UAAUzH,GAAG,EAAE;MAChE,OAAO,CAACsE,gBAAgB,CAAC1E,GAAG,CAACI,GAAG,CAAC,CAACgF,QAAQ;IAC5C,CAAC,CAAC;IACF,IAAI0C,iBAAiB,GAAGF,UAAU,CAACG,KAAK,CAAC,UAAU3H,GAAG,EAAE;MACtD,OAAOiH,MAAM,CAACtH,GAAG,CAACK,GAAG,CAAC;IACxB,CAAC,CAAC;IACF,IAAI4H,kBAAkB,GAAGJ,UAAU,CAACK,IAAI,CAAC,UAAU7H,GAAG,EAAE;MACtD,OAAOiH,MAAM,CAACtH,GAAG,CAACK,GAAG,CAAC;IACxB,CAAC,CAAC;IAEF,IAAI8H,iBAAiB,GAAG,SAASA,iBAAiB,GAAG;MACnD,IAAIC,UAAU,GAAG,EAAE;MAEnB,IAAIL,iBAAiB,EAAE;QACrBF,UAAU,CAAC3G,OAAO,CAAC,UAAUb,GAAG,EAAE;UAChCiH,MAAM,CAAC,QAAQ,CAAC,CAACjH,GAAG,CAAC;UACrB+H,UAAU,CAAChH,IAAI,CAACf,GAAG,CAAC;QACtB,CAAC,CAAC;MACJ,CAAC,MAAM;QACLwH,UAAU,CAAC3G,OAAO,CAAC,UAAUb,GAAG,EAAE;UAChC,IAAI,CAACiH,MAAM,CAACtH,GAAG,CAACK,GAAG,CAAC,EAAE;YACpBiH,MAAM,CAACC,GAAG,CAAClH,GAAG,CAAC;YACf+H,UAAU,CAAChH,IAAI,CAACf,GAAG,CAAC;UACtB;QACF,CAAC,CAAC;MACJ;MAEA,IAAI2D,IAAI,GAAGwD,KAAK,CAACC,IAAI,CAACH,MAAM,CAAC;MAC7BtF,WAAW,KAAK,IAAI,IAAIA,WAAW,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,WAAW,CAAC,CAAC+F,iBAAiB,EAAE/D,IAAI,CAACY,GAAG,CAAC,UAAUmC,CAAC,EAAE;QAC9G,OAAO/D,cAAc,CAAC+D,CAAC,CAAC;MAC1B,CAAC,CAAC,EAAEqB,UAAU,CAACxD,GAAG,CAAC,UAAUmC,CAAC,EAAE;QAC9B,OAAO/D,cAAc,CAAC+D,CAAC,CAAC;MAC1B,CAAC,CAAC,CAAC;MACHR,eAAe,CAACvC,IAAI,CAAC;IACvB,CAAC,CAAC,CAAC;IACH;;IAGA,IAAIqE,KAAK;IAET,IAAI/F,aAAa,KAAK,OAAO,EAAE;MAC7B,IAAIgG,mBAAmB;MAEvB,IAAItB,gBAAgB,EAAE;QACpB,IAAIuB,IAAI,GAAG,aAAa5J,KAAK,CAAC6J,aAAa,CAACnJ,KAAK,CAAC,SAAS,CAAC,EAAE;UAC5DiE,iBAAiB,EAAEA;QACrB,CAAC,EAAE0D,gBAAgB,CAACpC,GAAG,CAAC,UAAUsC,SAAS,EAAErC,KAAK,EAAE;UAClD,IAAIxE,GAAG,GAAG6G,SAAS,CAAC7G,GAAG;YACnB8G,IAAI,GAAGD,SAAS,CAACC,IAAI;YACrBsB,gBAAgB,GAAGvB,SAAS,CAACnF,QAAQ;UACzC,OAAO,aAAapD,KAAK,CAAC6J,aAAa,CAACnJ,KAAK,CAAC,SAAS,CAAC,CAACqJ,IAAI,EAAE;YAC7DrI,GAAG,EAAEA,GAAG,IAAIwE,KAAK;YACjB8D,OAAO,EAAE,SAASA,OAAO,GAAG;cAC1BF,gBAAgB,KAAK,IAAI,IAAIA,gBAAgB,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,gBAAgB,CAACZ,UAAU,CAAC;YAClG;UACF,CAAC,EAAEV,IAAI,CAAC;QACV,CAAC,CAAC,CAAC;QACHmB,mBAAmB,GAAG,aAAa3J,KAAK,CAAC6J,aAAa,CAAC,KAAK,EAAE;UAC5DI,SAAS,EAAE,EAAE,CAACvH,MAAM,CAACyB,SAAS,EAAE,kBAAkB;QACpD,CAAC,EAAE,aAAanE,KAAK,CAAC6J,aAAa,CAACpJ,SAAS,CAAC,SAAS,CAAC,EAAE;UACxDyJ,OAAO,EAAEN,IAAI;UACbjF,iBAAiB,EAAEA;QACrB,CAAC,EAAE,aAAa3E,KAAK,CAAC6J,aAAa,CAAC,MAAM,EAAE,IAAI,EAAE,aAAa7J,KAAK,CAAC6J,aAAa,CAAC3J,aAAa,CAAC,SAAS,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;MACvH;MAEA,IAAIiK,eAAe,GAAGpE,WAAW,CAACE,GAAG,CAAC,UAAUzD,MAAM,EAAE0D,KAAK,EAAE;QAC7D,IAAIxE,GAAG,GAAG4C,SAAS,CAAC9B,MAAM,EAAE0D,KAAK,CAAC;QAClC,IAAIC,aAAa,GAAGH,gBAAgB,CAAC1E,GAAG,CAACI,GAAG,CAAC,IAAI,CAAC,CAAC;QACnD,OAAO,CAAC,CAAC,EAAE9B,SAAS,CAAC,SAAS,CAAC,EAAE;UAC/BwK,OAAO,EAAEzB,MAAM,CAACtH,GAAG,CAACK,GAAG;QACzB,CAAC,EAAEyE,aAAa,CAAC;MACnB,CAAC,CAAC,CAACgD,MAAM,CAAC,UAAUkB,KAAK,EAAE;QACzB,IAAI3D,QAAQ,GAAG2D,KAAK,CAAC3D,QAAQ;QAC7B,OAAOA,QAAQ;MACjB,CAAC,CAAC;MACF,IAAI4D,WAAW,GAAG,CAAC,CAACH,eAAe,CAACI,MAAM,IAAIJ,eAAe,CAACI,MAAM,KAAKxE,WAAW,CAACwE,MAAM;MAC3F,IAAIC,qBAAqB,GAAGF,WAAW,IAAIH,eAAe,CAACd,KAAK,CAAC,UAAUoB,KAAK,EAAE;QAChF,IAAIL,OAAO,GAAGK,KAAK,CAACL,OAAO;QAC3B,OAAOA,OAAO;MAChB,CAAC,CAAC;MACF,IAAIM,sBAAsB,GAAGJ,WAAW,IAAIH,eAAe,CAACZ,IAAI,CAAC,UAAUoB,KAAK,EAAE;QAChF,IAAIP,OAAO,GAAGO,KAAK,CAACP,OAAO;QAC3B,OAAOA,OAAO;MAChB,CAAC,CAAC;MACFV,KAAK,GAAG,CAAC1F,aAAa,IAAI,aAAahE,KAAK,CAAC6J,aAAa,CAAC,KAAK,EAAE;QAChEI,SAAS,EAAE,EAAE,CAACvH,MAAM,CAACyB,SAAS,EAAE,YAAY;MAC9C,CAAC,EAAE,aAAanE,KAAK,CAAC6J,aAAa,CAACrJ,SAAS,CAAC,SAAS,CAAC,EAAE;QACxD4J,OAAO,EAAE,CAACE,WAAW,GAAG,CAAC,CAACvE,WAAW,CAACwE,MAAM,IAAInB,iBAAiB,GAAGoB,qBAAqB;QACzFI,aAAa,EAAE,CAACN,WAAW,GAAG,CAAClB,iBAAiB,IAAIE,kBAAkB,GAAG,CAACkB,qBAAqB,IAAIE,sBAAsB;QACzHvH,QAAQ,EAAEqG,iBAAiB;QAC3B9C,QAAQ,EAAEX,WAAW,CAACwE,MAAM,KAAK,CAAC,IAAID,WAAW;QACjDO,SAAS,EAAE;MACb,CAAC,CAAC,EAAElB,mBAAmB,CAAC;IAC1B,CAAC,CAAC;;IAGF,IAAI5F,UAAU;IAEd,IAAIJ,aAAa,KAAK,OAAO,EAAE;MAC7BI,UAAU,GAAG,SAASA,UAAU,CAAC+G,CAAC,EAAEtI,MAAM,EAAE0D,KAAK,EAAE;QACjD,IAAIxE,GAAG,GAAG4C,SAAS,CAAC9B,MAAM,EAAE0D,KAAK,CAAC;QAClC,IAAIkE,OAAO,GAAGzB,MAAM,CAACtH,GAAG,CAACK,GAAG,CAAC;QAC7B,OAAO;UACLqJ,IAAI,EAAE,aAAa/K,KAAK,CAAC6J,aAAa,CAAClJ,MAAM,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,EAAEf,SAAS,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,EAAEoG,gBAAgB,CAAC1E,GAAG,CAACI,GAAG,CAAC,EAAE;YACjH0I,OAAO,EAAEA,OAAO;YAChBJ,OAAO,EAAE,SAASA,OAAO,CAACgB,CAAC,EAAE;cAC3B,OAAOA,CAAC,CAACC,eAAe,EAAE;YAC5B,CAAC;YACD9H,QAAQ,EAAE,SAASA,QAAQ,CAAC+E,KAAK,EAAE;cACjC,IAAI,CAACS,MAAM,CAACtH,GAAG,CAACK,GAAG,CAAC,EAAE;gBACpBsG,sBAAsB,CAACtG,GAAG,EAAE,IAAI,EAAE,CAACA,GAAG,CAAC,EAAEwG,KAAK,CAACgD,WAAW,CAAC;cAC7D;YACF;UACF,CAAC,CAAC,CAAC;UACHd,OAAO,EAAEA;QACX,CAAC;MACH,CAAC;IACH,CAAC,MAAM;MACLrG,UAAU,GAAG,SAASA,UAAU,CAAC+G,CAAC,EAAEtI,MAAM,EAAE0D,KAAK,EAAE;QACjD,IAAIO,EAAE;QAEN,IAAI/E,GAAG,GAAG4C,SAAS,CAAC9B,MAAM,EAAE0D,KAAK,CAAC;QAClC,IAAIkE,OAAO,GAAGzB,MAAM,CAACtH,GAAG,CAACK,GAAG,CAAC;QAC7B,IAAIkJ,aAAa,GAAGtD,yBAAyB,CAACjG,GAAG,CAACK,GAAG,CAAC;QACtD,IAAIyE,aAAa,GAAGH,gBAAgB,CAAC1E,GAAG,CAACI,GAAG,CAAC;QAC7C,IAAIyJ,mBAAmB;QAEvB,IAAI5G,UAAU,KAAK,MAAM,EAAE;UACzB4G,mBAAmB,GAAGP,aAAa;UACnC,CAAC,CAAC,EAAEhK,WAAW,CAAC,SAAS,CAAC,EAAE,QAAQuF,aAAa,KAAK,IAAI,IAAIA,aAAa,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,aAAa,CAACyE,aAAa,CAAC,KAAK,SAAS,EAAE,OAAO,EAAE,2GAA2G,CAAC;QACrQ,CAAC,MAAM;UACLO,mBAAmB,GAAG,CAAC1E,EAAE,GAAGN,aAAa,KAAK,IAAI,IAAIA,aAAa,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,aAAa,CAACyE,aAAa,MAAM,IAAI,IAAInE,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAGmE,aAAa;QACvK,CAAC,CAAC;;QAGF,OAAO;UACLG,IAAI,EAAE,aAAa/K,KAAK,CAAC6J,aAAa,CAACrJ,SAAS,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,EAAEZ,SAAS,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,EAAEuG,aAAa,EAAE;YACxGyE,aAAa,EAAEO,mBAAmB;YAClCf,OAAO,EAAEA,OAAO;YAChBS,SAAS,EAAE,IAAI;YACfb,OAAO,EAAE,SAASA,OAAO,CAACgB,CAAC,EAAE;cAC3B,OAAOA,CAAC,CAACC,eAAe,EAAE;YAC5B,CAAC;YACD9H,QAAQ,EAAE,SAASA,QAAQ,CAACiI,KAAK,EAAE;cACjC,IAAIF,WAAW,GAAGE,KAAK,CAACF,WAAW;cACnC,IAAIG,QAAQ,GAAGH,WAAW,CAACG,QAAQ;cACnC,IAAIC,UAAU,GAAG,CAAC,CAAC;cACnB,IAAIC,QAAQ,GAAG,CAAC,CAAC,CAAC,CAAC;;cAEnB,IAAIF,QAAQ,IAAInH,aAAa,EAAE;gBAC7B,IAAIsH,SAAS,GAAG,IAAInE,GAAG,CAAC,CAACK,eAAe,EAAEhG,GAAG,CAAC,CAAC;gBAC/CwH,UAAU,CAACK,IAAI,CAAC,UAAUkC,SAAS,EAAEC,WAAW,EAAE;kBAChD,IAAIF,SAAS,CAACnK,GAAG,CAACoK,SAAS,CAAC,EAAE;oBAC5B,IAAIH,UAAU,KAAK,CAAC,CAAC,EAAE;sBACrBA,UAAU,GAAGI,WAAW;oBAC1B,CAAC,MAAM;sBACLH,QAAQ,GAAGG,WAAW;sBACtB,OAAO,IAAI;oBACb;kBACF;kBAEA,OAAO,KAAK;gBACd,CAAC,CAAC;cACJ;cAEA,IAAIH,QAAQ,KAAK,CAAC,CAAC,IAAID,UAAU,KAAKC,QAAQ,IAAIrH,aAAa,EAAE;gBAC/D;gBACA,IAAIyH,SAAS,GAAGzC,UAAU,CAAC9B,KAAK,CAACkE,UAAU,EAAEC,QAAQ,GAAG,CAAC,CAAC;gBAC1D,IAAIK,WAAW,GAAG,EAAE;gBAEpB,IAAIxB,OAAO,EAAE;kBACXuB,SAAS,CAACpJ,OAAO,CAAC,UAAUkJ,SAAS,EAAE;oBACrC,IAAI9C,MAAM,CAACtH,GAAG,CAACoK,SAAS,CAAC,EAAE;sBACzBG,WAAW,CAACnJ,IAAI,CAACgJ,SAAS,CAAC;sBAC3B9C,MAAM,CAAC,QAAQ,CAAC,CAAC8C,SAAS,CAAC;oBAC7B;kBACF,CAAC,CAAC;gBACJ,CAAC,MAAM;kBACLE,SAAS,CAACpJ,OAAO,CAAC,UAAUkJ,SAAS,EAAE;oBACrC,IAAI,CAAC9C,MAAM,CAACtH,GAAG,CAACoK,SAAS,CAAC,EAAE;sBAC1BG,WAAW,CAACnJ,IAAI,CAACgJ,SAAS,CAAC;sBAC3B9C,MAAM,CAACC,GAAG,CAAC6C,SAAS,CAAC;oBACvB;kBACF,CAAC,CAAC;gBACJ;gBAEA,IAAIpG,IAAI,GAAGwD,KAAK,CAACC,IAAI,CAACH,MAAM,CAAC;gBAC7BnF,gBAAgB,KAAK,IAAI,IAAIA,gBAAgB,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,gBAAgB,CAAC,CAAC4G,OAAO,EAAE/E,IAAI,CAACY,GAAG,CAAC,UAAUwF,SAAS,EAAE;kBAC3H,OAAOpH,cAAc,CAACoH,SAAS,CAAC;gBAClC,CAAC,CAAC,EAAEG,WAAW,CAAC3F,GAAG,CAAC,UAAUwF,SAAS,EAAE;kBACvC,OAAOpH,cAAc,CAACoH,SAAS,CAAC;gBAClC,CAAC,CAAC,CAAC;gBACH7D,eAAe,CAACvC,IAAI,CAAC;cACvB,CAAC,MAAM;gBACL;gBACA,IAAIwG,iBAAiB,GAAG5E,mBAAmB;gBAE3C,IAAI/C,aAAa,EAAE;kBACjB,IAAI4C,WAAW,GAAGsD,OAAO,GAAG,CAAC,CAAC,EAAE/J,KAAK,CAACyL,MAAM,EAAED,iBAAiB,EAAEnK,GAAG,CAAC,GAAG,CAAC,CAAC,EAAErB,KAAK,CAAC0L,MAAM,EAAEF,iBAAiB,EAAEnK,GAAG,CAAC;kBACjHsG,sBAAsB,CAACtG,GAAG,EAAE,CAAC0I,OAAO,EAAEtD,WAAW,EAAEoE,WAAW,CAAC;gBACjE,CAAC,MAAM;kBACL;kBACA,IAAIc,MAAM,GAAG,CAAC,CAAC,EAAE5L,YAAY,CAACyG,YAAY,EAAE,EAAE,CAACnE,MAAM,CAAC,CAAC,CAAC,EAAE5C,mBAAmB,CAAC,SAAS,CAAC,EAAE+L,iBAAiB,CAAC,EAAE,CAACnK,GAAG,CAAC,CAAC,EAAE,IAAI,EAAEiE,WAAW,EAAEY,kBAAkB,CAAC;kBAC5J,IAAI0F,YAAY,GAAGD,MAAM,CAAClF,WAAW;oBACjCC,eAAe,GAAGiF,MAAM,CAACjF,eAAe;kBAC5C,IAAImF,eAAe,GAAGD,YAAY,CAAC,CAAC;;kBAEpC,IAAI7B,OAAO,EAAE;oBACX,IAAI+B,UAAU,GAAG,IAAI9E,GAAG,CAAC4E,YAAY,CAAC;oBACtCE,UAAU,CAAC,QAAQ,CAAC,CAACzK,GAAG,CAAC;oBACzBwK,eAAe,GAAG,CAAC,CAAC,EAAE9L,YAAY,CAACyG,YAAY,EAAEgC,KAAK,CAACC,IAAI,CAACqD,UAAU,CAAC,EAAE;sBACvE/B,OAAO,EAAE,KAAK;sBACdrD,eAAe,EAAEA;oBACnB,CAAC,EAAEpB,WAAW,EAAEY,kBAAkB,CAAC,CAACO,WAAW;kBACjD;kBAEAkB,sBAAsB,CAACtG,GAAG,EAAE,CAAC0I,OAAO,EAAE8B,eAAe,EAAEhB,WAAW,CAAC;gBACrE;cACF;cAEAvD,kBAAkB,CAACjG,GAAG,CAAC;YACzB;UACF,CAAC,CAAC,CAAC;UACH0I,OAAO,EAAEA;QACX,CAAC;MACH,CAAC;IACH;IAEA,IAAIgC,mBAAmB,GAAG,SAASA,mBAAmB,CAACtB,CAAC,EAAEtI,MAAM,EAAE0D,KAAK,EAAE;MACvE,IAAImG,WAAW,GAAGtI,UAAU,CAAC+G,CAAC,EAAEtI,MAAM,EAAE0D,KAAK,CAAC;QAC1C6E,IAAI,GAAGsB,WAAW,CAACtB,IAAI;QACvBX,OAAO,GAAGiC,WAAW,CAACjC,OAAO;MAEjC,IAAItG,mBAAmB,EAAE;QACvB,OAAOA,mBAAmB,CAACsG,OAAO,EAAE5H,MAAM,EAAE0D,KAAK,EAAE6E,IAAI,CAAC;MAC1D;MAEA,OAAOA,IAAI;IACb,CAAC,CAAC,CAAC;;IAGH,IAAIuB,eAAe,GAAG,CAAC,CAAC,EAAE3M,gBAAgB,CAAC,SAAS,CAAC,EAAE;MACrD4M,KAAK,EAAE9I,iBAAiB;MACxBwG,SAAS,EAAE,EAAE,CAACvH,MAAM,CAACyB,SAAS,EAAE,mBAAmB,CAAC;MACpDuF,KAAK,EAAE/G,YAAY,CAAC6J,WAAW,IAAI9C,KAAK;MACxC+C,MAAM,EAAEL;IACV,CAAC,EAAE9L,QAAQ,CAACoM,mBAAmB,EAAE;MAC/BzC,SAAS,EAAE,EAAE,CAACvH,MAAM,CAACyB,SAAS,EAAE,gBAAgB;IAClD,CAAC,CAAC;IAEF,IAAII,UAAU,KAAK,KAAK,IAAI0E,OAAO,CAACsB,MAAM,IAAI,CAAC7F,qBAAqB,EAAE;MACpE,IAAIiI,QAAQ,GAAG,CAAC,CAAC,EAAEjN,SAAS,CAAC,SAAS,CAAC,EAAEuJ,OAAO,CAAC;QAC7C2D,YAAY,GAAGD,QAAQ,CAAC,CAAC,CAAC;QAC1BE,WAAW,GAAGF,QAAQ,CAACvF,KAAK,CAAC,CAAC,CAAC;MAEnC,IAAI0F,cAAc,GAAG5K,KAAK,IAAIF,YAAY,CAAC6K,WAAW,CAAC,CAAC,CAAC,CAAC;MAE1D,IAAIC,cAAc,EAAE;QAClBF,YAAY,CAAC1K,KAAK,GAAG4K,cAAc;MACrC;MAEA,OAAO,CAACF,YAAY,EAAE,CAAC,CAAC,EAAEhN,SAAS,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,EAAEA,SAAS,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE0M,eAAe,CAAC,EAAE;QAC9FpK,KAAK,EAAE4K;MACT,CAAC,CAAC,CAAC,CAACpK,MAAM,CAAC,CAAC,CAAC,EAAE5C,mBAAmB,CAAC,SAAS,CAAC,EAAE+M,WAAW,CAAC,CAAC;IAC9D;IAEA,OAAO,CAAC,CAAC,CAAC,EAAEjN,SAAS,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,EAAEA,SAAS,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE0M,eAAe,CAAC,EAAE;MAChFpK,KAAK,EAAEA,KAAK,IAAIF,YAAY,CAACiH,OAAO,CAAC,CAAC,CAAC;IACzC,CAAC,CAAC,CAAC,CAACvG,MAAM,CAAC,CAAC,CAAC,EAAE5C,mBAAmB,CAAC,SAAS,CAAC,EAAEmJ,OAAO,CAAC,CAAC;EAC1D,CAAC,EAAE,CAAC3E,SAAS,EAAEyB,WAAW,EAAEpD,YAAY,EAAEsE,mBAAmB,EAAEE,qBAAqB,EAAEG,yBAAyB,EAAE7D,iBAAiB,EAAE4E,gBAAgB,EAAE9D,UAAU,EAAEmD,eAAe,EAAE1B,gBAAgB,EAAExC,gBAAgB,EAAEwE,sBAAsB,EAAEzB,kBAAkB,CAAC,CAAC;EACnQ,OAAO,CAACyC,gBAAgB,EAAE7B,qBAAqB,CAAC;AAClD"},"metadata":{},"sourceType":"script"}