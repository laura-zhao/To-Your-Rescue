{"ast":null,"code":"import \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/select/style\";\nimport _Select from \"antd/lib/select\";\nvar _jsxFileName = \"/Users/zhaoke/Desktop/TYR/TYR.WEB.CLIENT/src/shared/components/Inputs/CustomPhoneInput.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport NumberFormat from 'react-number-format';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = _Select;\nconst CustomPhoneInput = newProps => {\n  _s();\n  const {\n    phoneNumber,\n    setPhoneNumber,\n    required,\n    label,\n    name\n  } = newProps;\n  const [countryCode, setCountryCode] = useState('1');\n  const onChangeCountry = value => {\n    setCountryCode(value);\n  };\n  const onChangeInput = e => {\n    setPhoneNumber(e.target.value);\n  };\n  const prefixSelector = /*#__PURE__*/_jsxDEV(_Select, {\n    value: countryCode,\n    style: {\n      width: 70\n    },\n    showSearch: true,\n    placeholder: \"Select a country\",\n    optionFilterProp: \"children\",\n    onChange: onChangeCountry,\n    filterOption: (input, option) => (option === null || option === void 0 ? void 0 : option.children.toLowerCase().indexOf(input.toLowerCase())) >= 0,\n    children: [/*#__PURE__*/_jsxDEV(Option, {\n      value: \"1\",\n      children: \"US\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Option, {\n      value: \"91\",\n      children: \"IN\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Option, {\n      value: \"44\",\n      children: \"UK\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Form.Item, {\n    name: [name],\n    label: label,\n    required: required,\n    rules: [{\n      required\n    }, {\n      pattern: /^(\\+\\d{1,2}\\s)?\\(?\\d{3}\\)?[\\s.-]\\d{3}[\\s.-]\\d{4}$/,\n      message: 'Please enter valid 10 digit number'\n    }],\n    children: /*#__PURE__*/_jsxDEV(NumberFormat, {\n      customInput: _Input,\n      name: name,\n      addonBefore: prefixSelector,\n      value: phoneNumber,\n      onChange: onChangeInput,\n      placeholder: \"Enter Phone\",\n      format: `+${countryCode} (###) ###-####`\n    }, \"phone\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(CustomPhoneInput, \"Wni/dbfFhKWIZ/QodbtjboyU178=\");\n_c = CustomPhoneInput;\nexport default CustomPhoneInput;\nvar _c;\n$RefreshReg$(_c, \"CustomPhoneInput\");","map":{"version":3,"names":["useState","NumberFormat","Option","CustomPhoneInput","newProps","phoneNumber","setPhoneNumber","required","label","name","countryCode","setCountryCode","onChangeCountry","value","onChangeInput","e","target","prefixSelector","width","input","option","children","toLowerCase","indexOf","pattern","message"],"sources":["/Users/zhaoke/Desktop/TYR/TYR.WEB.CLIENT/src/shared/components/Inputs/CustomPhoneInput.tsx"],"sourcesContent":["import { FC, useState } from 'react';\nimport {\n  Input, Form, Select,\n} from 'antd';\nimport NumberFormat from 'react-number-format';\n\nconst { Option } = Select;\n\ninterface Props {\n  phoneNumber: string,\n  label: string,\n  name: string,\n  required: boolean,\n  // eslint-disable-next-line no-unused-vars\n  setPhoneNumber: (data: any) => void,\n}\n\nconst CustomPhoneInput: FC<Props> = (newProps) => {\n  const {\n    phoneNumber, setPhoneNumber, required, label, name,\n  } = newProps;\n  const [countryCode, setCountryCode] = useState('1');\n\n  const onChangeCountry = (value: any) => {\n    setCountryCode(value);\n  };\n\n  const onChangeInput = (e: any) => {\n    setPhoneNumber(e.target.value);\n  };\n\n  const prefixSelector = (\n    <Select\n      value={countryCode}\n      style={{ width: 70 }}\n      showSearch\n      placeholder=\"Select a country\"\n      optionFilterProp=\"children\"\n      onChange={onChangeCountry}\n      filterOption={(input, option) => option?.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n    >\n      <Option value=\"1\">US</Option>\n      <Option value=\"91\">IN</Option>\n      <Option value=\"44\">UK</Option>\n    </Select>\n  );\n\n  return (\n    <Form.Item\n      name={[name]}\n      label={label}\n      required={required}\n      rules={[\n        {\n          required,\n        },\n        {\n          pattern: /^(\\+\\d{1,2}\\s)?\\(?\\d{3}\\)?[\\s.-]\\d{3}[\\s.-]\\d{4}$/,\n          message: 'Please enter valid 10 digit number',\n        },\n      ]}\n    >\n      <NumberFormat\n        customInput={Input}\n        name={name}\n        addonBefore={prefixSelector}\n        key=\"phone\"\n        value={phoneNumber}\n        onChange={onChangeInput}\n        placeholder=\"Enter Phone\"\n        format={`+${countryCode} (###) ###-####`}\n      />\n    </Form.Item>\n  );\n};\n\nexport default CustomPhoneInput;\n"],"mappings":";;;;;;;;AAAA,SAAaA,QAAQ,QAAQ,OAAO;AAIpC,OAAOC,YAAY,MAAM,qBAAqB;AAAC;AAE/C,MAAM;EAAEC;AAAO,CAAC,UAAS;AAWzB,MAAMC,gBAA2B,GAAIC,QAAQ,IAAK;EAAA;EAChD,MAAM;IACJC,WAAW;IAAEC,cAAc;IAAEC,QAAQ;IAAEC,KAAK;IAAEC;EAChD,CAAC,GAAGL,QAAQ;EACZ,MAAM,CAACM,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,GAAG,CAAC;EAEnD,MAAMY,eAAe,GAAIC,KAAU,IAAK;IACtCF,cAAc,CAACE,KAAK,CAAC;EACvB,CAAC;EAED,MAAMC,aAAa,GAAIC,CAAM,IAAK;IAChCT,cAAc,CAACS,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC;EAChC,CAAC;EAED,MAAMI,cAAc,gBAClB;IACE,KAAK,EAAEP,WAAY;IACnB,KAAK,EAAE;MAAEQ,KAAK,EAAE;IAAG,CAAE;IACrB,UAAU;IACV,WAAW,EAAC,kBAAkB;IAC9B,gBAAgB,EAAC,UAAU;IAC3B,QAAQ,EAAEN,eAAgB;IAC1B,YAAY,EAAE,CAACO,KAAK,EAAEC,MAAM,KAAK,CAAAA,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEC,QAAQ,CAACC,WAAW,EAAE,CAACC,OAAO,CAACJ,KAAK,CAACG,WAAW,EAAE,CAAC,KAAI,CAAE;IAAA,wBAElG,QAAC,MAAM;MAAC,KAAK,EAAC,GAAG;MAAA,UAAC;IAAE;MAAA;MAAA;MAAA;IAAA,QAAS,eAC7B,QAAC,MAAM;MAAC,KAAK,EAAC,IAAI;MAAA,UAAC;IAAE;MAAA;MAAA;MAAA;IAAA,QAAS,eAC9B,QAAC,MAAM;MAAC,KAAK,EAAC,IAAI;MAAA,UAAC;IAAE;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QAEjC;EAED,oBACE,cAAM,IAAI;IACR,IAAI,EAAE,CAACb,IAAI,CAAE;IACb,KAAK,EAAED,KAAM;IACb,QAAQ,EAAED,QAAS;IACnB,KAAK,EAAE,CACL;MACEA;IACF,CAAC,EACD;MACEiB,OAAO,EAAE,mDAAmD;MAC5DC,OAAO,EAAE;IACX,CAAC,CACD;IAAA,uBAEF,QAAC,YAAY;MACX,WAAW,QAAQ;MACnB,IAAI,EAAEhB,IAAK;MACX,WAAW,EAAEQ,cAAe;MAE5B,KAAK,EAAEZ,WAAY;MACnB,QAAQ,EAAES,aAAc;MACxB,WAAW,EAAC,aAAa;MACzB,MAAM,EAAG,IAAGJ,WAAY;IAAiB,GAJrC,OAAO;MAAA;MAAA;MAAA;IAAA;EAKX;IAAA;IAAA;IAAA;EAAA,QACQ;AAEhB,CAAC;AAAC,GAzDIP,gBAA2B;AAAA,KAA3BA,gBAA2B;AA2DjC,eAAeA,gBAAgB;AAAC;AAAA"},"metadata":{},"sourceType":"module"}