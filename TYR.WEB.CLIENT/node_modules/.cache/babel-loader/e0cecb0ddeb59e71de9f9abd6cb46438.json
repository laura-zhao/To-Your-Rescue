{"ast":null,"code":"import \"antd/lib/row/style\";\nimport _Row from \"antd/lib/row\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nvar _jsxFileName = \"/Users/zhaoke/Desktop/TYR/TYR.WEB.CLIENT/src/components/ResetPassword/ResetPassword.tsx\",\n  _s = $RefreshSig$();\n/* eslint-disable no-template-curly-in-string */\nimport { useEffect, useRef, useState } from 'react';\nimport { useLocation, useSearchParams, useNavigate } from 'react-router-dom';\nimport { passwordRegex } from '../../shared/validationRegex';\nimport ButtonLoader from '../../shared/components/ButtonLoader';\nimport './ResetPassword.less';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cssPrefix = 'ftr-reset-password';\n// eslint-disable-next-line no-unused-vars\nexport const ResetPassword = props => {\n  _s();\n  const {\n    resetPassword,\n    forgotPasswordLoading\n  } = props;\n  const [form] = _Form.useForm();\n  // eslint-disable-next-line no-unused-vars\n  const [pageType, setPageType] = useState('');\n  const location = useLocation();\n  // eslint-disable-next-line no-unused-vars\n  const [searchParams, setSearchParams] = useSearchParams();\n  const navigate = useNavigate();\n  const titleRef = useRef(null);\n  useEffect(() => {\n    var _titleRef$current;\n    (_titleRef$current = titleRef.current) === null || _titleRef$current === void 0 ? void 0 : _titleRef$current.scrollIntoView();\n  }, [titleRef]);\n  useEffect(() => {\n    var _location$pathname;\n    setPageType(location === null || location === void 0 ? void 0 : (_location$pathname = location.pathname) === null || _location$pathname === void 0 ? void 0 : _location$pathname.split('-')[1]);\n  }, [location]);\n  const onFinish = () => {\n    const token = searchParams.get('token');\n    const email = searchParams.get('email');\n    const password = form.getFieldValue('password');\n    resetPassword({\n      token,\n      email,\n      password\n    }, () => {\n      setInterval(() => {\n        navigate('/login');\n      }, 1000);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${cssPrefix}`,\n    ref: titleRef,\n    children: /*#__PURE__*/_jsxDEV(_Form, {\n      className: `${cssPrefix}__form`,\n      name: \"basic\",\n      labelCol: {\n        span: 8\n      },\n      wrapperCol: {\n        span: 8\n      },\n      initialValues: {\n        remember: true\n      },\n      form: form,\n      onFinish: onFinish,\n      autoComplete: \"on\",\n      children: [/*#__PURE__*/_jsxDEV(_Form.Item, {\n        label: \"Password\",\n        name: \"password\",\n        hasFeedback: true,\n        rules: [{\n          required: true,\n          message: 'Password is required'\n        }, {\n          pattern: passwordRegex,\n          message: 'Minimum eight characters, at least one uppercase and one lowercase letter, one number and one special character'\n        }],\n        children: /*#__PURE__*/_jsxDEV(_Input.Password, {\n          autoComplete: \"new-password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n        label: \"Password Confirmation\",\n        name: \"confirmPassword\",\n        dependencies: ['password'],\n        hasFeedback: true,\n        rules: [{\n          required: true,\n          message: 'Confirm Password is required'\n        }, _ref => {\n          let {\n            getFieldValue\n          } = _ref;\n          return {\n            validator(_, value) {\n              if (!value || getFieldValue('password') === value) {\n                return Promise.resolve();\n              }\n              return Promise.reject(new Error('Password mismatch'));\n            }\n          };\n        }],\n        children: /*#__PURE__*/_jsxDEV(_Input.Password, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(_Row, {\n        justify: \"center\",\n        children: /*#__PURE__*/_jsxDEV(_Button, {\n          className: `${cssPrefix}__form__submit`,\n          type: \"primary\",\n          htmlType: \"submit\",\n          children: [\"Reset Password\", forgotPasswordLoading && /*#__PURE__*/_jsxDEV(ButtonLoader, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 39\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(ResetPassword, \"TPm7yee2lGe/PpvlaDkzURf+KB4=\", false, function () {\n  return [_Form.useForm, useLocation, useSearchParams, useNavigate];\n});\n_c = ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["useEffect","useRef","useState","useLocation","useSearchParams","useNavigate","passwordRegex","ButtonLoader","cssPrefix","ResetPassword","props","resetPassword","forgotPasswordLoading","form","useForm","pageType","setPageType","location","searchParams","setSearchParams","navigate","titleRef","current","scrollIntoView","pathname","split","onFinish","token","get","email","password","getFieldValue","setInterval","span","remember","required","message","pattern","validator","_","value","Promise","resolve","reject","Error"],"sources":["/Users/zhaoke/Desktop/TYR/TYR.WEB.CLIENT/src/components/ResetPassword/ResetPassword.tsx"],"sourcesContent":["/* eslint-disable no-template-curly-in-string */\nimport {\n  useEffect, useRef, FC, useState,\n} from 'react';\nimport { useLocation, useSearchParams, useNavigate } from 'react-router-dom';\nimport {\n  Row, Button, Form, Input,\n} from 'antd';\nimport { passwordRegex } from '../../shared/validationRegex';\nimport ButtonLoader from '../../shared/components/ButtonLoader';\nimport './ResetPassword.less';\n\nconst cssPrefix = 'ftr-reset-password';\ninterface ResetPasswordProps {\n  resetPassword: any,\n  forgotPasswordLoading: boolean,\n}\n\n// eslint-disable-next-line no-unused-vars\nexport const ResetPassword: FC<ResetPasswordProps> = (props) => {\n  const { resetPassword, forgotPasswordLoading } = props;\n  const [form] = Form.useForm();\n  // eslint-disable-next-line no-unused-vars\n  const [pageType, setPageType] = useState<any>('');\n  const location = useLocation();\n  // eslint-disable-next-line no-unused-vars\n  const [searchParams, setSearchParams] = useSearchParams();\n  const navigate = useNavigate();\n\n  const titleRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    titleRef.current?.scrollIntoView();\n  }, [titleRef]);\n\n  useEffect(() => {\n    setPageType(location?.pathname?.split('-')[1]);\n  }, [location]);\n\n  const onFinish = () => {\n    const token = searchParams.get('token');\n    const email = searchParams.get('email');\n    const password = form.getFieldValue('password');\n    resetPassword({\n      token,\n      email,\n      password,\n    }, () => {\n      setInterval(() => {\n        navigate('/login');\n      }, 1000);\n    });\n  };\n\n  return (\n    <div className={`${cssPrefix}`} ref={titleRef}>\n      <Form\n        className={`${cssPrefix}__form`}\n        name=\"basic\"\n        labelCol={{ span: 8 }}\n        wrapperCol={{ span: 8 }}\n        initialValues={{ remember: true }}\n        form={form}\n        onFinish={onFinish}\n        autoComplete=\"on\"\n      >\n        <Form.Item\n          label=\"Password\"\n          name=\"password\"\n          hasFeedback\n          rules={[\n            {\n              required: true,\n              message: 'Password is required',\n            },\n            {\n              pattern: passwordRegex,\n              message: 'Minimum eight characters, at least one uppercase and one lowercase letter, one number and one special character',\n            },\n          ]}\n        >\n          <Input.Password autoComplete=\"new-password\" />\n        </Form.Item>\n        <Form.Item\n          label=\"Password Confirmation\"\n          name=\"confirmPassword\"\n          dependencies={['password']}\n          hasFeedback\n          rules={[\n            { required: true, message: 'Confirm Password is required' },\n            ({ getFieldValue }) => ({\n              validator(_, value) {\n                if (!value || getFieldValue('password') === value) {\n                  return Promise.resolve();\n                }\n                return Promise.reject(new Error('Password mismatch'));\n              },\n            }),\n          ]}\n        >\n          <Input.Password />\n        </Form.Item>\n        <Row justify=\"center\">\n          <Button className={`${cssPrefix}__form__submit`} type=\"primary\" htmlType=\"submit\">\n            Reset Password\n            {forgotPasswordLoading && <ButtonLoader />}\n          </Button>\n        </Row>\n        <br />\n      </Form>\n    </div>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}