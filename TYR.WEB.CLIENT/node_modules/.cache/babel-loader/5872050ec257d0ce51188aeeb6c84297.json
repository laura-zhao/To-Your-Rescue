{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isCheckDisabled = isCheckDisabled;\nexports.conductCheck = conductCheck;\nvar _warning = _interopRequireDefault(require(\"rc-util/lib/warning\"));\nfunction removeFromCheckedKeys(halfCheckedKeys, checkedKeys) {\n  var filteredKeys = new Set();\n  halfCheckedKeys.forEach(function (key) {\n    if (!checkedKeys.has(key)) {\n      filteredKeys.add(key);\n    }\n  });\n  return filteredKeys;\n}\nfunction isCheckDisabled(node) {\n  var _ref = node || {},\n    disabled = _ref.disabled,\n    disableCheckbox = _ref.disableCheckbox,\n    checkable = _ref.checkable;\n  return !!(disabled || disableCheckbox) || checkable === false;\n} // Fill miss keys\n\nfunction fillConductCheck(keys, levelEntities, maxLevel, syntheticGetCheckDisabled) {\n  var checkedKeys = new Set(keys);\n  var halfCheckedKeys = new Set(); // Add checked keys top to bottom\n\n  for (var level = 0; level <= maxLevel; level += 1) {\n    var entities = levelEntities.get(level) || new Set();\n    entities.forEach(function (entity) {\n      var key = entity.key,\n        node = entity.node,\n        _entity$children = entity.children,\n        children = _entity$children === void 0 ? [] : _entity$children;\n      if (checkedKeys.has(key) && !syntheticGetCheckDisabled(node)) {\n        children.filter(function (childEntity) {\n          return !syntheticGetCheckDisabled(childEntity.node);\n        }).forEach(function (childEntity) {\n          checkedKeys.add(childEntity.key);\n        });\n      }\n    });\n  } // Add checked keys from bottom to top\n\n  var visitedKeys = new Set();\n  for (var _level = maxLevel; _level >= 0; _level -= 1) {\n    var _entities = levelEntities.get(_level) || new Set();\n    _entities.forEach(function (entity) {\n      var parent = entity.parent,\n        node = entity.node; // Skip if no need to check\n\n      if (syntheticGetCheckDisabled(node) || !entity.parent || visitedKeys.has(entity.parent.key)) {\n        return;\n      } // Skip if parent is disabled\n\n      if (syntheticGetCheckDisabled(entity.parent.node)) {\n        visitedKeys.add(parent.key);\n        return;\n      }\n      var allChecked = true;\n      var partialChecked = false;\n      (parent.children || []).filter(function (childEntity) {\n        return !syntheticGetCheckDisabled(childEntity.node);\n      }).forEach(function (_ref2) {\n        var key = _ref2.key;\n        var checked = checkedKeys.has(key);\n        if (allChecked && !checked) {\n          allChecked = false;\n        }\n        if (!partialChecked && (checked || halfCheckedKeys.has(key))) {\n          partialChecked = true;\n        }\n      });\n      if (allChecked) {\n        checkedKeys.add(parent.key);\n      }\n      if (partialChecked) {\n        halfCheckedKeys.add(parent.key);\n      }\n      visitedKeys.add(parent.key);\n    });\n  }\n  return {\n    checkedKeys: Array.from(checkedKeys),\n    halfCheckedKeys: Array.from(removeFromCheckedKeys(halfCheckedKeys, checkedKeys))\n  };\n} // Remove useless key\n\nfunction cleanConductCheck(keys, halfKeys, levelEntities, maxLevel, syntheticGetCheckDisabled) {\n  var checkedKeys = new Set(keys);\n  var halfCheckedKeys = new Set(halfKeys); // Remove checked keys from top to bottom\n\n  for (var level = 0; level <= maxLevel; level += 1) {\n    var entities = levelEntities.get(level) || new Set();\n    entities.forEach(function (entity) {\n      var key = entity.key,\n        node = entity.node,\n        _entity$children2 = entity.children,\n        children = _entity$children2 === void 0 ? [] : _entity$children2;\n      if (!checkedKeys.has(key) && !halfCheckedKeys.has(key) && !syntheticGetCheckDisabled(node)) {\n        children.filter(function (childEntity) {\n          return !syntheticGetCheckDisabled(childEntity.node);\n        }).forEach(function (childEntity) {\n          checkedKeys.delete(childEntity.key);\n        });\n      }\n    });\n  } // Remove checked keys form bottom to top\n\n  halfCheckedKeys = new Set();\n  var visitedKeys = new Set();\n  for (var _level2 = maxLevel; _level2 >= 0; _level2 -= 1) {\n    var _entities2 = levelEntities.get(_level2) || new Set();\n    _entities2.forEach(function (entity) {\n      var parent = entity.parent,\n        node = entity.node; // Skip if no need to check\n\n      if (syntheticGetCheckDisabled(node) || !entity.parent || visitedKeys.has(entity.parent.key)) {\n        return;\n      } // Skip if parent is disabled\n\n      if (syntheticGetCheckDisabled(entity.parent.node)) {\n        visitedKeys.add(parent.key);\n        return;\n      }\n      var allChecked = true;\n      var partialChecked = false;\n      (parent.children || []).filter(function (childEntity) {\n        return !syntheticGetCheckDisabled(childEntity.node);\n      }).forEach(function (_ref3) {\n        var key = _ref3.key;\n        var checked = checkedKeys.has(key);\n        if (allChecked && !checked) {\n          allChecked = false;\n        }\n        if (!partialChecked && (checked || halfCheckedKeys.has(key))) {\n          partialChecked = true;\n        }\n      });\n      if (!allChecked) {\n        checkedKeys.delete(parent.key);\n      }\n      if (partialChecked) {\n        halfCheckedKeys.add(parent.key);\n      }\n      visitedKeys.add(parent.key);\n    });\n  }\n  return {\n    checkedKeys: Array.from(checkedKeys),\n    halfCheckedKeys: Array.from(removeFromCheckedKeys(halfCheckedKeys, checkedKeys))\n  };\n}\n/**\n * Conduct with keys.\n * @param keyList current key list\n * @param keyEntities key - dataEntity map\n * @param mode `fill` to fill missing key, `clean` to remove useless key\n */\n\nfunction conductCheck(keyList, checked, keyEntities, getCheckDisabled) {\n  var warningMissKeys = [];\n  var syntheticGetCheckDisabled;\n  if (getCheckDisabled) {\n    syntheticGetCheckDisabled = getCheckDisabled;\n  } else {\n    syntheticGetCheckDisabled = isCheckDisabled;\n  } // We only handle exist keys\n\n  var keys = new Set(keyList.filter(function (key) {\n    var hasEntity = !!keyEntities[key];\n    if (!hasEntity) {\n      warningMissKeys.push(key);\n    }\n    return hasEntity;\n  }));\n  var levelEntities = new Map();\n  var maxLevel = 0; // Convert entities by level for calculation\n\n  Object.keys(keyEntities).forEach(function (key) {\n    var entity = keyEntities[key];\n    var level = entity.level;\n    var levelSet = levelEntities.get(level);\n    if (!levelSet) {\n      levelSet = new Set();\n      levelEntities.set(level, levelSet);\n    }\n    levelSet.add(entity);\n    maxLevel = Math.max(maxLevel, level);\n  });\n  (0, _warning.default)(!warningMissKeys.length, \"Tree missing follow keys: \".concat(warningMissKeys.slice(0, 100).map(function (key) {\n    return \"'\".concat(key, \"'\");\n  }).join(', ')));\n  var result;\n  if (checked === true) {\n    result = fillConductCheck(keys, levelEntities, maxLevel, syntheticGetCheckDisabled);\n  } else {\n    result = cleanConductCheck(keys, checked.halfCheckedKeys, levelEntities, maxLevel, syntheticGetCheckDisabled);\n  }\n  return result;\n}","map":{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","isCheckDisabled","conductCheck","_warning","removeFromCheckedKeys","halfCheckedKeys","checkedKeys","filteredKeys","Set","forEach","key","has","add","node","_ref","disabled","disableCheckbox","checkable","fillConductCheck","keys","levelEntities","maxLevel","syntheticGetCheckDisabled","level","entities","get","entity","_entity$children","children","filter","childEntity","visitedKeys","_level","_entities","parent","allChecked","partialChecked","_ref2","checked","Array","from","cleanConductCheck","halfKeys","_entity$children2","delete","_level2","_entities2","_ref3","keyList","keyEntities","getCheckDisabled","warningMissKeys","hasEntity","push","Map","levelSet","set","Math","max","default","length","concat","slice","map","join","result"],"sources":["/Users/zhaoke/Desktop/TYR/TYR.WEB.CLIENT/node_modules/rc-tree/lib/utils/conductUtil.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isCheckDisabled = isCheckDisabled;\nexports.conductCheck = conductCheck;\n\nvar _warning = _interopRequireDefault(require(\"rc-util/lib/warning\"));\n\nfunction removeFromCheckedKeys(halfCheckedKeys, checkedKeys) {\n  var filteredKeys = new Set();\n  halfCheckedKeys.forEach(function (key) {\n    if (!checkedKeys.has(key)) {\n      filteredKeys.add(key);\n    }\n  });\n  return filteredKeys;\n}\n\nfunction isCheckDisabled(node) {\n  var _ref = node || {},\n      disabled = _ref.disabled,\n      disableCheckbox = _ref.disableCheckbox,\n      checkable = _ref.checkable;\n\n  return !!(disabled || disableCheckbox) || checkable === false;\n} // Fill miss keys\n\n\nfunction fillConductCheck(keys, levelEntities, maxLevel, syntheticGetCheckDisabled) {\n  var checkedKeys = new Set(keys);\n  var halfCheckedKeys = new Set(); // Add checked keys top to bottom\n\n  for (var level = 0; level <= maxLevel; level += 1) {\n    var entities = levelEntities.get(level) || new Set();\n    entities.forEach(function (entity) {\n      var key = entity.key,\n          node = entity.node,\n          _entity$children = entity.children,\n          children = _entity$children === void 0 ? [] : _entity$children;\n\n      if (checkedKeys.has(key) && !syntheticGetCheckDisabled(node)) {\n        children.filter(function (childEntity) {\n          return !syntheticGetCheckDisabled(childEntity.node);\n        }).forEach(function (childEntity) {\n          checkedKeys.add(childEntity.key);\n        });\n      }\n    });\n  } // Add checked keys from bottom to top\n\n\n  var visitedKeys = new Set();\n\n  for (var _level = maxLevel; _level >= 0; _level -= 1) {\n    var _entities = levelEntities.get(_level) || new Set();\n\n    _entities.forEach(function (entity) {\n      var parent = entity.parent,\n          node = entity.node; // Skip if no need to check\n\n      if (syntheticGetCheckDisabled(node) || !entity.parent || visitedKeys.has(entity.parent.key)) {\n        return;\n      } // Skip if parent is disabled\n\n\n      if (syntheticGetCheckDisabled(entity.parent.node)) {\n        visitedKeys.add(parent.key);\n        return;\n      }\n\n      var allChecked = true;\n      var partialChecked = false;\n      (parent.children || []).filter(function (childEntity) {\n        return !syntheticGetCheckDisabled(childEntity.node);\n      }).forEach(function (_ref2) {\n        var key = _ref2.key;\n        var checked = checkedKeys.has(key);\n\n        if (allChecked && !checked) {\n          allChecked = false;\n        }\n\n        if (!partialChecked && (checked || halfCheckedKeys.has(key))) {\n          partialChecked = true;\n        }\n      });\n\n      if (allChecked) {\n        checkedKeys.add(parent.key);\n      }\n\n      if (partialChecked) {\n        halfCheckedKeys.add(parent.key);\n      }\n\n      visitedKeys.add(parent.key);\n    });\n  }\n\n  return {\n    checkedKeys: Array.from(checkedKeys),\n    halfCheckedKeys: Array.from(removeFromCheckedKeys(halfCheckedKeys, checkedKeys))\n  };\n} // Remove useless key\n\n\nfunction cleanConductCheck(keys, halfKeys, levelEntities, maxLevel, syntheticGetCheckDisabled) {\n  var checkedKeys = new Set(keys);\n  var halfCheckedKeys = new Set(halfKeys); // Remove checked keys from top to bottom\n\n  for (var level = 0; level <= maxLevel; level += 1) {\n    var entities = levelEntities.get(level) || new Set();\n    entities.forEach(function (entity) {\n      var key = entity.key,\n          node = entity.node,\n          _entity$children2 = entity.children,\n          children = _entity$children2 === void 0 ? [] : _entity$children2;\n\n      if (!checkedKeys.has(key) && !halfCheckedKeys.has(key) && !syntheticGetCheckDisabled(node)) {\n        children.filter(function (childEntity) {\n          return !syntheticGetCheckDisabled(childEntity.node);\n        }).forEach(function (childEntity) {\n          checkedKeys.delete(childEntity.key);\n        });\n      }\n    });\n  } // Remove checked keys form bottom to top\n\n\n  halfCheckedKeys = new Set();\n  var visitedKeys = new Set();\n\n  for (var _level2 = maxLevel; _level2 >= 0; _level2 -= 1) {\n    var _entities2 = levelEntities.get(_level2) || new Set();\n\n    _entities2.forEach(function (entity) {\n      var parent = entity.parent,\n          node = entity.node; // Skip if no need to check\n\n      if (syntheticGetCheckDisabled(node) || !entity.parent || visitedKeys.has(entity.parent.key)) {\n        return;\n      } // Skip if parent is disabled\n\n\n      if (syntheticGetCheckDisabled(entity.parent.node)) {\n        visitedKeys.add(parent.key);\n        return;\n      }\n\n      var allChecked = true;\n      var partialChecked = false;\n      (parent.children || []).filter(function (childEntity) {\n        return !syntheticGetCheckDisabled(childEntity.node);\n      }).forEach(function (_ref3) {\n        var key = _ref3.key;\n        var checked = checkedKeys.has(key);\n\n        if (allChecked && !checked) {\n          allChecked = false;\n        }\n\n        if (!partialChecked && (checked || halfCheckedKeys.has(key))) {\n          partialChecked = true;\n        }\n      });\n\n      if (!allChecked) {\n        checkedKeys.delete(parent.key);\n      }\n\n      if (partialChecked) {\n        halfCheckedKeys.add(parent.key);\n      }\n\n      visitedKeys.add(parent.key);\n    });\n  }\n\n  return {\n    checkedKeys: Array.from(checkedKeys),\n    halfCheckedKeys: Array.from(removeFromCheckedKeys(halfCheckedKeys, checkedKeys))\n  };\n}\n/**\n * Conduct with keys.\n * @param keyList current key list\n * @param keyEntities key - dataEntity map\n * @param mode `fill` to fill missing key, `clean` to remove useless key\n */\n\n\nfunction conductCheck(keyList, checked, keyEntities, getCheckDisabled) {\n  var warningMissKeys = [];\n  var syntheticGetCheckDisabled;\n\n  if (getCheckDisabled) {\n    syntheticGetCheckDisabled = getCheckDisabled;\n  } else {\n    syntheticGetCheckDisabled = isCheckDisabled;\n  } // We only handle exist keys\n\n\n  var keys = new Set(keyList.filter(function (key) {\n    var hasEntity = !!keyEntities[key];\n\n    if (!hasEntity) {\n      warningMissKeys.push(key);\n    }\n\n    return hasEntity;\n  }));\n  var levelEntities = new Map();\n  var maxLevel = 0; // Convert entities by level for calculation\n\n  Object.keys(keyEntities).forEach(function (key) {\n    var entity = keyEntities[key];\n    var level = entity.level;\n    var levelSet = levelEntities.get(level);\n\n    if (!levelSet) {\n      levelSet = new Set();\n      levelEntities.set(level, levelSet);\n    }\n\n    levelSet.add(entity);\n    maxLevel = Math.max(maxLevel, level);\n  });\n  (0, _warning.default)(!warningMissKeys.length, \"Tree missing follow keys: \".concat(warningMissKeys.slice(0, 100).map(function (key) {\n    return \"'\".concat(key, \"'\");\n  }).join(', ')));\n  var result;\n\n  if (checked === true) {\n    result = fillConductCheck(keys, levelEntities, maxLevel, syntheticGetCheckDisabled);\n  } else {\n    result = cleanConductCheck(keys, checked.halfCheckedKeys, levelEntities, maxLevel, syntheticGetCheckDisabled);\n  }\n\n  return result;\n}"],"mappings":"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"},"metadata":{},"sourceType":"script"}