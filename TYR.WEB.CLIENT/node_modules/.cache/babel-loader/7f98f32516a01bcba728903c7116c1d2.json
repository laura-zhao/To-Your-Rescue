{"ast":null,"code":"import \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/col/style\";\nimport _Col from \"antd/lib/col\";\nimport \"antd/lib/row/style\";\nimport _Row from \"antd/lib/row\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nimport \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nimport \"antd/lib/select/style\";\nimport _Select from \"antd/lib/select\";\nimport \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nvar _jsxFileName = \"/Users/zhaoke/Desktop/TYR/TYR.WEB.CLIENT/src/components/customization/components/AnimalVaccinationType.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { PlusOutlined, ExclamationCircleOutlined } from '@ant-design/icons';\nimport CustomTable from '../../../shared/components/CustomTable';\nimport alertConstant from '../../../shared/constants/alert.json';\nimport { apiCall } from '../../../shared/api/apiWrapper';\nimport constants from '../constant.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  confirm\n} = _Modal;\nconst cssPrefix = 'ftr-customization';\nconst AnimalVaccinationType = newProps => {\n  _s();\n  const {\n    activeTab\n  } = newProps;\n  const newAnimalType = [];\n  const newVaccinationType = [];\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [animalTypeList, setAnimalTypeList] = useState(newAnimalType);\n  const [vaccinationTypeList, setVaccinationTypeList] = useState(newVaccinationType);\n  const [errorMsg, setErrorMsg] = useState('');\n  const [validationStatus, setValidationStatus] = useState({});\n  const [animalType, setAnimalType] = useState({});\n  const [vaccinationTypeId, setVaccinationTypeId] = useState(0);\n  const [vaccinationType, setVaccinationType] = useState('');\n  const [editModal, setEditModal] = useState(false);\n  const [changeData, setChangeData] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [key, setKey] = useState('');\n  const [tempForm, setTempForm] = useState('');\n  const {\n    Option\n  } = _Select;\n  const [form] = _Form.useForm();\n  const showModal = () => {\n    setEditModal(false);\n    setTempForm('');\n    setIsModalVisible(true);\n  };\n  useEffect(() => {\n    const data = {};\n    if (parseInt(activeTab, 10) === constants.customization_types.vaccinationTypes) {\n      apiCall('animaltype/get-animal-types', 'GET', data).then(resp => {\n        if ((resp === null || resp === void 0 ? void 0 : resp.status) === 200) {\n          var _resp$data, _resp$data$data, _resp$data2, _resp$data2$data, _resp$data2$data$anim, _resp$data2$data$anim2, _resp$data3, _resp$data3$data, _resp$data3$data$anim, _resp$data3$data$anim2;\n          setAnimalTypeList(resp === null || resp === void 0 ? void 0 : (_resp$data = resp.data) === null || _resp$data === void 0 ? void 0 : (_resp$data$data = _resp$data.data) === null || _resp$data$data === void 0 ? void 0 : _resp$data$data.animalTypes);\n          setAnimalType({\n            id: resp === null || resp === void 0 ? void 0 : (_resp$data2 = resp.data) === null || _resp$data2 === void 0 ? void 0 : (_resp$data2$data = _resp$data2.data) === null || _resp$data2$data === void 0 ? void 0 : (_resp$data2$data$anim = _resp$data2$data.animalTypes) === null || _resp$data2$data$anim === void 0 ? void 0 : (_resp$data2$data$anim2 = _resp$data2$data$anim[0]) === null || _resp$data2$data$anim2 === void 0 ? void 0 : _resp$data2$data$anim2.id,\n            typeName: resp === null || resp === void 0 ? void 0 : (_resp$data3 = resp.data) === null || _resp$data3 === void 0 ? void 0 : (_resp$data3$data = _resp$data3.data) === null || _resp$data3$data === void 0 ? void 0 : (_resp$data3$data$anim = _resp$data3$data.animalTypes) === null || _resp$data3$data$anim === void 0 ? void 0 : (_resp$data3$data$anim2 = _resp$data3$data$anim[0]) === null || _resp$data3$data$anim2 === void 0 ? void 0 : _resp$data3$data$anim2.typeName\n          });\n        }\n      });\n    }\n  }, [activeTab]);\n  useEffect(() => {\n    const data = {};\n    if ((animalType === null || animalType === void 0 ? void 0 : animalType.id) > 0) {\n      apiCall(`vaccination-type/get-vaccination-type-by-animalId?animalTypeId=${animalType === null || animalType === void 0 ? void 0 : animalType.id}`, 'GET', data).then(resp => {\n        var _resp$data4;\n        if (resp === null || resp === void 0 ? void 0 : (_resp$data4 = resp.data) === null || _resp$data4 === void 0 ? void 0 : _resp$data4.success) {\n          var _resp$data5, _resp$data5$data;\n          setVaccinationTypeList(resp === null || resp === void 0 ? void 0 : (_resp$data5 = resp.data) === null || _resp$data5 === void 0 ? void 0 : (_resp$data5$data = _resp$data5.data) === null || _resp$data5$data === void 0 ? void 0 : _resp$data5$data.vaccinationTypes);\n        }\n      });\n    }\n    if (!isModalVisible) {\n      setErrorMsg('');\n      setLoading(false);\n      setVaccinationType('');\n      setChangeData(false);\n      setVaccinationTypeId(0);\n      setValidationStatus({});\n    }\n    setKey(Date.now());\n  }, [animalType, changeData, isModalVisible]);\n  const validate = vaccinationTypeData => {\n    if (!vaccinationTypeData) {\n      setErrorMsg('Vaccination Type is required');\n      return {\n        validateStatus: 'error'\n      };\n    }\n    if (vaccinationTypeData.length > 150) {\n      setErrorMsg('Should be less than 150 characters');\n      return {\n        validateStatus: 'error'\n      };\n    }\n    setErrorMsg('');\n    return {\n      validateStatus: 'success'\n    };\n  };\n  function onChange(value) {\n    const id = parseInt(value.split(',')[0], 10);\n    const typeName = value.split(' ')[1];\n    setAnimalType({\n      id,\n      typeName\n    });\n  }\n  const handleInput = value => {\n    setValidationStatus({\n      ...validate(value)\n    });\n    setVaccinationType(value);\n  };\n  const setEditModalOpen = (value, data) => {\n    setVaccinationType(data.vaccinationTypeName);\n    setTempForm(data.vaccinationTypeName);\n    setVaccinationTypeId(data.id);\n    setChangeData(data);\n    setEditModal(value);\n    setIsModalVisible(value);\n  };\n  const handleOk = async () => {\n    if (editModal && vaccinationType === tempForm && vaccinationType.length > 0) {\n      setIsModalVisible(false);\n      setEditModal(false);\n    } else {\n      setLoading(true);\n      const validateResponse = validate(vaccinationType);\n      if (validateResponse && validateResponse.validateStatus !== 'success') {\n        setValidationStatus({\n          ...validate(vaccinationType)\n        });\n        setLoading(false);\n        // eslint-disable-next-line no-useless-return\n        return;\n      }\n      const data = {\n        vaccinationTypeName: vaccinationType,\n        AnimalTypeId: animalType === null || animalType === void 0 ? void 0 : animalType.id\n      };\n      apiCall(`vaccination-type/available-vaccination-type?vaccinationType=${vaccinationType}&animaltypeId=${animalType === null || animalType === void 0 ? void 0 : animalType.id}`, 'get', data).then(resp => {\n        var _resp$data6, _resp$data6$data;\n        if (resp === null || resp === void 0 ? void 0 : (_resp$data6 = resp.data) === null || _resp$data6 === void 0 ? void 0 : (_resp$data6$data = _resp$data6.data) === null || _resp$data6$data === void 0 ? void 0 : _resp$data6$data.isAvailable) {\n          setIsModalVisible(false);\n          if (!editModal) {\n            apiCall('vaccination-type/create-vaccination-type', 'POST', data).then(respAdd => {\n              var _respAdd$data;\n              if (respAdd === null || respAdd === void 0 ? void 0 : (_respAdd$data = respAdd.data) === null || _respAdd$data === void 0 ? void 0 : _respAdd$data.success) {\n                var _respAdd$data2;\n                setChangeData(true);\n                _message.success({\n                  content: (respAdd === null || respAdd === void 0 ? void 0 : (_respAdd$data2 = respAdd.data) === null || _respAdd$data2 === void 0 ? void 0 : _respAdd$data2.message) || alertConstant.vaccination_type_add_success,\n                  style: {\n                    marginTop: '2vh'\n                  },\n                  key: 'updatable'\n                });\n              }\n            });\n          } else {\n            apiCall(`vaccination-type/update-vaccination-type/${vaccinationTypeId}`, 'POST', data).then(respUpdate => {\n              var _respUpdate$data;\n              if (respUpdate === null || respUpdate === void 0 ? void 0 : (_respUpdate$data = respUpdate.data) === null || _respUpdate$data === void 0 ? void 0 : _respUpdate$data.success) {\n                var _respUpdate$data2;\n                setChangeData(true);\n                _message.success({\n                  content: (respUpdate === null || respUpdate === void 0 ? void 0 : (_respUpdate$data2 = respUpdate.data) === null || _respUpdate$data2 === void 0 ? void 0 : _respUpdate$data2.message) || alertConstant.vaccination_type_update_success,\n                  style: {\n                    marginTop: '2vh'\n                  },\n                  key: 'updatable'\n                });\n              }\n            });\n          }\n        } else {\n          var _resp$data7;\n          _message.success({\n            content: (resp === null || resp === void 0 ? void 0 : (_resp$data7 = resp.data) === null || _resp$data7 === void 0 ? void 0 : _resp$data7.message) || alertConstant.vaccination_type_duplicate_entry,\n            style: {\n              marginTop: '2vh'\n            },\n            key: 'updatable'\n          });\n          setIsModalVisible(true);\n          setLoading(false);\n          if (!editModal) {\n            setEditModal(false);\n          } else {\n            setEditModal(true);\n          }\n        }\n      });\n    }\n  };\n  const handleVaccinationTypeDelete = id => {\n    const data = '';\n    apiCall(`vaccination-type/delete-vaccination-type/${id}`, 'PATCH', data).then(resp => {\n      var _resp$data8;\n      if (resp === null || resp === void 0 ? void 0 : (_resp$data8 = resp.data) === null || _resp$data8 === void 0 ? void 0 : _resp$data8.success) {\n        var _resp$data9;\n        setChangeData(true);\n        _message.success({\n          content: (resp === null || resp === void 0 ? void 0 : (_resp$data9 = resp.data) === null || _resp$data9 === void 0 ? void 0 : _resp$data9.message) || alertConstant.vaccination_type_delete_success,\n          style: {\n            marginTop: '2vh'\n          },\n          key: 'deletedable'\n        });\n      }\n    });\n  };\n  const handleCancel = () => {\n    if (tempForm === vaccinationType) {\n      setIsModalVisible(false);\n      setEditModal(false);\n      return;\n    }\n    confirm({\n      title: 'Do you want to save your changes?',\n      icon: /*#__PURE__*/_jsxDEV(ExclamationCircleOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 13\n      }, this),\n      okText: 'Yes',\n      okType: 'danger',\n      cancelText: 'No',\n      onOk() {\n        handleOk();\n      },\n      onCancel() {\n        setIsModalVisible(false);\n        setEditModal(false);\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(_Modal, {\n      title: `${editModal ? 'Edit' : 'Add'} Vaccination Type`,\n      visible: isModalVisible,\n      okButtonProps: {\n        loading\n      },\n      okText: editModal ? 'Update' : 'Save',\n      onOk: form.submit,\n      onCancel: handleCancel,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Animal Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this), \":\", ` ${animalType === null || animalType === void 0 ? void 0 : animalType.typeName}`]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(_Form, {\n        onFinish: handleOk,\n        form: form,\n        children: /*#__PURE__*/_jsxDEV(_Form.Item, {\n          label: \"Vaccination Type\",\n          required: true,\n          validateStatus: validationStatus.validateStatus,\n          help: errorMsg,\n          children: /*#__PURE__*/_jsxDEV(_Input, {\n            ref: ref => ref && ref.focus({\n              cursor: 'end'\n            }),\n            value: vaccinationType,\n            onChange: e => {\n              handleInput(e.target.value);\n            },\n            placeholder: \"Enter Vaccination Type\"\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(_Row, {\n      style: {\n        marginBottom: '10px',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(_Col, {\n        flex: 3,\n        children: /*#__PURE__*/_jsxDEV(_Row, {\n          justify: \"start\",\n          style: {\n            width: '200px'\n          },\n          children: /*#__PURE__*/_jsxDEV(_Select, {\n            showSearch: true,\n            style: {\n              width: 200\n            },\n            placeholder: \"Select a animal type\",\n            optionFilterProp: \"children\"\n            // eslint-disable-next-line\n            ,\n            onChange: onChange,\n            value: animalType === null || animalType === void 0 ? void 0 : animalType.typeName,\n            children: animalTypeList === null || animalTypeList === void 0 ? void 0 : animalTypeList.map(data => /*#__PURE__*/_jsxDEV(Option, {\n              value: `${data.id} ${data.typeName}`,\n              children: data.typeName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 46\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(_Col, {\n        flex: 3,\n        children: /*#__PURE__*/_jsxDEV(_Row, {\n          justify: \"end\",\n          children: /*#__PURE__*/_jsxDEV(_Button, {\n            disabled: !animalType,\n            className: `${cssPrefix}__button`,\n            type: \"dashed\",\n            onClick: showModal,\n            icon: /*#__PURE__*/_jsxDEV(PlusOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 21\n            }, this),\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '10px'\n      },\n      children: /*#__PURE__*/_jsxDEV(CustomTable, {\n        config: {\n          rowSelection: 'none'\n        },\n        isNotEditable: false,\n        showHeader: false,\n        selectable: false,\n        tableType: \"Vaccination Type\",\n        isLoading: false,\n        tableData: vaccinationTypeList,\n        columnData: [{\n          title: 'Vaccination Type',\n          dataIndex: 'vaccinationTypeName',\n          width: '80%'\n        }],\n        delete: handleVaccinationTypeDelete,\n        setEditModalOpen: setEditModalOpen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(AnimalVaccinationType, \"SYs5CTQO689RnA4kG6RC2EBxuwM=\", false, function () {\n  return [_Form.useForm];\n});\n_c = AnimalVaccinationType;\nexport default AnimalVaccinationType;\nvar _c;\n$RefreshReg$(_c, \"AnimalVaccinationType\");","map":{"version":3,"names":["useEffect","useState","PlusOutlined","ExclamationCircleOutlined","CustomTable","alertConstant","apiCall","constants","confirm","cssPrefix","AnimalVaccinationType","newProps","activeTab","newAnimalType","newVaccinationType","isModalVisible","setIsModalVisible","animalTypeList","setAnimalTypeList","vaccinationTypeList","setVaccinationTypeList","errorMsg","setErrorMsg","validationStatus","setValidationStatus","animalType","setAnimalType","vaccinationTypeId","setVaccinationTypeId","vaccinationType","setVaccinationType","editModal","setEditModal","changeData","setChangeData","loading","setLoading","key","setKey","tempForm","setTempForm","Option","form","useForm","showModal","data","parseInt","customization_types","vaccinationTypes","then","resp","status","animalTypes","id","typeName","success","Date","now","validate","vaccinationTypeData","validateStatus","length","onChange","value","split","handleInput","setEditModalOpen","vaccinationTypeName","handleOk","validateResponse","AnimalTypeId","isAvailable","respAdd","content","message","vaccination_type_add_success","style","marginTop","respUpdate","vaccination_type_update_success","vaccination_type_duplicate_entry","handleVaccinationTypeDelete","vaccination_type_delete_success","handleCancel","title","icon","okText","okType","cancelText","onOk","onCancel","submit","margin","ref","focus","cursor","e","target","marginBottom","alignItems","width","map","rowSelection","dataIndex"],"sources":["/Users/zhaoke/Desktop/TYR/TYR.WEB.CLIENT/src/components/customization/components/AnimalVaccinationType.tsx"],"sourcesContent":["import { useEffect, useState, FC } from 'react';\nimport {\n  Modal, Button, Input, Row, Col, Select, Form, message,\n} from 'antd';\nimport { PlusOutlined, ExclamationCircleOutlined } from '@ant-design/icons';\nimport CustomTable from '../../../shared/components/CustomTable';\nimport alertConstant from '../../../shared/constants/alert.json';\nimport { apiCall } from '../../../shared/api/apiWrapper';\nimport constants from '../constant.json';\n\nconst { confirm } = Modal;\n\nconst cssPrefix = 'ftr-customization';\n\ntype ValidateStatus = Parameters<typeof Form.Item>[0]['validateStatus'];\n\ninterface AnimalType {\n  id: string;\n  typeName: string;\n}\n\ninterface VaccinationType {\n  id: string;\n  vaccinationTypes: string\n}\n\ninterface Props {\n  activeTab: string;\n}\n\nconst AnimalVaccinationType: FC<Props> = (newProps) => {\n  const { activeTab } = newProps;\n  const newAnimalType: AnimalType[] = [];\n  const newVaccinationType: VaccinationType[] = [];\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [animalTypeList, setAnimalTypeList] = useState(newAnimalType);\n  const [vaccinationTypeList, setVaccinationTypeList] = useState(newVaccinationType);\n  const [errorMsg, setErrorMsg] = useState('');\n  const [validationStatus, setValidationStatus] = useState<{ validateStatus?: ValidateStatus; }>({});\n  const [animalType, setAnimalType] = useState<any>({});\n  const [vaccinationTypeId, setVaccinationTypeId] = useState(0);\n  const [vaccinationType, setVaccinationType] = useState('');\n  const [editModal, setEditModal] = useState(false);\n  const [changeData, setChangeData] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [key, setKey] = useState<any>('');\n  const [tempForm, setTempForm] = useState('');\n\n  const { Option } = Select;\n  const [form] = Form.useForm();\n\n  const showModal = () => {\n    setEditModal(false);\n    setTempForm('');\n    setIsModalVisible(true);\n  };\n\n  useEffect(() => {\n    const data = {};\n    if (parseInt(activeTab, 10) === constants.customization_types.vaccinationTypes) {\n      apiCall('animaltype/get-animal-types', 'GET', data)\n        .then((resp: any) => {\n          if (resp?.status === 200) {\n            setAnimalTypeList(resp?.data?.data?.animalTypes);\n            setAnimalType({ id: resp?.data?.data?.animalTypes?.[0]?.id, typeName: resp?.data?.data?.animalTypes?.[0]?.typeName });\n          }\n        });\n    }\n  }, [activeTab]);\n\n  useEffect(() => {\n    const data = {};\n    if (animalType?.id > 0) {\n      apiCall(`vaccination-type/get-vaccination-type-by-animalId?animalTypeId=${animalType?.id}`, 'GET', data)\n        .then((resp: any) => {\n          if (resp?.data?.success) {\n            setVaccinationTypeList(resp?.data?.data?.vaccinationTypes);\n          }\n        });\n    }\n    if (!isModalVisible) {\n      setErrorMsg('');\n      setLoading(false);\n      setVaccinationType('');\n      setChangeData(false);\n      setVaccinationTypeId(0);\n      setValidationStatus({});\n    }\n    setKey(Date.now());\n  }, [animalType, changeData, isModalVisible]);\n\n  const validate = (vaccinationTypeData: any): { validateStatus: ValidateStatus } => {\n    if (!vaccinationTypeData) {\n      setErrorMsg('Vaccination Type is required');\n      return { validateStatus: 'error' };\n    }\n    if (vaccinationTypeData.length > 150) {\n      setErrorMsg('Should be less than 150 characters');\n      return { validateStatus: 'error' };\n    }\n    setErrorMsg('');\n    return { validateStatus: 'success' };\n  };\n\n  function onChange(value: string) {\n    const id: number = parseInt(value.split(',')[0], 10);\n    const typeName: string = value.split(' ')[1];\n    setAnimalType({ id, typeName });\n  }\n\n  const handleInput = (value: string) => {\n    setValidationStatus({ ...validate(value) });\n    setVaccinationType(value);\n  };\n\n  const setEditModalOpen = (value: boolean, data: any) => {\n    setVaccinationType(data.vaccinationTypeName);\n    setTempForm(data.vaccinationTypeName);\n    setVaccinationTypeId(data.id);\n    setChangeData(data);\n    setEditModal(value);\n    setIsModalVisible(value);\n  };\n\n  const handleOk = async () => {\n    if (editModal && vaccinationType === tempForm && vaccinationType.length > 0) {\n      setIsModalVisible(false);\n      setEditModal(false);\n    } else {\n      setLoading(true);\n      const validateResponse = validate(vaccinationType);\n      if (validateResponse && validateResponse.validateStatus !== 'success') {\n        setValidationStatus({ ...validate(vaccinationType) });\n        setLoading(false);\n        // eslint-disable-next-line no-useless-return\n        return;\n      }\n      const data = {\n        vaccinationTypeName: vaccinationType,\n        AnimalTypeId: animalType?.id,\n      };\n      apiCall(`vaccination-type/available-vaccination-type?vaccinationType=${vaccinationType}&animaltypeId=${animalType?.id}`, 'get', data)\n        .then((resp: any) => {\n          if (resp?.data?.data?.isAvailable) {\n            setIsModalVisible(false);\n            if (!editModal) {\n              apiCall('vaccination-type/create-vaccination-type', 'POST', data)\n                .then((respAdd: any) => {\n                  if (respAdd?.data?.success) {\n                    setChangeData(true);\n                    message.success({\n                      content: respAdd?.data?.message || alertConstant.vaccination_type_add_success,\n                      style: {\n                        marginTop: '2vh',\n                      },\n                      key: 'updatable',\n                    });\n                  }\n                });\n            } else {\n              apiCall(`vaccination-type/update-vaccination-type/${vaccinationTypeId}`, 'POST', data)\n                .then((respUpdate: any) => {\n                  if (respUpdate?.data?.success) {\n                    setChangeData(true);\n                    message.success({\n                      content: respUpdate?.data?.message || alertConstant.vaccination_type_update_success,\n                      style: {\n                        marginTop: '2vh',\n                      },\n                      key: 'updatable',\n                    });\n                  }\n                });\n            }\n          } else {\n            message.success({\n              content: resp?.data?.message || alertConstant.vaccination_type_duplicate_entry,\n              style: {\n                marginTop: '2vh',\n              },\n              key: 'updatable',\n            });\n            setIsModalVisible(true);\n            setLoading(false);\n            if (!editModal) {\n              setEditModal(false);\n            } else {\n              setEditModal(true);\n            }\n          }\n        });\n    }\n  };\n\n  const handleVaccinationTypeDelete = (id: string) => {\n    const data = '';\n    apiCall(`vaccination-type/delete-vaccination-type/${id}`, 'PATCH', data)\n      .then((resp: any) => {\n        if (resp?.data?.success) {\n          setChangeData(true);\n          message.success({\n            content: resp?.data?.message || alertConstant.vaccination_type_delete_success,\n            style: {\n              marginTop: '2vh',\n            },\n            key: 'deletedable',\n          });\n        }\n      });\n  };\n\n  const handleCancel = () => {\n    if (tempForm === vaccinationType) {\n      setIsModalVisible(false);\n      setEditModal(false);\n      return;\n    }\n    confirm({\n      title: 'Do you want to save your changes?',\n      icon: <ExclamationCircleOutlined />,\n      okText: 'Yes',\n      okType: 'danger',\n      cancelText: 'No',\n      onOk() {\n        handleOk();\n      },\n      onCancel() {\n        setIsModalVisible(false);\n        setEditModal(false);\n      },\n    });\n  };\n\n  return (\n    <>\n      <Modal\n        title={`${editModal ? 'Edit' : 'Add'} Vaccination Type`}\n        visible={isModalVisible}\n        okButtonProps={{ loading }}\n        okText={editModal ? 'Update' : 'Save'}\n        onOk={form.submit}\n        onCancel={handleCancel}\n      >\n        <div style={{ margin: '10px' }}>\n          <b>Animal Type</b>\n          :\n          {` ${animalType?.typeName}`}\n        </div>\n        <Form onFinish={handleOk} form={form}>\n          <Form.Item\n            label=\"Vaccination Type\"\n            required\n            validateStatus={validationStatus.validateStatus}\n            help={errorMsg}\n          >\n            <Input\n              key={key}\n              ref={(ref) => ref && ref.focus({ cursor: 'end' })}\n              value={vaccinationType}\n              onChange={(e) => {\n                handleInput(e.target.value);\n              }}\n              placeholder=\"Enter Vaccination Type\"\n            />\n          </Form.Item>\n        </Form>\n      </Modal>\n      <Row style={{ marginBottom: '10px', alignItems: 'center' }}>\n        <Col flex={3}>\n          <Row justify=\"start\" style={{ width: '200px' }}>\n            <Select\n              showSearch\n              style={{ width: 200 }}\n              placeholder=\"Select a animal type\"\n              optionFilterProp=\"children\"\n              // eslint-disable-next-line\n              onChange={onChange}\n              value={animalType?.typeName}\n            >\n              {animalTypeList?.map((data) => <Option value={`${data.id} ${data.typeName}`}>{data.typeName}</Option>)}\n            </Select>\n          </Row>\n        </Col>\n        <Col flex={3}>\n          <Row justify=\"end\">\n            <Button\n              disabled={!animalType}\n              className={`${cssPrefix}__button`}\n              type=\"dashed\"\n              onClick={showModal}\n              icon={<PlusOutlined />}\n            >\n              Add\n            </Button>\n          </Row>\n        </Col>\n      </Row>\n      <div style={{ marginTop: '10px' }}>\n        <CustomTable\n          config={{ rowSelection: 'none' }}\n          isNotEditable={false}\n          showHeader={false}\n          selectable={false}\n          tableType=\"Vaccination Type\"\n          isLoading={false}\n          tableData={vaccinationTypeList}\n          columnData={[{\n            title: 'Vaccination Type',\n            dataIndex: 'vaccinationTypeName',\n            width: '80%',\n          }]}\n          delete={handleVaccinationTypeDelete}\n          setEditModalOpen={setEditModalOpen}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default AnimalVaccinationType;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}