{"ast":null,"code":"import \"antd/lib/auto-complete/style\";\nimport _AutoComplete from \"antd/lib/auto-complete\";\nvar _jsxFileName = \"/Users/zhaoke/Desktop/TYR/TYR.WEB.CLIENT/src/shared/components/Inputs/SearchInput.component.tsx\",\n  _s = $RefreshSig$();\n/* eslint-disable no-unused-vars */\n/* eslint-disable quotes */\n/* eslint-disable quote-props */\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = _AutoComplete;\n// eslint-disable-next-line no-unused-vars\nconst Complete = newProps => {\n  _s();\n  const {\n    options,\n    setSearchKey,\n    setSearchKeyFinal,\n    placeholder,\n    searchKey\n  } = newProps;\n  const [key, setKey] = useState(Date.now());\n  useEffect(() => {\n    setKey(Date.now());\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_AutoComplete, {\n    style: {\n      width: 200\n    },\n    value: searchKey,\n    onChange: data => setSearchKey(data),\n    onSelect: setSearchKeyFinal,\n    placeholder: placeholder,\n    children: options === null || options === void 0 ? void 0 : options.map(data => /*#__PURE__*/_jsxDEV(Option, {\n      value: data,\n      children: data\n    }, data, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(Complete, \"BeFMFqxnyWsu/AqReSjyUVW2qBM=\");\n_c = Complete;\nexport default Complete;\nvar _c;\n$RefreshReg$(_c, \"Complete\");","map":{"version":3,"names":["useState","useEffect","Option","Complete","newProps","options","setSearchKey","setSearchKeyFinal","placeholder","searchKey","key","setKey","Date","now","width","data","map"],"sources":["/Users/zhaoke/Desktop/TYR/TYR.WEB.CLIENT/src/shared/components/Inputs/SearchInput.component.tsx"],"sourcesContent":["/* eslint-disable no-unused-vars */\n/* eslint-disable quotes */\n/* eslint-disable quote-props */\nimport { useState, FC, useEffect } from 'react';\nimport { AutoComplete } from 'antd';\n\nconst { Option } = AutoComplete;\n\ninterface Props {\n  label?: string;\n  options?: any;\n  value?: any;\n  searchKey?: string;\n  setSearchKey?: any;\n  placeholder?: string;\n  setSearchKeyFinal?: (value: any) => void;\n  onChange?: (value: any) => void;\n}\n\n// eslint-disable-next-line no-unused-vars\nconst Complete: FC<Props> = (newProps) => {\n  const {\n    options, setSearchKey, setSearchKeyFinal, placeholder, searchKey,\n  } = newProps;\n  const [key, setKey] = useState(Date.now());\n\n  useEffect(() => {\n    setKey(Date.now());\n  }, []);\n\n  return (\n    <AutoComplete style={{ width: 200 }} value={searchKey} onChange={(data) => setSearchKey(data)} onSelect={setSearchKeyFinal} placeholder={placeholder}>\n      {options?.map((data: any) => (\n        <Option key={data} value={data}>\n          {data}\n        </Option>\n      ))}\n    </AutoComplete>\n  );\n};\n\nexport default Complete;\n"],"mappings":";;;;AAAA;AACA;AACA;AACA,SAASA,QAAQ,EAAMC,SAAS,QAAQ,OAAO;AAAC;AAGhD,MAAM;EAAEC;AAAO,CAAC,gBAAe;AAa/B;AACA,MAAMC,QAAmB,GAAIC,QAAQ,IAAK;EAAA;EACxC,MAAM;IACJC,OAAO;IAAEC,YAAY;IAAEC,iBAAiB;IAAEC,WAAW;IAAEC;EACzD,CAAC,GAAGL,QAAQ;EACZ,MAAM,CAACM,GAAG,EAAEC,MAAM,CAAC,GAAGX,QAAQ,CAACY,IAAI,CAACC,GAAG,EAAE,CAAC;EAE1CZ,SAAS,CAAC,MAAM;IACdU,MAAM,CAACC,IAAI,CAACC,GAAG,EAAE,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE;IAAc,KAAK,EAAE;MAAEC,KAAK,EAAE;IAAI,CAAE;IAAC,KAAK,EAAEL,SAAU;IAAC,QAAQ,EAAGM,IAAI,IAAKT,YAAY,CAACS,IAAI,CAAE;IAAC,QAAQ,EAAER,iBAAkB;IAAC,WAAW,EAAEC,WAAY;IAAA,UAClJH,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEW,GAAG,CAAED,IAAS,iBACtB,QAAC,MAAM;MAAY,KAAK,EAAEA,IAAK;MAAA,UAC5BA;IAAI,GADMA,IAAI;MAAA;MAAA;MAAA;IAAA,QAGlB;EAAC;IAAA;IAAA;IAAA;EAAA,QACW;AAEnB,CAAC;AAAC,GAnBIZ,QAAmB;AAAA,KAAnBA,QAAmB;AAqBzB,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module"}