{"ast":null,"code":"import \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/row/style\";\nimport _Row from \"antd/lib/row\";\nimport \"antd/lib/col/style\";\nimport _Col from \"antd/lib/col\";\nimport \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nimport \"antd/lib/date-picker/style\";\nimport _DatePicker from \"antd/lib/date-picker\";\nimport \"antd/lib/select/style\";\nimport _Select from \"antd/lib/select\";\nvar _jsxFileName = \"/Users/zhaoke/Desktop/TYR/TYR.WEB.CLIENT/src/components/animals/components/forms/AnimalIntakeMilestone.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport '../AnimalsAddModal.less';\nimport moment from 'moment';\nimport { apiCall } from '../../../../shared/api/apiWrapper';\nimport PCOMinifiedScreen from '../minifiedPcoScreen';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = _Select;\nconst cssPrefix = 'animals-add-modal';\nexport const AnimalIntakeMilestone = props => {\n  _s();\n  var _howAcquired$, _otherRescueShelter$;\n  // eslint-disable-next-line no-empty-pattern\n  const {\n    form,\n    firstError,\n    setFirstError,\n    animalMilestoneList\n  } = props;\n  const newAcquisitionWay = [];\n  const [, forceUpdate] = useState({});\n  const [howAcquired, setHowAcquired] = useState(newAcquisitionWay);\n  const [otherRescueShelter, setOtherRescueShelter] = useState([]);\n  const [aqusitionNameToId, setAqusitionNameToId] = useState({});\n  const [aqusitionIdToName, setAqusitionIdToName] = useState({});\n  const [currentAcquistionWayId, setCurrentAcquistionWayId] = useState('');\n\n  // Can not select days after today\n  const disabledDate = current => current && current > moment().endOf('day');\n  useEffect(() => {\n    forceUpdate({});\n  }, []);\n  useEffect(() => {\n    const data = {};\n    apiCall('acquisition-way/get-acquisition-way', 'GET', data).then(resp => {\n      var _resp$data;\n      if (resp === null || resp === void 0 ? void 0 : (_resp$data = resp.data) === null || _resp$data === void 0 ? void 0 : _resp$data.success) {\n        var _resp$data2, _resp$data2$data, _resp$data3, _resp$data3$data;\n        setHowAcquired(resp === null || resp === void 0 ? void 0 : (_resp$data2 = resp.data) === null || _resp$data2 === void 0 ? void 0 : (_resp$data2$data = _resp$data2.data) === null || _resp$data2$data === void 0 ? void 0 : _resp$data2$data.acquisitionWays);\n        const tempAcquistionWay = resp === null || resp === void 0 ? void 0 : (_resp$data3 = resp.data) === null || _resp$data3 === void 0 ? void 0 : (_resp$data3$data = _resp$data3.data) === null || _resp$data3$data === void 0 ? void 0 : _resp$data3$data.acquisitionWays;\n        const newObj = {};\n        const newAcquistionWayIdToName = {};\n        tempAcquistionWay.map((currentAcqWay, i) => {\n          newObj[currentAcqWay.acquisitionWayName] = currentAcqWay.id;\n          newAcquistionWayIdToName[currentAcqWay.id] = currentAcqWay.acquisitionWayName;\n          return newObj;\n        });\n        setAqusitionNameToId(newObj);\n        setAqusitionIdToName(newAcquistionWayIdToName);\n      }\n    });\n    apiCall('other-rescue-shelter/get-other-rescue-shelter', 'GET', {}).then(resp => {\n      var _resp$data4, _resp$data4$data;\n      setOtherRescueShelter(resp === null || resp === void 0 ? void 0 : (_resp$data4 = resp.data) === null || _resp$data4 === void 0 ? void 0 : (_resp$data4$data = _resp$data4.data) === null || _resp$data4$data === void 0 ? void 0 : _resp$data4$data.otherRescueShelters);\n    });\n  }, []);\n  useEffect(() => {\n    var _animalMilestoneList$;\n    setCurrentAcquistionWayId(((_animalMilestoneList$ = animalMilestoneList[1]) === null || _animalMilestoneList$ === void 0 ? void 0 : _animalMilestoneList$.acquisitionWayId) || '');\n  }, [animalMilestoneList]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"\",\n    children: /*#__PURE__*/_jsxDEV(_Row, {\n      children: [/*#__PURE__*/_jsxDEV(_Col, {\n        className: `${cssPrefix}__two-col-lyt`,\n        children: [/*#__PURE__*/_jsxDEV(_Form.Item, {\n          name: \"intakeDate\",\n          label: \"Date of Intake\",\n          initialValue: moment(),\n          rules: [_ref => {\n            let {\n              getFieldValue\n            } = _ref;\n            return {\n              required: true,\n              type: 'date',\n              validator(_, value) {\n                var _animalMilestoneList$2;\n                if (!value) {\n                  return Promise.reject(new Error('Enter Date in Intake'));\n                }\n                const birthDate = moment(animalMilestoneList === null || animalMilestoneList === void 0 ? void 0 : (_animalMilestoneList$2 = animalMilestoneList[0]) === null || _animalMilestoneList$2 === void 0 ? void 0 : _animalMilestoneList$2.milestoneDate).format('MM-DD-yyyy');\n                const newIntakeDate = moment(value).format('MM-DD-yyyy');\n                console.log(birthDate, '------=====-----', newIntakeDate);\n                if (moment(newIntakeDate).isBefore(birthDate)) {\n                  return Promise.reject(new Error('Intake date must be greater than or same as Birth Date'));\n                }\n                return Promise.resolve();\n              }\n            };\n          }],\n          children: /*#__PURE__*/_jsxDEV(_DatePicker, {\n            format: \"MM-DD-yyyy\",\n            disabledDate: disabledDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n          initialValue: (_howAcquired$ = howAcquired[0]) === null || _howAcquired$ === void 0 ? void 0 : _howAcquired$.id,\n          name: \"acquisitionWayId\",\n          label: \"How Acquired\",\n          rules: [{\n            required: true\n          }],\n          children: /*#__PURE__*/_jsxDEV(_Select, {\n            ref: ref => firstError === 'acquisitionWayId' && ref && ref.focus(),\n            placeholder: \"Select a Acquistion Type\",\n            onChange: data => setCurrentAcquistionWayId(data),\n            children: howAcquired.map(data => /*#__PURE__*/_jsxDEV(Option, {\n              value: data.id,\n              children: data.acquisitionWayName\n            }, data.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(_Row, {\n          children: /*#__PURE__*/_jsxDEV(_Col, {\n            lg: 24,\n            children: [aqusitionNameToId['Owner Surrender'], aqusitionNameToId === null || aqusitionNameToId === void 0 ? void 0 : aqusitionNameToId.Person, aqusitionNameToId === null || aqusitionNameToId === void 0 ? void 0 : aqusitionNameToId.Public].includes(currentAcquistionWayId) && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(PCOMinifiedScreen, {\n                setFirstError: setFirstError\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 19\n              }, this)\n            }, void 0, false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), currentAcquistionWayId === aqusitionNameToId['Other Rescue/Shelter/Sanctuary'] && /*#__PURE__*/_jsxDEV(_Form.Item, {\n          initialValue: (_otherRescueShelter$ = otherRescueShelter[0]) === null || _otherRescueShelter$ === void 0 ? void 0 : _otherRescueShelter$.id,\n          name: \"otherRescueShelterId\",\n          label: \"Other Rescue Shelters\",\n          rules: [{\n            required: true\n          }],\n          children: /*#__PURE__*/_jsxDEV(_Select, {\n            ref: ref => firstError === 'otherRescueShelterId' && ref && ref.focus(),\n            placeholder: \"Select a Other Rescue Shelters\",\n            children: otherRescueShelter === null || otherRescueShelter === void 0 ? void 0 : otherRescueShelter.map(data => /*#__PURE__*/_jsxDEV(Option, {\n              value: data === null || data === void 0 ? void 0 : data.id,\n              onChange: () => forceUpdate({}),\n              children: data === null || data === void 0 ? void 0 : data.otherRescueShelterName\n            }, data === null || data === void 0 ? void 0 : data.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n          name: \"otherRescueID\",\n          label: \"ID No. at Other Rescue\",\n          children: /*#__PURE__*/_jsxDEV(_Input, {\n            disabled: currentAcquistionWayId !== aqusitionNameToId['Other Rescue/Shelter/Sanctuary'],\n            placeholder: \"Enter ID No. used at other rescue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(_Col, {\n        className: `${cssPrefix}__two-col-lyt`,\n        children: [/*#__PURE__*/_jsxDEV(_Form.Item, {\n          name: \"amountPaid\",\n          label: \"Amount Paid By You\",\n          rules: [_ref2 => {\n            let {\n              getFieldValue\n            } = _ref2;\n            return {\n              type: 'number',\n              validator(_, value) {\n                // Either amountPaid should be there or amountRecieved\n                const amountPaid = getFieldValue('amountPaid');\n                const amountRecieved = getFieldValue('amountRecieved');\n                if (amountRecieved) {\n                  return Promise.resolve();\n                }\n                if (!amountPaid && !amountRecieved) {\n                  return Promise.resolve();\n                }\n                if (Number(amountPaid) && Number(amountRecieved)) {\n                  return Promise.reject(new Error('Either Amount Paid or Received should be specified. Not Both.'));\n                }\n                if (!Number(amountPaid) && !Number(amountRecieved)) {\n                  return Promise.reject(new Error('Amount Received By You must be numeric'));\n                }\n                return Promise.resolve();\n              }\n            };\n          }],\n          children: /*#__PURE__*/_jsxDEV(_Input, {\n            name: \"amountPaid\",\n            onClick: () => setFirstError(''),\n            onChange: () => forceUpdate({}),\n            disabled: form.getFieldValue('amountRecieved'),\n            ref: ref => firstError === 'amountPaid' && ref && ref.focus()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n          name: \"amountRecieved\",\n          label: \"Or Amount Received By You\",\n          rules: [_ref3 => {\n            let {\n              getFieldValue\n            } = _ref3;\n            return {\n              type: 'number',\n              validator(_, value) {\n                // Either amountPaid should be there or amountRecieved\n                const amountPaid = getFieldValue('amountPaid');\n                const amountRecieved = getFieldValue('amountRecieved');\n                if (amountPaid) {\n                  return Promise.resolve();\n                }\n                if (!amountPaid && !amountRecieved) {\n                  return Promise.resolve();\n                }\n                if (Number(amountPaid) && Number(amountRecieved)) {\n                  return Promise.reject(new Error('Either Amount Paid or Received should be specified. Not Both.'));\n                }\n                if (!Number(amountPaid) && !Number(amountRecieved)) {\n                  return Promise.reject(new Error('Amount Received By You must be numeric'));\n                }\n                return Promise.resolve();\n              }\n            };\n          }],\n          children: /*#__PURE__*/_jsxDEV(_Input, {\n            name: \"amountRecieved\",\n            onClick: () => setFirstError(''),\n            onChange: () => forceUpdate({}),\n            disabled: form.getFieldValue('amountPaid'),\n            ref: ref => firstError === 'amountReceived' && ref && ref.focus()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n          name: \"intakeNote\",\n          label: \"Intake Notes\",\n          children: /*#__PURE__*/_jsxDEV(_Input.TextArea, {\n            placeholder: \"Enter any Intake Notes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(AnimalIntakeMilestone, \"lFJJLhvPiz2D4uj/DXkOZ8iGuHM=\");\n_c = AnimalIntakeMilestone;\nvar _c;\n$RefreshReg$(_c, \"AnimalIntakeMilestone\");","map":{"version":3,"names":["useEffect","useState","moment","apiCall","PCOMinifiedScreen","Option","cssPrefix","AnimalIntakeMilestone","props","form","firstError","setFirstError","animalMilestoneList","newAcquisitionWay","forceUpdate","howAcquired","setHowAcquired","otherRescueShelter","setOtherRescueShelter","aqusitionNameToId","setAqusitionNameToId","aqusitionIdToName","setAqusitionIdToName","currentAcquistionWayId","setCurrentAcquistionWayId","disabledDate","current","endOf","data","then","resp","success","acquisitionWays","tempAcquistionWay","newObj","newAcquistionWayIdToName","map","currentAcqWay","i","acquisitionWayName","id","otherRescueShelters","acquisitionWayId","getFieldValue","required","type","validator","_","value","Promise","reject","Error","birthDate","milestoneDate","format","newIntakeDate","console","log","isBefore","resolve","ref","focus","Person","Public","includes","otherRescueShelterName","amountPaid","amountRecieved","Number"],"sources":["/Users/zhaoke/Desktop/TYR/TYR.WEB.CLIENT/src/components/animals/components/forms/AnimalIntakeMilestone.tsx"],"sourcesContent":["/* eslint-disable no-use-before-define */\n/* eslint-disable no-unused-vars */\nimport {\n  Col, DatePicker, Form, Input, Row, Select,\n} from 'antd';\nimport { useEffect, useState } from 'react';\nimport '../AnimalsAddModal.less';\nimport moment, { Moment } from 'moment';\nimport { isEqual } from 'lodash';\nimport { apiCall } from '../../../../shared/api/apiWrapper';\nimport PCOMinifiedScreen from '../minifiedPcoScreen';\n\ninterface AnimalBirthMilestoneProps {\n  form: any;\n  firstError: any;\n  setFirstError: any;\n  animalMilestoneList: any;\n}\n\ninterface AcquisitionWay {\n  id: string;\n  acquisitionWayName: string;\n}\n\nconst { Option } = Select;\nconst cssPrefix = 'animals-add-modal';\n\nexport const AnimalIntakeMilestone = (props: AnimalBirthMilestoneProps) => {\n  // eslint-disable-next-line no-empty-pattern\n  const {\n    form, firstError, setFirstError, animalMilestoneList,\n  } = props;\n  const newAcquisitionWay: AcquisitionWay[] = [];\n  const [, forceUpdate] = useState({});\n  const [howAcquired, setHowAcquired] = useState(newAcquisitionWay);\n  const [otherRescueShelter, setOtherRescueShelter] = useState<any>([]);\n  const [aqusitionNameToId, setAqusitionNameToId] = useState<any>({});\n  const [aqusitionIdToName, setAqusitionIdToName] = useState<any>({});\n  const [currentAcquistionWayId, setCurrentAcquistionWayId] = useState('');\n\n  // Can not select days after today\n  const disabledDate = (current: Moment) => current && current > moment().endOf('day');\n\n  useEffect(() => {\n    forceUpdate({});\n  }, []);\n\n  useEffect(() => {\n    const data = {};\n    apiCall('acquisition-way/get-acquisition-way', 'GET', data)\n      .then((resp: any) => {\n        if (resp?.data?.success) {\n          setHowAcquired(resp?.data?.data?.acquisitionWays);\n          const tempAcquistionWay = resp?.data?.data?.acquisitionWays;\n          const newObj: any = {};\n          const newAcquistionWayIdToName: any = {};\n          tempAcquistionWay.map((currentAcqWay: any, i: any) => {\n            newObj[currentAcqWay.acquisitionWayName] = currentAcqWay.id;\n            newAcquistionWayIdToName[currentAcqWay.id] = currentAcqWay.acquisitionWayName;\n            return newObj;\n          });\n          setAqusitionNameToId(newObj);\n          setAqusitionIdToName(newAcquistionWayIdToName);\n        }\n      });\n    apiCall('other-rescue-shelter/get-other-rescue-shelter', 'GET', {})\n      .then((resp: any) => {\n        setOtherRescueShelter(resp?.data?.data?.otherRescueShelters);\n      });\n  }, []);\n\n  useEffect(() => {\n    setCurrentAcquistionWayId(animalMilestoneList[1]?.acquisitionWayId || '');\n  }, [animalMilestoneList]);\n\n  return (\n    <div className=\"\">\n      <Row>\n        <Col className={`${cssPrefix}__two-col-lyt`}>\n          <Form.Item\n            name=\"intakeDate\"\n            label=\"Date of Intake\"\n            initialValue={moment()}\n            rules={[\n              ({ getFieldValue }) => ({\n                required: true,\n                type: 'date',\n                validator(_, value) {\n                  if (!value) {\n                    return Promise.reject(new Error('Enter Date in Intake'));\n                  }\n                  const birthDate = moment(animalMilestoneList?.[0]?.milestoneDate).format('MM-DD-yyyy');\n                  const newIntakeDate = moment(value).format('MM-DD-yyyy');\n                  console.log(birthDate, '------=====-----', newIntakeDate);\n                  if (moment(newIntakeDate).isBefore(birthDate)) {\n                    return Promise.reject(new Error('Intake date must be greater than or same as Birth Date'));\n                  }\n                  return Promise.resolve();\n                },\n              }),\n            ]}\n          >\n            <DatePicker format=\"MM-DD-yyyy\" disabledDate={disabledDate} />\n          </Form.Item>\n          <Form.Item\n            initialValue={howAcquired[0]?.id}\n            name=\"acquisitionWayId\"\n            label=\"How Acquired\"\n            rules={[{ required: true }]}\n          >\n            <Select\n              ref={(ref) => (firstError === 'acquisitionWayId') && ref && ref.focus()}\n              placeholder=\"Select a Acquistion Type\"\n              onChange={(data: any) => setCurrentAcquistionWayId(data)}\n            >\n              {howAcquired.map((data) => (\n                <Option key={data.id} value={data.id}>{data.acquisitionWayName}</Option>\n              ))}\n            </Select>\n          </Form.Item>\n          <Row>\n            <Col lg={24}>\n              {[aqusitionNameToId['Owner Surrender'], aqusitionNameToId?.Person, aqusitionNameToId?.Public].includes(currentAcquistionWayId) && (\n                <>\n                  <PCOMinifiedScreen setFirstError={setFirstError} />\n                </>\n              )}\n            </Col>\n            {/* <PlusOutlined style={{ marginLeft: '10px', marginTop: '5px', cursor: 'pointer' }} />\n              <EditOutlined style={{ marginLeft: '10px', marginTop: '5px', cursor: 'pointer' }} /> */}\n          </Row>\n          {(currentAcquistionWayId === aqusitionNameToId['Other Rescue/Shelter/Sanctuary']) && (\n            <Form.Item\n              initialValue={otherRescueShelter[0]?.id}\n              name=\"otherRescueShelterId\"\n              label=\"Other Rescue Shelters\"\n              rules={[\n                { required: true },\n              ]}\n            >\n              <Select\n                ref={(ref) => (firstError === 'otherRescueShelterId') && ref && ref.focus()}\n                placeholder=\"Select a Other Rescue Shelters\"\n              >\n                {otherRescueShelter?.map((data: any) => (\n                  <Option\n                    key={data?.id}\n                    value={data?.id}\n                    onChange={() => forceUpdate({})}\n                  >\n                    {data?.otherRescueShelterName}\n                  </Option>\n                ))}\n              </Select>\n            </Form.Item>\n          )}\n          <Form.Item name=\"otherRescueID\" label=\"ID No. at Other Rescue\">\n            <Input\n              disabled={(currentAcquistionWayId !== aqusitionNameToId['Other Rescue/Shelter/Sanctuary'])}\n              placeholder=\"Enter ID No. used at other rescue\"\n            />\n          </Form.Item>\n        </Col>\n        <Col className={`${cssPrefix}__two-col-lyt`}>\n          <Form.Item\n            name=\"amountPaid\"\n            label=\"Amount Paid By You\"\n            rules={[\n              ({ getFieldValue }) => ({\n                type: 'number',\n                validator(_, value) {\n                  // Either amountPaid should be there or amountRecieved\n                  const amountPaid = getFieldValue('amountPaid');\n                  const amountRecieved = getFieldValue('amountRecieved');\n                  if (amountRecieved) {\n                    return Promise.resolve();\n                  }\n                  if (!amountPaid && !amountRecieved) {\n                    return Promise.resolve();\n                  }\n                  if (Number(amountPaid) && Number(amountRecieved)) {\n                    return Promise.reject(new Error('Either Amount Paid or Received should be specified. Not Both.'));\n                  }\n                  if (!Number(amountPaid) && !Number(amountRecieved)) {\n                    return Promise.reject(new Error('Amount Received By You must be numeric'));\n                  }\n                  return Promise.resolve();\n                },\n              }),\n            ]}\n          >\n            <Input\n              name=\"amountPaid\"\n              onClick={() => setFirstError('')}\n              onChange={() => forceUpdate({})}\n              disabled={form.getFieldValue('amountRecieved')}\n              ref={(ref) => (firstError === 'amountPaid') && ref && ref.focus()}\n            />\n          </Form.Item>\n          <Form.Item\n            name=\"amountRecieved\"\n            label=\"Or Amount Received By You\"\n            rules={[\n              ({ getFieldValue }) => ({\n                type: 'number',\n                validator(_, value) {\n                  // Either amountPaid should be there or amountRecieved\n                  const amountPaid = getFieldValue('amountPaid');\n                  const amountRecieved = getFieldValue('amountRecieved');\n                  if (amountPaid) {\n                    return Promise.resolve();\n                  }\n                  if (!amountPaid && !amountRecieved) {\n                    return Promise.resolve();\n                  }\n                  if (Number(amountPaid) && Number(amountRecieved)) {\n                    return Promise.reject(new Error('Either Amount Paid or Received should be specified. Not Both.'));\n                  }\n                  if (!Number(amountPaid) && !Number(amountRecieved)) {\n                    return Promise.reject(new Error('Amount Received By You must be numeric'));\n                  }\n                  return Promise.resolve();\n                },\n              }),\n            ]}\n          >\n            <Input\n              name=\"amountRecieved\"\n              onClick={() => setFirstError('')}\n              onChange={() => forceUpdate({})}\n              disabled={form.getFieldValue('amountPaid')}\n              ref={(ref) => (firstError === 'amountReceived') && ref && ref.focus()}\n            />\n          </Form.Item>\n          <Form.Item name=\"intakeNote\" label=\"Intake Notes\">\n            <Input.TextArea placeholder=\"Enter any Intake Notes\" />\n          </Form.Item>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}