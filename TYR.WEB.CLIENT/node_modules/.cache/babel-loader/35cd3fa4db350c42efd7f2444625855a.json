{"ast":null,"code":"import { connect } from 'react-redux';\nimport { getUserDetailByToken, updatePasswordInvite } from '../../redux/auth/action';\nimport { Invite } from './Invite';\nconst mapStateToProps = state => ({\n  tempUserDetail: state.auth.tempUserDetail,\n  getUserDetailByTokenLoading: state.auth.getUserDetailByTokenLoading,\n  getUserDetailByTokenSuccess: state.auth.getUserDetailByTokenSuccess,\n  updatePasswordIniteLoading: state.auth.updatePasswordIniteLoading,\n  updatePasswordIniteSuccess: state.auth.updatePasswordIniteSuccess\n});\nconst mapDispatchToProps = dispatch => ({\n  getUserDetailByToken: (data, callbackFunction) => dispatch(getUserDetailByToken(data, callbackFunction)),\n  updatePasswordInvite: (data, callbackFunction) => dispatch(updatePasswordInvite(data, callbackFunction))\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(Invite);","map":{"version":3,"names":["connect","getUserDetailByToken","updatePasswordInvite","Invite","mapStateToProps","state","tempUserDetail","auth","getUserDetailByTokenLoading","getUserDetailByTokenSuccess","updatePasswordIniteLoading","updatePasswordIniteSuccess","mapDispatchToProps","dispatch","data","callbackFunction"],"sources":["/Users/zhaoke/Desktop/TYR/TYR.WEB.CLIENT/src/components/invite/index.ts"],"sourcesContent":["import { connect } from 'react-redux';\nimport {\n  getUserDetailByToken,\n  updatePasswordInvite,\n} from '../../redux/auth/action';\nimport { Invite } from './Invite';\n\nconst mapStateToProps = (state: any) => ({\n  tempUserDetail: state.auth.tempUserDetail,\n  getUserDetailByTokenLoading: state.auth.getUserDetailByTokenLoading,\n  getUserDetailByTokenSuccess: state.auth.getUserDetailByTokenSuccess,\n  updatePasswordIniteLoading: state.auth.updatePasswordIniteLoading,\n  updatePasswordIniteSuccess: state.auth.updatePasswordIniteSuccess,\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  getUserDetailByToken: (data: {}, callbackFunction: () => void) => dispatch(getUserDetailByToken(data, callbackFunction)),\n  updatePasswordInvite: (data: {}, callbackFunction: () => void) => dispatch(updatePasswordInvite(data, callbackFunction)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Invite);\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,aAAa;AACrC,SACEC,oBAAoB,EACpBC,oBAAoB,QACf,yBAAyB;AAChC,SAASC,MAAM,QAAQ,UAAU;AAEjC,MAAMC,eAAe,GAAIC,KAAU,KAAM;EACvCC,cAAc,EAAED,KAAK,CAACE,IAAI,CAACD,cAAc;EACzCE,2BAA2B,EAAEH,KAAK,CAACE,IAAI,CAACC,2BAA2B;EACnEC,2BAA2B,EAAEJ,KAAK,CAACE,IAAI,CAACE,2BAA2B;EACnEC,0BAA0B,EAAEL,KAAK,CAACE,IAAI,CAACG,0BAA0B;EACjEC,0BAA0B,EAAEN,KAAK,CAACE,IAAI,CAACI;AACzC,CAAC,CAAC;AAEF,MAAMC,kBAAkB,GAAIC,QAAa,KAAM;EAC7CZ,oBAAoB,EAAE,CAACa,IAAQ,EAAEC,gBAA4B,KAAKF,QAAQ,CAACZ,oBAAoB,CAACa,IAAI,EAAEC,gBAAgB,CAAC,CAAC;EACxHb,oBAAoB,EAAE,CAACY,IAAQ,EAAEC,gBAA4B,KAAKF,QAAQ,CAACX,oBAAoB,CAACY,IAAI,EAAEC,gBAAgB,CAAC;AACzH,CAAC,CAAC;AAEF,eAAef,OAAO,CAACI,eAAe,EAAEQ,kBAAkB,CAAC,CAACT,MAAM,CAAC"},"metadata":{},"sourceType":"module"}