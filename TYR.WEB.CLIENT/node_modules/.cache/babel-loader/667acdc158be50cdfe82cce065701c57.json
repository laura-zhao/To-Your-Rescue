{"ast":null,"code":"import \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nimport { apiCall } from '../../shared/api/apiWrapper';\nimport { commonActionTypes } from './types';\nconst getCountLoading = data => ({\n  type: commonActionTypes.GET_COUNT_LOADING,\n  payload: data\n});\nconst getCountSuccess = data => ({\n  type: commonActionTypes.GET_COUNT_SUCCESS,\n  payload: data\n});\nexport const getCountCall = (data, callbackFunction) => {\n  console.log(data);\n  return (dispatch, getSate) => {\n    dispatch(getCountLoading(true));\n    apiCall('dashboard/get-count', 'GET', data).then(resp => {\n      var _resp$data3;\n      dispatch(getCountLoading(false));\n      if (resp.status !== 200) {\n        var _resp$data, _resp$data2;\n        getCountSuccess(false);\n        (resp === null || resp === void 0 ? void 0 : (_resp$data = resp.data) === null || _resp$data === void 0 ? void 0 : _resp$data.message) && _message.error({\n          content: resp === null || resp === void 0 ? void 0 : (_resp$data2 = resp.data) === null || _resp$data2 === void 0 ? void 0 : _resp$data2.message,\n          style: {\n            marginTop: '2vh'\n          },\n          key: 'updatable'\n        });\n        return;\n      }\n      // resp?.data?.message && message.success({\n      //   content: resp?.data?.message,\n      //   style: {\n      //     marginTop: '2vh',\n      //   },\n      //   key: 'updatable',\n      // });\n      dispatch(getCountSuccess(resp === null || resp === void 0 ? void 0 : (_resp$data3 = resp.data) === null || _resp$data3 === void 0 ? void 0 : _resp$data3.data));\n      callbackFunction();\n    });\n  };\n};\nconst uploadImageLoading = data => ({\n  type: commonActionTypes.UPLOAD_IMAGE_LOADING,\n  payload: data\n});\nconst uploadImageSuccess = data => ({\n  type: commonActionTypes.UPLOAD_IMAGE_SUCCESS,\n  payload: data\n});\nexport const uploadImageCall = (data, callbackFunction) => {\n  const {\n    imageState,\n    animalId,\n    pcoId,\n    Entity,\n    PublicityRank,\n    AttachmentDate,\n    AttachmentType\n  } = data;\n  return (dispatch, getSate) => {\n    if (!imageState) {\n      return;\n    }\n    let url = 'artifact-attachment/create-artifactattachment';\n    dispatch(uploadImageLoading(true));\n    const newFormData = new FormData();\n    newFormData.set('Imagefiles', imageState);\n    if (pcoId) {\n      newFormData.set('pcoId', pcoId);\n    }\n    if (animalId) {\n      if (animalId.length > 1) {\n        url = 'artifact-attachment/create-maultiple-artifactattachment';\n        // eslint-disable-next-line array-callback-return\n        animalId.map(id => {\n          newFormData.append('ListAnimalId', id);\n        });\n      } else {\n        newFormData.set('animalId', animalId === null || animalId === void 0 ? void 0 : animalId[0]);\n      }\n    }\n    newFormData.set('Entity', Entity);\n    newFormData.set('PublicityRank', PublicityRank);\n    newFormData.set('AttachmentDate', new Date().toDateString());\n    newFormData.set('AttachmentType', AttachmentType);\n    apiCall(url, 'POST', newFormData).then(resp => {\n      var _resp$data4, _resp$data4$data, _resp$data7, _resp$data8;\n      dispatch(uploadImageSuccess(resp === null || resp === void 0 ? void 0 : (_resp$data4 = resp.data) === null || _resp$data4 === void 0 ? void 0 : (_resp$data4$data = _resp$data4.data) === null || _resp$data4$data === void 0 ? void 0 : _resp$data4$data.id));\n      // if (!resp?.data?.success && imageState.entityType === 'Person') {\n      //   resp?.data?.errors?.[0] && message.error({\n      //     content: addConfirmPco(resp.data.errors[0]),\n      //     style: {\n      //       marginTop: '2vh',\n      //     },\n      //     key: 'updatable',\n      //     duration: 15,\n      //   });\n      //   return;\n      // }\n      if (resp.status !== 200) {\n        var _resp$data5, _resp$data6;\n        (resp === null || resp === void 0 ? void 0 : (_resp$data5 = resp.data) === null || _resp$data5 === void 0 ? void 0 : _resp$data5.message) && _message.error({\n          content: resp === null || resp === void 0 ? void 0 : (_resp$data6 = resp.data) === null || _resp$data6 === void 0 ? void 0 : _resp$data6.message,\n          style: {\n            marginTop: '2vh'\n          },\n          key: 'updatable'\n        });\n        return;\n      }\n      callbackFunction();\n      (resp === null || resp === void 0 ? void 0 : (_resp$data7 = resp.data) === null || _resp$data7 === void 0 ? void 0 : _resp$data7.message) && _message.success({\n        content: resp === null || resp === void 0 ? void 0 : (_resp$data8 = resp.data) === null || _resp$data8 === void 0 ? void 0 : _resp$data8.message,\n        style: {\n          marginTop: '2vh'\n        },\n        key: 'updatable'\n      });\n    });\n  };\n};\nconst deleteImageLoading = data => ({\n  type: commonActionTypes.DELETE_IMAGE_LOADING,\n  payload: data\n});\nconst deleteImageSuccess = data => ({\n  type: commonActionTypes.DELETE_IMAGE_SUCCESS,\n  payload: data\n});\nexport const deleteImageCall = (data, callbackFunction) => {\n  const {\n    id\n  } = data;\n  return (dispatch, getSate) => {\n    if (!id) {\n      return;\n    }\n    dispatch(deleteImageLoading(true));\n    apiCall(`artifact-attachment/delete-artifactattachment/${id}`, 'PATCH', {}).then(resp => {\n      var _resp$data9, _resp$data9$data, _resp$data12, _resp$data13;\n      dispatch(deleteImageSuccess(resp === null || resp === void 0 ? void 0 : (_resp$data9 = resp.data) === null || _resp$data9 === void 0 ? void 0 : (_resp$data9$data = _resp$data9.data) === null || _resp$data9$data === void 0 ? void 0 : _resp$data9$data.id));\n      // if (!resp?.data?.success && imageState.entityType === 'Person') {\n      //   resp?.data?.errors?.[0] && message.error({\n      //     content: addConfirmPco(resp.data.errors[0]),\n      //     style: {\n      //       marginTop: '2vh',\n      //     },\n      //     key: 'updatable',\n      //     duration: 15,\n      //   });\n      //   return;\n      // }\n      if (resp.status !== 200) {\n        var _resp$data10, _resp$data11;\n        (resp === null || resp === void 0 ? void 0 : (_resp$data10 = resp.data) === null || _resp$data10 === void 0 ? void 0 : _resp$data10.message) && _message.error({\n          content: resp === null || resp === void 0 ? void 0 : (_resp$data11 = resp.data) === null || _resp$data11 === void 0 ? void 0 : _resp$data11.message,\n          style: {\n            marginTop: '2vh'\n          },\n          key: 'updatable'\n        });\n        return;\n      }\n      callbackFunction();\n      (resp === null || resp === void 0 ? void 0 : (_resp$data12 = resp.data) === null || _resp$data12 === void 0 ? void 0 : _resp$data12.message) && _message.success({\n        content: resp === null || resp === void 0 ? void 0 : (_resp$data13 = resp.data) === null || _resp$data13 === void 0 ? void 0 : _resp$data13.message,\n        style: {\n          marginTop: '2vh'\n        },\n        key: 'updatable'\n      });\n    });\n  };\n};","map":{"version":3,"names":["apiCall","commonActionTypes","getCountLoading","data","type","GET_COUNT_LOADING","payload","getCountSuccess","GET_COUNT_SUCCESS","getCountCall","callbackFunction","console","log","dispatch","getSate","then","resp","status","message","error","content","style","marginTop","key","uploadImageLoading","UPLOAD_IMAGE_LOADING","uploadImageSuccess","UPLOAD_IMAGE_SUCCESS","uploadImageCall","imageState","animalId","pcoId","Entity","PublicityRank","AttachmentDate","AttachmentType","url","newFormData","FormData","set","length","map","id","append","Date","toDateString","success","deleteImageLoading","DELETE_IMAGE_LOADING","deleteImageSuccess","DELETE_IMAGE_SUCCESS","deleteImageCall"],"sources":["/Users/zhaoke/Desktop/TYR/TYR.WEB.CLIENT/src/redux/common/action.ts"],"sourcesContent":["/* eslint-disable no-unused-vars */\nimport { message } from 'antd';\nimport { apiCall } from '../../shared/api/apiWrapper';\nimport { commonActionTypes } from './types';\n\nconst getCountLoading = (data: any) => ({\n  type: commonActionTypes.GET_COUNT_LOADING,\n  payload: data,\n});\n\nconst getCountSuccess = (data: any) => ({\n  type: commonActionTypes.GET_COUNT_SUCCESS,\n  payload: data,\n});\n\nexport const getCountCall = (data: any, callbackFunction: () => void) => {\n  console.log(data);\n\n  return (dispatch: any, getSate: any) => {\n    dispatch(getCountLoading(true));\n    apiCall('dashboard/get-count', 'GET', data)\n      .then((resp: any) => {\n        dispatch(getCountLoading(false));\n        if (resp.status !== 200) {\n          getCountSuccess(false);\n          resp?.data?.message && message.error({\n            content: resp?.data?.message,\n            style: {\n              marginTop: '2vh',\n            },\n            key: 'updatable',\n          });\n          return;\n        }\n        // resp?.data?.message && message.success({\n        //   content: resp?.data?.message,\n        //   style: {\n        //     marginTop: '2vh',\n        //   },\n        //   key: 'updatable',\n        // });\n        dispatch(getCountSuccess(resp?.data?.data));\n        callbackFunction();\n      });\n  };\n};\n\nconst uploadImageLoading = (data: any) => ({\n  type: commonActionTypes.UPLOAD_IMAGE_LOADING,\n  payload: data,\n});\n\nconst uploadImageSuccess = (data: any) => ({\n  type: commonActionTypes.UPLOAD_IMAGE_SUCCESS,\n  payload: data,\n});\n\nexport const uploadImageCall = (data: any, callbackFunction: () => void) => {\n  const {\n    imageState,\n    animalId,\n    pcoId,\n    Entity,\n    PublicityRank,\n    AttachmentDate,\n    AttachmentType,\n  } = data;\n\n  return (dispatch: any, getSate: any) => {\n    if (!imageState) {\n      return;\n    }\n    let url = 'artifact-attachment/create-artifactattachment';\n    dispatch(uploadImageLoading(true));\n    const newFormData = new FormData();\n    newFormData.set('Imagefiles', imageState);\n    if (pcoId) {\n      newFormData.set('pcoId', pcoId);\n    }\n    if (animalId) {\n      if (animalId.length > 1) {\n        url = 'artifact-attachment/create-maultiple-artifactattachment';\n        // eslint-disable-next-line array-callback-return\n        animalId.map((id: any) => {\n          newFormData.append('ListAnimalId', id);\n        });\n      } else {\n        newFormData.set('animalId', animalId?.[0]);\n      }\n    }\n    newFormData.set('Entity', Entity);\n    newFormData.set('PublicityRank', PublicityRank);\n    newFormData.set('AttachmentDate', new Date().toDateString());\n    newFormData.set('AttachmentType', AttachmentType);\n\n    apiCall(url, 'POST', newFormData)\n      .then((resp: any) => {\n        dispatch(uploadImageSuccess(resp?.data?.data?.id));\n        // if (!resp?.data?.success && imageState.entityType === 'Person') {\n        //   resp?.data?.errors?.[0] && message.error({\n        //     content: addConfirmPco(resp.data.errors[0]),\n        //     style: {\n        //       marginTop: '2vh',\n        //     },\n        //     key: 'updatable',\n        //     duration: 15,\n        //   });\n        //   return;\n        // }\n        if (resp.status !== 200) {\n          resp?.data?.message && message.error({\n            content: resp?.data?.message,\n            style: {\n              marginTop: '2vh',\n            },\n            key: 'updatable',\n          });\n          return;\n        }\n        callbackFunction();\n        resp?.data?.message && message.success({\n          content: resp?.data?.message,\n          style: {\n            marginTop: '2vh',\n          },\n          key: 'updatable',\n        });\n      });\n  };\n};\n\nconst deleteImageLoading = (data: any) => ({\n  type: commonActionTypes.DELETE_IMAGE_LOADING,\n  payload: data,\n});\n\nconst deleteImageSuccess = (data: any) => ({\n  type: commonActionTypes.DELETE_IMAGE_SUCCESS,\n  payload: data,\n});\n\nexport const deleteImageCall = (data: any, callbackFunction: () => void) => {\n  const {\n    id,\n  } = data;\n\n  return (dispatch: any, getSate: any) => {\n    if (!id) {\n      return;\n    }\n\n    dispatch(deleteImageLoading(true));\n    apiCall(`artifact-attachment/delete-artifactattachment/${id}`, 'PATCH', {})\n      .then((resp: any) => {\n        dispatch(deleteImageSuccess(resp?.data?.data?.id));\n        // if (!resp?.data?.success && imageState.entityType === 'Person') {\n        //   resp?.data?.errors?.[0] && message.error({\n        //     content: addConfirmPco(resp.data.errors[0]),\n        //     style: {\n        //       marginTop: '2vh',\n        //     },\n        //     key: 'updatable',\n        //     duration: 15,\n        //   });\n        //   return;\n        // }\n        if (resp.status !== 200) {\n          resp?.data?.message && message.error({\n            content: resp?.data?.message,\n            style: {\n              marginTop: '2vh',\n            },\n            key: 'updatable',\n          });\n          return;\n        }\n        callbackFunction();\n        resp?.data?.message && message.success({\n          content: resp?.data?.message,\n          style: {\n            marginTop: '2vh',\n          },\n          key: 'updatable',\n        });\n      });\n  };\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}