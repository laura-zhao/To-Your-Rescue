{"ast":null,"code":"/* eslint-disable no-unused-vars */\nimport { connect } from 'react-redux';\nimport { setSelectedPco } from '../../../redux/pco/action';\nimport { getAnimalMilestoneListCall, updateAnimalMilestoneListCall } from '../../../redux/animal/action';\nimport { AnimalMilestone } from './AnimalMilestone';\nconst mapStateToProps = state => ({\n  getAnimalListLoading: state.animal.getAnimalListLoading,\n  getAnimalMilestoneListLoading: state.animal.getAnimalMilestoneListLoading,\n  updateAnimalMilestoneLoading: state.animal.updateAnimalMilestoneLoading,\n  animalMilestoneList: state.animal.animalMilestoneList,\n  selectedAnimalId: state.animal.selectedId,\n  animalList: state.animal.animalList,\n  selectedPcoId: state.pco.selectedId\n});\nconst mapDispatchToProps = dispatch => ({\n  getAnimalMilestoneListCall: (data, callbackFunction) => dispatch(getAnimalMilestoneListCall(data, callbackFunction)),\n  updateAnimalMilestoneListCall: (data, callbackFunction) => dispatch(updateAnimalMilestoneListCall(data, callbackFunction)),\n  setSelectedPco: data => dispatch(setSelectedPco(data))\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(AnimalMilestone);","map":{"version":3,"names":["connect","setSelectedPco","getAnimalMilestoneListCall","updateAnimalMilestoneListCall","AnimalMilestone","mapStateToProps","state","getAnimalListLoading","animal","getAnimalMilestoneListLoading","updateAnimalMilestoneLoading","animalMilestoneList","selectedAnimalId","selectedId","animalList","selectedPcoId","pco","mapDispatchToProps","dispatch","data","callbackFunction"],"sources":["/Users/zhaoke/Desktop/TYR/TYR.WEB.CLIENT/src/components/animals/milestones/index.ts"],"sourcesContent":["/* eslint-disable no-unused-vars */\nimport { connect } from 'react-redux';\nimport { setSelectedPco } from '../../../redux/pco/action';\nimport { getAnimalMilestoneListCall, updateAnimalMilestoneListCall } from '../../../redux/animal/action';\nimport { AnimalMilestone } from './AnimalMilestone';\n\nconst mapStateToProps = (state: any) => ({\n  getAnimalListLoading: state.animal.getAnimalListLoading,\n  getAnimalMilestoneListLoading: state.animal.getAnimalMilestoneListLoading,\n  updateAnimalMilestoneLoading: state.animal.updateAnimalMilestoneLoading,\n  animalMilestoneList: state.animal.animalMilestoneList,\n  selectedAnimalId: state.animal.selectedId,\n  animalList: state.animal.animalList,\n  selectedPcoId: state.pco.selectedId,\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  getAnimalMilestoneListCall: (data: any, callbackFunction: () => void) => dispatch(getAnimalMilestoneListCall(data, callbackFunction)),\n  updateAnimalMilestoneListCall: (data: any, callbackFunction: () => void) => dispatch(updateAnimalMilestoneListCall(data, callbackFunction)),\n  setSelectedPco: (data: any) => dispatch(setSelectedPco(data)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AnimalMilestone);\n"],"mappings":"AAAA;AACA,SAASA,OAAO,QAAQ,aAAa;AACrC,SAASC,cAAc,QAAQ,2BAA2B;AAC1D,SAASC,0BAA0B,EAAEC,6BAA6B,QAAQ,8BAA8B;AACxG,SAASC,eAAe,QAAQ,mBAAmB;AAEnD,MAAMC,eAAe,GAAIC,KAAU,KAAM;EACvCC,oBAAoB,EAAED,KAAK,CAACE,MAAM,CAACD,oBAAoB;EACvDE,6BAA6B,EAAEH,KAAK,CAACE,MAAM,CAACC,6BAA6B;EACzEC,4BAA4B,EAAEJ,KAAK,CAACE,MAAM,CAACE,4BAA4B;EACvEC,mBAAmB,EAAEL,KAAK,CAACE,MAAM,CAACG,mBAAmB;EACrDC,gBAAgB,EAAEN,KAAK,CAACE,MAAM,CAACK,UAAU;EACzCC,UAAU,EAAER,KAAK,CAACE,MAAM,CAACM,UAAU;EACnCC,aAAa,EAAET,KAAK,CAACU,GAAG,CAACH;AAC3B,CAAC,CAAC;AAEF,MAAMI,kBAAkB,GAAIC,QAAa,KAAM;EAC7ChB,0BAA0B,EAAE,CAACiB,IAAS,EAAEC,gBAA4B,KAAKF,QAAQ,CAAChB,0BAA0B,CAACiB,IAAI,EAAEC,gBAAgB,CAAC,CAAC;EACrIjB,6BAA6B,EAAE,CAACgB,IAAS,EAAEC,gBAA4B,KAAKF,QAAQ,CAACf,6BAA6B,CAACgB,IAAI,EAAEC,gBAAgB,CAAC,CAAC;EAC3InB,cAAc,EAAGkB,IAAS,IAAKD,QAAQ,CAACjB,cAAc,CAACkB,IAAI,CAAC;AAC9D,CAAC,CAAC;AAEF,eAAenB,OAAO,CAACK,eAAe,EAAEY,kBAAkB,CAAC,CAACb,eAAe,CAAC"},"metadata":{},"sourceType":"module"}