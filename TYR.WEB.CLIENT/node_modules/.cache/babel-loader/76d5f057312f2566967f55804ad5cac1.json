{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport logger from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport { persistStore } from 'redux-persist';\nimport rootReducer from './root-reducer';\nconst middlewares = [thunk, logger];\n\n// consuming middleware only during developmental phase\nif (process.env.NODE_ENV === 'development') {\n  middlewares.push(logger);\n}\n\n// applying root reducer and middleware to the store\nconst store = createStore(rootReducer, applyMiddleware(...middlewares));\nconst persistor = persistStore(store);\nexport { store, persistor };","map":{"version":3,"names":["createStore","applyMiddleware","logger","thunk","persistStore","rootReducer","middlewares","process","env","NODE_ENV","push","store","persistor"],"sources":["/Users/zhaoke/Desktop/TYR/TYR.WEB.CLIENT/src/redux/store.ts"],"sourcesContent":["import { createStore, applyMiddleware } from 'redux';\nimport logger from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport { persistStore } from 'redux-persist';\nimport rootReducer from './root-reducer';\n\nconst middlewares = [thunk, logger];\n\n// consuming middleware only during developmental phase\nif (process.env.NODE_ENV === 'development') {\n  middlewares.push(logger);\n}\n\n// applying root reducer and middleware to the store\nconst store = createStore(rootReducer, applyMiddleware(...middlewares));\n\nconst persistor = persistStore(store);\n\nexport { store, persistor };\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,eAAe,QAAQ,OAAO;AACpD,OAAOC,MAAM,MAAM,cAAc;AACjC,OAAOC,KAAK,MAAM,aAAa;AAC/B,SAASC,YAAY,QAAQ,eAAe;AAC5C,OAAOC,WAAW,MAAM,gBAAgB;AAExC,MAAMC,WAAW,GAAG,CAACH,KAAK,EAAED,MAAM,CAAC;;AAEnC;AACA,IAAIK,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,aAAa,EAAE;EAC1CH,WAAW,CAACI,IAAI,CAACR,MAAM,CAAC;AAC1B;;AAEA;AACA,MAAMS,KAAK,GAAGX,WAAW,CAACK,WAAW,EAAEJ,eAAe,CAAC,GAAGK,WAAW,CAAC,CAAC;AAEvE,MAAMM,SAAS,GAAGR,YAAY,CAACO,KAAK,CAAC;AAErC,SAASA,KAAK,EAAEC,SAAS"},"metadata":{},"sourceType":"module"}