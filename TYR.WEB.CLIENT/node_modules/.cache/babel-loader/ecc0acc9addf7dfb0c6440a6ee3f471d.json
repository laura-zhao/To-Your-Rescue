{"ast":null,"code":"import \"antd/lib/row/style\";\nimport _Row from \"antd/lib/row\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nvar _jsxFileName = \"/Users/zhaoke/Desktop/TYR/TYR.WEB.CLIENT/src/components/forgot_password_username/ForgotUsernamePassword.tsx\",\n  _s = $RefreshSig$();\n/* eslint-disable no-unused-vars */\n/* eslint-disable no-template-curly-in-string */\nimport { useEffect, useRef, useState } from 'react';\nimport { useNavigate, useSearchParams, useLocation } from 'react-router-dom';\nimport ButtonLoader from '../../shared/components/ButtonLoader';\nimport './ForgotUsernamePassword.less';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst cssPrefix = 'ftr-forgot';\n\n// eslint-disable-next-line no-unused-vars\nexport const ForgotUsernamePassword = newInviteProps => {\n  _s();\n  const {\n    forgotUsername,\n    forgotPassword,\n    forgotUsernameLoading,\n    forgotPasswordLoading\n  } = newInviteProps;\n  const [form] = _Form.useForm();\n  const [hideFormMessage, setHideFormMessage] = useState(false);\n  const [pageType, setPageType] = useState('');\n  const navigate = useNavigate();\n  const location = useLocation();\n  const titleRef = useRef(null);\n  // eslint-disable-next-line no-unused-vars\n  const [searchParams, setSearchParams] = useSearchParams();\n  useEffect(() => {\n    var _titleRef$current;\n    (_titleRef$current = titleRef.current) === null || _titleRef$current === void 0 ? void 0 : _titleRef$current.scrollIntoView();\n  }, [titleRef]);\n  useEffect(() => {\n    var _location$pathname;\n    setPageType(location === null || location === void 0 ? void 0 : (_location$pathname = location.pathname) === null || _location$pathname === void 0 ? void 0 : _location$pathname.split('-')[1]);\n  }, [location]);\n  const onFinish = () => {\n    const email = form.getFieldValue('emailAddress');\n    const username = form.getFieldValue('username');\n    if (pageType === 'password') {\n      forgotPassword({\n        email,\n        username\n      }, messageData => {\n        setHideFormMessage(messageData);\n      });\n    } else {\n      forgotUsername({\n        email\n      }, messageData => {\n        setHideFormMessage(messageData);\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${cssPrefix}`,\n    ref: titleRef,\n    children: /*#__PURE__*/_jsxDEV(_Form, {\n      className: `${cssPrefix}__form`,\n      name: \"basic\",\n      labelCol: {\n        span: 8\n      },\n      wrapperCol: {\n        span: 8\n      },\n      initialValues: {\n        remember: true\n      },\n      form: form,\n      onFinish: onFinish,\n      autoComplete: \"on\",\n      children: [hideFormMessage ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'center',\n          marginTop: '100px'\n        },\n        children: hideFormMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(_Form.Item, {\n          label: \"Email Address\",\n          name: \"emailAddress\",\n          rules: [{\n            required: true,\n            message: 'Email address is required'\n          }, {\n            type: 'email',\n            message: 'Invalid Email Address'\n          }],\n          children: /*#__PURE__*/_jsxDEV(_Input, {\n            placeholder: \"Email Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), pageType === 'password' && /*#__PURE__*/_jsxDEV(_Form.Item, {\n          label: \"User Name\",\n          name: \"username\",\n          rules: [{\n            required: true,\n            message: 'User name is required'\n          }],\n          children: /*#__PURE__*/_jsxDEV(_Input, {\n            placeholder: \"User Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(_Row, {\n          justify: \"center\",\n          children: /*#__PURE__*/_jsxDEV(_Button, {\n            className: `${cssPrefix}__form__submit`,\n            type: \"primary\",\n            htmlType: \"submit\",\n            children: [\"Submit\", (forgotUsernameLoading || forgotPasswordLoading) && /*#__PURE__*/_jsxDEV(ButtonLoader, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 70\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(_Row, {\n        justify: \"center\",\n        children: /*#__PURE__*/_jsxDEV(_Button, {\n          onClick: () => navigate('/login'),\n          className: `${cssPrefix}__form__submit`,\n          children: [\"BACK TO LOGIN\", false && /*#__PURE__*/_jsxDEV(ButtonLoader, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(ForgotUsernamePassword, \"sdTV2wtfZK7iXksxvIMn5YA1s5k=\", false, function () {\n  return [_Form.useForm, useNavigate, useLocation, useSearchParams];\n});\n_c = ForgotUsernamePassword;\nvar _c;\n$RefreshReg$(_c, \"ForgotUsernamePassword\");","map":{"version":3,"names":["useEffect","useRef","useState","useNavigate","useSearchParams","useLocation","ButtonLoader","cssPrefix","ForgotUsernamePassword","newInviteProps","forgotUsername","forgotPassword","forgotUsernameLoading","forgotPasswordLoading","form","useForm","hideFormMessage","setHideFormMessage","pageType","setPageType","navigate","location","titleRef","searchParams","setSearchParams","current","scrollIntoView","pathname","split","onFinish","email","getFieldValue","username","messageData","span","remember","textAlign","marginTop","required","message","type"],"sources":["/Users/zhaoke/Desktop/TYR/TYR.WEB.CLIENT/src/components/forgot_password_username/ForgotUsernamePassword.tsx"],"sourcesContent":["/* eslint-disable no-unused-vars */\n/* eslint-disable no-template-curly-in-string */\nimport {\n  useEffect, useRef, FC, useState,\n} from 'react';\nimport { useNavigate, useSearchParams, useLocation } from 'react-router-dom';\nimport {\n  Row, Col, Button, Form, Input,\n} from 'antd';\nimport ButtonLoader from '../../shared/components/ButtonLoader';\nimport { InviteProps } from './ForgotUsernamePassword.types';\nimport './ForgotUsernamePassword.less';\n\nconst cssPrefix = 'ftr-forgot';\n\n// eslint-disable-next-line no-unused-vars\nexport const ForgotUsernamePassword: FC<InviteProps> = (newInviteProps) => {\n  const {\n    forgotUsername,\n    forgotPassword,\n    forgotUsernameLoading,\n    forgotPasswordLoading,\n  } = newInviteProps;\n  const [form] = Form.useForm();\n  const [hideFormMessage, setHideFormMessage] = useState<any>(false);\n  const [pageType, setPageType] = useState<any>('');\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const titleRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-unused-vars\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  useEffect(() => {\n    titleRef.current?.scrollIntoView();\n  }, [titleRef]);\n\n  useEffect(() => {\n    setPageType(location?.pathname?.split('-')[1]);\n  }, [location]);\n\n  const onFinish = () => {\n    const email = form.getFieldValue('emailAddress');\n    const username = form.getFieldValue('username');\n    if ((pageType === 'password')) {\n      forgotPassword({ email, username }, (messageData: string) => {\n        setHideFormMessage(messageData);\n      });\n    } else {\n      forgotUsername({ email }, (messageData: string) => {\n        setHideFormMessage(messageData);\n      });\n    }\n  };\n\n  return (\n    <div className={`${cssPrefix}`} ref={titleRef}>\n      <Form\n        className={`${cssPrefix}__form`}\n        name=\"basic\"\n        labelCol={{ span: 8 }}\n        wrapperCol={{ span: 8 }}\n        initialValues={{ remember: true }}\n        form={form}\n        onFinish={onFinish}\n        autoComplete=\"on\"\n      >\n        {hideFormMessage ? (\n          <div style={{ textAlign: 'center', marginTop: '100px' }}>{hideFormMessage}</div>\n        ) : (\n          <>\n            <Form.Item\n              label=\"Email Address\"\n              name=\"emailAddress\"\n              rules={[\n                { required: true, message: 'Email address is required' },\n                { type: 'email', message: 'Invalid Email Address' },\n              ]}\n            >\n              <Input placeholder=\"Email Address\" />\n            </Form.Item>\n            {(pageType === 'password') && (\n              <Form.Item\n                label=\"User Name\"\n                name=\"username\"\n                rules={[\n                  { required: true, message: 'User name is required' },\n                ]}\n              >\n                <Input placeholder=\"User Name\" />\n              </Form.Item>\n            )}\n            <Row justify=\"center\">\n              <Button className={`${cssPrefix}__form__submit`} type=\"primary\" htmlType=\"submit\">\n                Submit\n                {(forgotUsernameLoading || forgotPasswordLoading) && <ButtonLoader />}\n              </Button>\n            </Row>\n          </>\n        )}\n        <br />\n        <Row justify=\"center\">\n          <Button onClick={() => navigate('/login')} className={`${cssPrefix}__form__submit`}>\n            BACK TO LOGIN\n            {false && <ButtonLoader />}\n          </Button>\n        </Row>\n      </Form>\n    </div>\n  );\n};\n"],"mappings":";;;;;;;;;;AAAA;AACA;AACA,SACEA,SAAS,EAAEC,MAAM,EAAMC,QAAQ,QAC1B,OAAO;AACd,SAASC,WAAW,EAAEC,eAAe,EAAEC,WAAW,QAAQ,kBAAkB;AAI5E,OAAOC,YAAY,MAAM,sCAAsC;AAE/D,OAAO,+BAA+B;AAAC;AAAA;AAEvC,MAAMC,SAAS,GAAG,YAAY;;AAE9B;AACA,OAAO,MAAMC,sBAAuC,GAAIC,cAAc,IAAK;EAAA;EACzE,MAAM;IACJC,cAAc;IACdC,cAAc;IACdC,qBAAqB;IACrBC;EACF,CAAC,GAAGJ,cAAc;EAClB,MAAM,CAACK,IAAI,CAAC,GAAG,MAAKC,OAAO,EAAE;EAC7B,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGf,QAAQ,CAAM,KAAK,CAAC;EAClE,MAAM,CAACgB,QAAQ,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAAM,EAAE,CAAC;EACjD,MAAMkB,QAAQ,GAAGjB,WAAW,EAAE;EAC9B,MAAMkB,QAAQ,GAAGhB,WAAW,EAAE;EAE9B,MAAMiB,QAAQ,GAAGrB,MAAM,CAAmB,IAAI,CAAC;EAC/C;EACA,MAAM,CAACsB,YAAY,EAAEC,eAAe,CAAC,GAAGpB,eAAe,EAAE;EAEzDJ,SAAS,CAAC,MAAM;IAAA;IACd,qBAAAsB,QAAQ,CAACG,OAAO,sDAAhB,kBAAkBC,cAAc,EAAE;EACpC,CAAC,EAAE,CAACJ,QAAQ,CAAC,CAAC;EAEdtB,SAAS,CAAC,MAAM;IAAA;IACdmB,WAAW,CAACE,QAAQ,aAARA,QAAQ,6CAARA,QAAQ,CAAEM,QAAQ,uDAAlB,mBAAoBC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EAChD,CAAC,EAAE,CAACP,QAAQ,CAAC,CAAC;EAEd,MAAMQ,QAAQ,GAAG,MAAM;IACrB,MAAMC,KAAK,GAAGhB,IAAI,CAACiB,aAAa,CAAC,cAAc,CAAC;IAChD,MAAMC,QAAQ,GAAGlB,IAAI,CAACiB,aAAa,CAAC,UAAU,CAAC;IAC/C,IAAKb,QAAQ,KAAK,UAAU,EAAG;MAC7BP,cAAc,CAAC;QAAEmB,KAAK;QAAEE;MAAS,CAAC,EAAGC,WAAmB,IAAK;QAC3DhB,kBAAkB,CAACgB,WAAW,CAAC;MACjC,CAAC,CAAC;IACJ,CAAC,MAAM;MACLvB,cAAc,CAAC;QAAEoB;MAAM,CAAC,EAAGG,WAAmB,IAAK;QACjDhB,kBAAkB,CAACgB,WAAW,CAAC;MACjC,CAAC,CAAC;IACJ;EACF,CAAC;EAED,oBACE;IAAK,SAAS,EAAG,GAAE1B,SAAU,EAAE;IAAC,GAAG,EAAEe,QAAS;IAAA,uBAC5C;MACE,SAAS,EAAG,GAAEf,SAAU,QAAQ;MAChC,IAAI,EAAC,OAAO;MACZ,QAAQ,EAAE;QAAE2B,IAAI,EAAE;MAAE,CAAE;MACtB,UAAU,EAAE;QAAEA,IAAI,EAAE;MAAE,CAAE;MACxB,aAAa,EAAE;QAAEC,QAAQ,EAAE;MAAK,CAAE;MAClC,IAAI,EAAErB,IAAK;MACX,QAAQ,EAAEe,QAAS;MACnB,YAAY,EAAC,IAAI;MAAA,WAEhBb,eAAe,gBACd;QAAK,KAAK,EAAE;UAAEoB,SAAS,EAAE,QAAQ;UAAEC,SAAS,EAAE;QAAQ,CAAE;QAAA,UAAErB;MAAe;QAAA;QAAA;QAAA;MAAA,QAAO,gBAEhF;QAAA,wBACE,cAAM,IAAI;UACR,KAAK,EAAC,eAAe;UACrB,IAAI,EAAC,cAAc;UACnB,KAAK,EAAE,CACL;YAAEsB,QAAQ,EAAE,IAAI;YAAEC,OAAO,EAAE;UAA4B,CAAC,EACxD;YAAEC,IAAI,EAAE,OAAO;YAAED,OAAO,EAAE;UAAwB,CAAC,CACnD;UAAA,uBAEF;YAAO,WAAW,EAAC;UAAe;YAAA;YAAA;YAAA;UAAA;QAAG;UAAA;UAAA;UAAA;QAAA,QAC3B,EACVrB,QAAQ,KAAK,UAAU,iBACvB,cAAM,IAAI;UACR,KAAK,EAAC,WAAW;UACjB,IAAI,EAAC,UAAU;UACf,KAAK,EAAE,CACL;YAAEoB,QAAQ,EAAE,IAAI;YAAEC,OAAO,EAAE;UAAwB,CAAC,CACpD;UAAA,uBAEF;YAAO,WAAW,EAAC;UAAW;YAAA;YAAA;YAAA;UAAA;QAAG;UAAA;UAAA;UAAA;QAAA,QAEpC,eACD;UAAK,OAAO,EAAC,QAAQ;UAAA,uBACnB;YAAQ,SAAS,EAAG,GAAEhC,SAAU,gBAAgB;YAAC,IAAI,EAAC,SAAS;YAAC,QAAQ,EAAC,QAAQ;YAAA,WAAC,QAEhF,EAAC,CAACK,qBAAqB,IAAIC,qBAAqB,kBAAK,QAAC,YAAY;cAAA;cAAA;cAAA;YAAA,QAAG;UAAA;YAAA;YAAA;YAAA;UAAA;QAC9D;UAAA;UAAA;UAAA;QAAA,QACL;MAAA,gBAET,eACD;QAAA;QAAA;QAAA;MAAA,QAAM,eACN;QAAK,OAAO,EAAC,QAAQ;QAAA,uBACnB;UAAQ,OAAO,EAAE,MAAMO,QAAQ,CAAC,QAAQ,CAAE;UAAC,SAAS,EAAG,GAAEb,SAAU,gBAAgB;UAAA,WAAC,eAElF,EAAC,KAAK,iBAAI,QAAC,YAAY;YAAA;YAAA;YAAA;UAAA,QAAG;QAAA;UAAA;UAAA;UAAA;QAAA;MACnB;QAAA;QAAA;QAAA;MAAA,QACL;IAAA;MAAA;MAAA;MAAA;IAAA;EACD;IAAA;IAAA;IAAA;EAAA,QACH;AAEV,CAAC;AAAC,GA9FWC,sBAAuC;EAAA,QAOnC,MAAKO,OAAO,EAGVZ,WAAW,EACXE,WAAW,EAIYD,eAAe;AAAA;AAAA,KAf5CI,sBAAuC;AAAA;AAAA"},"metadata":{},"sourceType":"module"}