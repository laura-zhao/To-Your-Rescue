{"ast":null,"code":"import \"antd/lib/switch/style\";\nimport _Switch from \"antd/lib/switch\";\nimport \"antd/lib/space/style\";\nimport _Space from \"antd/lib/space\";\nimport \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nimport \"antd/lib/select/style\";\nimport _Select from \"antd/lib/select\";\nimport \"antd/lib/typography/style\";\nimport _Typography from \"antd/lib/typography\";\nvar _jsxFileName = \"/Users/zhaoke/Desktop/TYR/TYR.WEB.CLIENT/src/components/pco/PCO.tsx\",\n  _s = $RefreshSig$();\n/* eslint-disable no-unused-vars */\nimport { useEffect, useState } from 'react';\nimport { CheckOutlined, CloseOutlined, FlagFilled } from '@ant-design/icons';\nimport { filterOptions, ORG } from './Pco.data';\nimport { pcoMock } from './pco-mock';\nimport { ContentToolbar } from './components/ContentToolbar';\nimport { PcoAddModal } from './components/PcoAddModal';\nimport CustomTablePagination from '../../shared/components/CustomTablePagination';\nimport { pageLength } from '../../shared/constants/pagination.json';\nimport './PCO.less';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Title\n} = _Typography;\nconst {\n  Option\n} = _Select;\nconst {\n  confirm\n} = _Modal;\nconst cssPrefix = 'ftr-pco';\n\n// eslint-disable-next-line\nexport const PCO = newPcoProps => {\n  _s();\n  const [tableData, setTableData] = useState(JSON.parse(JSON.stringify(pcoMock)));\n  // eslint-disable-next-line no-unused-vars\n  const [filteredTableData, setFilteredTableData] = useState(tableData);\n  const [tableFilter, setTableFilter] = useState(filterOptions[0].id);\n  const [addModalVisible, setAddModalVisible] = useState(false);\n  const [tempForm, setTempForm] = useState({});\n  const [editRecord, setEditRecord] = useState(null);\n  const [currentPageLocal, setCurrentPageLocal] = useState(1);\n  const [searchKey, setSearchKey] = useState('');\n  const [searchKeyFinal, setSearchKeyFinal] = useState('');\n  const [clickedValue, setClickedValue] = useState(false);\n  const {\n    getPcoListLoading,\n    getPcoListCall,\n    addPCOCall,\n    updatePCOCall,\n    pcoList,\n    selectedId,\n    addPcoLoading,\n    updatePcoLoading,\n    deletePCOCall,\n    setSelectedPco,\n    totalNumber,\n    userCountryCode,\n    uploadImageCall,\n    deleteImageCall\n  } = newPcoProps;\n\n  /** Methods related to CRUD operations goes below  */\n\n  const onDeletePco = id => {\n    setSelectedPco(id);\n    deletePCOCall({\n      id\n    }, () => {\n      getPcoListCall({\n        length: pageLength,\n        page: currentPageLocal,\n        isDeleted: false,\n        entityType: tableFilter,\n        searchText: searchKey\n      }, () => console.log('get list of pco'));\n    });\n  };\n  const setEditModalOpen = (value, data) => {\n    setSelectedPco(data === null || data === void 0 ? void 0 : data.id);\n    setEditRecord(data);\n    setAddModalVisible(value);\n    setTempForm(data);\n  };\n  const deleteAllClicked = () => {\n    // const newData: TableData[] = tableData.filter((entry: TableData) => !selectedRows.includes(entry.key)) as TableData[];\n    // setTableData(newData as any);\n    // setFilteredTableData(newData as any);\n  };\n\n  /*  Navigate or move view to other components */\n\n  const setAddModalVisibility = flag => {\n    setAddModalVisible(flag);\n  };\n\n  /** Business Logic goes below */\n\n  const handleFilterChange = val => {\n    setSearchKey('');\n    setSearchKeyFinal('');\n    setSelectedPco('');\n    setCurrentPageLocal(1);\n    setTableFilter(val);\n  };\n\n  /** All ReactElements or JSX Elements are below * */\n  const pageHeader = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${cssPrefix}__header-row`,\n    children: /*#__PURE__*/_jsxDEV(Title, {\n      level: 3,\n      style: {\n        margin: '16px 0'\n      },\n      children: \"People, Companies, and Organizations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n  const filterSlot = /*#__PURE__*/_jsxDEV(_Select, {\n    className: `${cssPrefix}__ct__filter`,\n    defaultValue: filterOptions[0].id,\n    onChange: handleFilterChange,\n    children: filterOptions === null || filterOptions === void 0 ? void 0 : filterOptions.map(opt => /*#__PURE__*/_jsxDEV(Option, {\n      value: opt.id,\n      children: opt.name\n    }, opt.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n  const contentToolbar = /*#__PURE__*/_jsxDEV(ContentToolbar, {\n    filterSlot: filterSlot,\n    searchKey: searchKey,\n    setSearchKey: setSearchKey,\n    setSearchKeyFinal: setSearchKeyFinal,\n    currentPage: currentPageLocal,\n    pageLength: pageLength,\n    tableFilter: tableFilter,\n    onAddIconClicked: setAddModalVisibility,\n    disableDeleteIcon: false,\n    onDeleteIconClicked: deleteAllClicked,\n    onActionItemClick: () => alert('item clicked')\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n  const nameColumnRenderer = (text, record) => /*#__PURE__*/_jsxDEV(_Space, {\n    align: \"baseline\",\n    size: \"middle\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), record.flag ? /*#__PURE__*/_jsxDEV(FlagFilled, {\n      className: `${cssPrefix}__table-cell-flag${record.flag ? '--flagged' : ''}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }, this);\n  const mailListColumnRenderer = (_text, record) => /*#__PURE__*/_jsxDEV(_Space, {\n    size: \"middle\",\n    children: /*#__PURE__*/_jsxDEV(_Switch, {\n      className: `${cssPrefix}__table-row-switch`,\n      defaultChecked: record.mailList,\n      checkedChildren: /*#__PURE__*/_jsxDEV(CheckOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 26\n      }, this),\n      unCheckedChildren: /*#__PURE__*/_jsxDEV(CloseOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 28\n      }, this),\n      checked: record === null || record === void 0 ? void 0 : record.mailList,\n      onChange: checked => {\n        var _record$countryId;\n        console.log(record, 'record');\n        updatePCOCall({\n          ...record,\n          mailList: checked,\n          countryId: (_record$countryId = record.countryId) !== null && _record$countryId !== void 0 ? _record$countryId : localStorage.getItem('countryId')\n        }, () => {\n          setAddModalVisibility(false);\n        });\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 5\n  }, this);\n  const sortedInfo = {};\n  const filteredInfo = {};\n  const pcoColumns = [{\n    title: tableFilter === ORG ? 'Name' : 'Last Name',\n    dataIndex: 'lastName',\n    onFilter: (value, record) => record.name.includes(value),\n    sorter: (a, b) => a.lastName.localeCompare(b.lastName),\n    render: nameColumnRenderer\n  }, {\n    title: 'First Name',\n    dataIndex: 'firstName',\n    onFilter: (value, record) => record.name.includes(value),\n    sorter: (a, b) => a.firstName.localeCompare(b.firstName)\n  }, {\n    title: 'Street',\n    dataIndex: 'street',\n    onFilter: (value, record) => record.name.includes(value),\n    sorter: (a, b) => a.street.localeCompare(b.street)\n  }, {\n    title: 'Street 2',\n    dataIndex: 'street2',\n    onFilter: (value, record) => record.name.includes(value),\n    sorter: (a, b) => a.street2.localeCompare(b.street2)\n  }, {\n    title: 'City',\n    dataIndex: 'city',\n    onFilter: (value, record) => record.name.includes(value),\n    sorter: (a, b) => a.city.localeCompare(b.city),\n    width: 100\n  }, {\n    title: 'State',\n    dataIndex: 'state',\n    onFilter: (value, record) => record.name.includes(value),\n    sorter: (a, b) => a.state.localeCompare(b.state)\n  }, {\n    title: 'Zip',\n    dataIndex: 'zip',\n    onFilter: (value, record) => record.name.includes(value),\n    sorter: (a, b) => a.zip.localeCompare(b.zip)\n  }, {\n    title: 'Phone',\n    dataIndex: 'phone',\n    onFilter: (value, record) => record.name.includes(value),\n    sorter: (a, b) => a.phone.length - b.phone.length\n  }, {\n    title: 'Email',\n    dataIndex: 'email',\n    onFilter: (value, record) => record.name.includes(value),\n    sorter: (a, b) => a.email.length - b.email.length,\n    width: 220\n  }, {\n    title: 'Mail List',\n    dataIndex: 'mailList',\n    render: mailListColumnRenderer\n  }];\n\n  /** Hooks goes below * */\n  useEffect(() => {\n    getPcoListCall({\n      length: pageLength,\n      page: clickedValue ? '1' : currentPageLocal,\n      isDeleted: false,\n      entityType: tableFilter,\n      searchText: searchKey\n    }, () => console.log('get list of pco'));\n  }, [currentPageLocal, tableFilter, searchKeyFinal]);\n  useEffect(() => {\n    if (!searchKey) {\n      setSearchKeyFinal('');\n      getPcoListCall({\n        length: pageLength,\n        page: clickedValue ? '1' : currentPageLocal,\n        isDeleted: false,\n        entityType: tableFilter,\n        searchText: searchKey\n      }, () => console.log('get list of pco'));\n    }\n  }, [searchKey]);\n  useEffect(() => {\n    setSelectedPco('');\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [contentToolbar, /*#__PURE__*/_jsxDEV(CustomTablePagination, {\n      config: {\n        rowSelection: 'radio',\n        selectedRow: selectedId,\n        setSelectedRow: setSelectedPco,\n        isNotEditable: false,\n        showHeader: true,\n        selectable: true,\n        tableType: 'Users'\n      },\n      totalNumber: totalNumber,\n      currentPage: currentPageLocal,\n      setPaginationData: setCurrentPageLocal,\n      tableData: pcoList,\n      columnData: pcoColumns,\n      isLoading: getPcoListLoading,\n      delete: id => onDeletePco(id),\n      setEditModalOpen: (isOpen, data) => setEditModalOpen(isOpen, data)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PcoAddModal, {\n      minifiedVersion: false,\n      visible: addModalVisible,\n      setAddModalVisibility: setAddModalVisibility,\n      editRecord: editRecord,\n      setEditRecord: setEditRecord,\n      addPCOCall: addPCOCall,\n      updatePCOCall: updatePCOCall,\n      addPcoLoading: addPcoLoading,\n      updatePcoLoading: updatePcoLoading,\n      getPcoListCall: getPcoListCall,\n      userCountryCode: userCountryCode,\n      setSearchKey: setSearchKey,\n      setSearchKeyFinal: setSearchKeyFinal,\n      setSelectedPco: setSelectedPco,\n      uploadImageCall: uploadImageCall,\n      deleteImageCall: deleteImageCall,\n      selectedPcoId: selectedId,\n      getPcoFilter: {\n        length: pageLength,\n        page: currentPageLocal,\n        isDeleted: false,\n        entityType: tableFilter,\n        searchText: ''\n      },\n      handleCancel: () => {\n        setAddModalVisibility(false);\n        setEditRecord(null);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 266,\n    columnNumber: 5\n  }, this);\n};\n_s(PCO, \"D3Hg02Ax/nhdZs6uqFhJaRcEB88=\");\n_c = PCO;\nvar _c;\n$RefreshReg$(_c, \"PCO\");","map":{"version":3,"names":["useEffect","useState","CheckOutlined","CloseOutlined","FlagFilled","filterOptions","ORG","pcoMock","ContentToolbar","PcoAddModal","CustomTablePagination","pageLength","Title","Option","confirm","cssPrefix","PCO","newPcoProps","tableData","setTableData","JSON","parse","stringify","filteredTableData","setFilteredTableData","tableFilter","setTableFilter","id","addModalVisible","setAddModalVisible","tempForm","setTempForm","editRecord","setEditRecord","currentPageLocal","setCurrentPageLocal","searchKey","setSearchKey","searchKeyFinal","setSearchKeyFinal","clickedValue","setClickedValue","getPcoListLoading","getPcoListCall","addPCOCall","updatePCOCall","pcoList","selectedId","addPcoLoading","updatePcoLoading","deletePCOCall","setSelectedPco","totalNumber","userCountryCode","uploadImageCall","deleteImageCall","onDeletePco","length","page","isDeleted","entityType","searchText","console","log","setEditModalOpen","value","data","deleteAllClicked","setAddModalVisibility","flag","handleFilterChange","val","pageHeader","margin","filterSlot","map","opt","name","contentToolbar","alert","nameColumnRenderer","text","record","mailListColumnRenderer","_text","mailList","checked","countryId","localStorage","getItem","sortedInfo","filteredInfo","pcoColumns","title","dataIndex","onFilter","includes","sorter","a","b","lastName","localeCompare","render","firstName","street","street2","city","width","state","zip","phone","email","rowSelection","selectedRow","setSelectedRow","isNotEditable","showHeader","selectable","tableType","isOpen"],"sources":["/Users/zhaoke/Desktop/TYR/TYR.WEB.CLIENT/src/components/pco/PCO.tsx"],"sourcesContent":["/* eslint-disable no-unused-vars */\nimport { useEffect, useState, FC } from 'react';\nimport {\n  Modal, Select, Space, Switch, Typography, AutoComplete,\n} from 'antd';\nimport {\n  QuestionCircleOutlined, CheckOutlined, CloseOutlined, FlagFilled,\n} from '@ant-design/icons';\nimport {\n  filterOptions, ORG,\n} from './Pco.data';\nimport {\n  TableData, PcoProps, TableFilterTypes,\n} from './PCO.types';\nimport { pcoMock } from './pco-mock';\nimport { ContentToolbar } from './components/ContentToolbar';\nimport { PcoAddModal } from './components/PcoAddModal';\nimport CustomTablePagination from '../../shared/components/CustomTablePagination';\nimport { pageLength } from '../../shared/constants/pagination.json';\nimport './PCO.less';\n\nconst { Title } = Typography;\nconst { Option } = Select;\nconst { confirm } = Modal;\n\nconst cssPrefix = 'ftr-pco';\n\n// eslint-disable-next-line\nexport const PCO: FC<PcoProps> = (newPcoProps) => {\n  const [tableData, setTableData] = useState(JSON.parse(JSON.stringify(pcoMock)));\n  // eslint-disable-next-line no-unused-vars\n  const [filteredTableData, setFilteredTableData] = useState(tableData);\n  const [tableFilter, setTableFilter] = useState<TableFilterTypes>(filterOptions[0].id);\n  const [addModalVisible, setAddModalVisible] = useState(false);\n  const [tempForm, setTempForm] = useState({});\n  const [editRecord, setEditRecord] = useState(null);\n  const [currentPageLocal, setCurrentPageLocal] = useState(1);\n  const [searchKey, setSearchKey] = useState('');\n  const [searchKeyFinal, setSearchKeyFinal] = useState('');\n  const [clickedValue, setClickedValue] = useState(false);\n\n  const {\n    getPcoListLoading,\n    getPcoListCall,\n    addPCOCall,\n    updatePCOCall,\n    pcoList,\n    selectedId,\n    addPcoLoading,\n    updatePcoLoading,\n    deletePCOCall,\n    setSelectedPco,\n    totalNumber,\n    userCountryCode,\n    uploadImageCall,\n    deleteImageCall,\n  } = newPcoProps;\n\n  /** Methods related to CRUD operations goes below  */\n\n  const onDeletePco = (id: string): void => {\n    setSelectedPco(id);\n    deletePCOCall({ id }, () => {\n      getPcoListCall({\n        length: pageLength,\n        page: currentPageLocal,\n        isDeleted: false,\n        entityType: tableFilter,\n        searchText: searchKey,\n      }, () => console.log('get list of pco'));\n    });\n  };\n\n  const setEditModalOpen = (value: boolean, data: any) => {\n    setSelectedPco(data?.id);\n    setEditRecord(data);\n    setAddModalVisible(value);\n    setTempForm(data);\n  };\n\n  const deleteAllClicked = () => {\n    // const newData: TableData[] = tableData.filter((entry: TableData) => !selectedRows.includes(entry.key)) as TableData[];\n    // setTableData(newData as any);\n    // setFilteredTableData(newData as any);\n  };\n\n  /*  Navigate or move view to other components */\n\n  const setAddModalVisibility = (flag: boolean): void => {\n    setAddModalVisible(flag);\n  };\n\n  /** Business Logic goes below */\n\n  const handleFilterChange = (val: TableFilterTypes) => {\n    setSearchKey('');\n    setSearchKeyFinal('');\n    setSelectedPco('');\n    setCurrentPageLocal(1);\n    setTableFilter(val);\n  };\n\n  /** All ReactElements or JSX Elements are below * */\n  const pageHeader = (\n    <div className={`${cssPrefix}__header-row`}>\n      <Title level={3} style={{ margin: '16px 0' }}>\n        People, Companies, and Organizations\n      </Title>\n    </div>\n  );\n\n  const filterSlot = (\n    <Select\n      className={`${cssPrefix}__ct__filter`}\n      defaultValue={filterOptions[0].id}\n      onChange={handleFilterChange}\n    >\n      {filterOptions?.map((opt) => (\n        <Option key={opt.id} value={opt.id}>{opt.name}</Option>\n      ))}\n    </Select>\n  );\n\n  const contentToolbar = (\n    <ContentToolbar\n      filterSlot={filterSlot}\n      searchKey={searchKey}\n      setSearchKey={setSearchKey}\n      setSearchKeyFinal={setSearchKeyFinal}\n      currentPage={currentPageLocal}\n      pageLength={pageLength}\n      tableFilter={tableFilter}\n      onAddIconClicked={setAddModalVisibility}\n      disableDeleteIcon={false}\n      onDeleteIconClicked={deleteAllClicked}\n      onActionItemClick={() => alert('item clicked')}\n    />\n  );\n\n  const nameColumnRenderer = (text: string, record: any) => (\n    <Space align=\"baseline\" size=\"middle\">\n      <span>\n        {text}\n      </span>\n      {record.flag ? (\n        <FlagFilled\n          className={`${cssPrefix}__table-cell-flag${record.flag ? '--flagged' : ''}`}\n        />\n      ) : <span />}\n    </Space>\n  );\n\n  const mailListColumnRenderer = (_text: any, record: any) => (\n    <Space size=\"middle\">\n      <Switch\n        className={`${cssPrefix}__table-row-switch`}\n        defaultChecked={record.mailList}\n        checkedChildren={<CheckOutlined />}\n        unCheckedChildren={<CloseOutlined />}\n        checked={record?.mailList}\n        onChange={(checked: boolean) => {\n          console.log(record, 'record');\n          updatePCOCall({ ...record, mailList: checked, countryId: record.countryId ?? localStorage.getItem('countryId') }, () => {\n            setAddModalVisibility(false);\n          });\n        }}\n      />\n    </Space>\n  );\n\n  const sortedInfo = {};\n  const filteredInfo = {};\n\n  const pcoColumns = [{\n    title: tableFilter === ORG ? 'Name' : 'Last Name',\n    dataIndex: 'lastName',\n    onFilter: (value: any, record: any) => record.name.includes(value),\n    sorter: (a: any, b: any) => a.lastName.localeCompare(b.lastName),\n    render: nameColumnRenderer,\n  },\n  {\n    title: 'First Name',\n    dataIndex: 'firstName',\n    onFilter: (value: any, record: any) => record.name.includes(value),\n    sorter: (a: any, b: any) => a.firstName.localeCompare(b.firstName),\n  },\n  {\n    title: 'Street',\n    dataIndex: 'street',\n    onFilter: (value: any, record: any) => record.name.includes(value),\n    sorter: (a: any, b: any) => a.street.localeCompare(b.street),\n  },\n  {\n    title: 'Street 2',\n    dataIndex: 'street2',\n    onFilter: (value: any, record: any) => record.name.includes(value),\n    sorter: (a: any, b: any) => a.street2.localeCompare(b.street2),\n  },\n  {\n    title: 'City',\n    dataIndex: 'city',\n    onFilter: (value: any, record: any) => record.name.includes(value),\n    sorter: (a: any, b: any) => a.city.localeCompare(b.city),\n    width: 100,\n  },\n  {\n    title: 'State',\n    dataIndex: 'state',\n    onFilter: (value: any, record: any) => record.name.includes(value),\n    sorter: (a: any, b: any) => a.state.localeCompare(b.state),\n  },\n  {\n    title: 'Zip',\n    dataIndex: 'zip',\n    onFilter: (value: any, record: any) => record.name.includes(value),\n    sorter: (a: any, b: any) => a.zip.localeCompare(b.zip),\n  },\n  {\n    title: 'Phone',\n    dataIndex: 'phone',\n    onFilter: (value: any, record: any) => record.name.includes(value),\n    sorter: (a: any, b: any) => a.phone.length - b.phone.length,\n  },\n  {\n    title: 'Email',\n    dataIndex: 'email',\n    onFilter: (value: any, record: any) => record.name.includes(value),\n    sorter: (a: any, b: any) => a.email.length - b.email.length,\n    width: 220,\n  },\n  {\n    title: 'Mail List',\n    dataIndex: 'mailList',\n    render: mailListColumnRenderer,\n  }];\n\n  /** Hooks goes below * */\n  useEffect(() => {\n    getPcoListCall({\n      length: pageLength,\n      page: clickedValue ? '1' : currentPageLocal,\n      isDeleted: false,\n      entityType: tableFilter,\n      searchText: searchKey,\n    }, () => console.log('get list of pco'));\n  }, [currentPageLocal, tableFilter, searchKeyFinal]);\n\n  useEffect(() => {\n    if (!searchKey) {\n      setSearchKeyFinal('');\n      getPcoListCall({\n        length: pageLength,\n        page: clickedValue ? '1' : currentPageLocal,\n        isDeleted: false,\n        entityType: tableFilter,\n        searchText: searchKey,\n      }, () => console.log('get list of pco'));\n    }\n  }, [searchKey]);\n\n  useEffect(() => {\n    setSelectedPco('');\n  }, []);\n\n  return (\n    <div className=\"container\">\n      {/* {pageHeader} */}\n      {contentToolbar}\n      {/* <SharedTable\n        columns={columnsConfig}\n        dataSource={filteredTableData}\n        selectedRowKeys={selectedRows}\n        updateSelectedRows={updateSelectedRows}\n      /> */}\n      <CustomTablePagination\n        config={{\n          rowSelection: 'radio',\n          selectedRow: selectedId,\n          setSelectedRow: setSelectedPco,\n          isNotEditable: false,\n          showHeader: true,\n          selectable: true,\n          tableType: 'Users',\n        }}\n        totalNumber={totalNumber}\n        currentPage={currentPageLocal}\n        setPaginationData={setCurrentPageLocal}\n        tableData={pcoList}\n        columnData={pcoColumns}\n        isLoading={getPcoListLoading}\n        delete={(id: string) => onDeletePco(id)}\n        setEditModalOpen={(isOpen: boolean, data: any) => setEditModalOpen(isOpen, data)}\n      />\n      <PcoAddModal\n        minifiedVersion={false}\n        visible={addModalVisible}\n        setAddModalVisibility={setAddModalVisibility}\n        editRecord={editRecord}\n        setEditRecord={setEditRecord}\n        addPCOCall={addPCOCall}\n        updatePCOCall={updatePCOCall}\n        addPcoLoading={addPcoLoading}\n        updatePcoLoading={updatePcoLoading}\n        getPcoListCall={getPcoListCall}\n        userCountryCode={userCountryCode}\n        setSearchKey={setSearchKey}\n        setSearchKeyFinal={setSearchKeyFinal}\n        setSelectedPco={setSelectedPco}\n        uploadImageCall={uploadImageCall}\n        deleteImageCall={deleteImageCall}\n        selectedPcoId={selectedId}\n        getPcoFilter={{\n          length: pageLength,\n          page: currentPageLocal,\n          isDeleted: false,\n          entityType: tableFilter,\n          searchText: '',\n        }}\n        handleCancel={() => {\n          setAddModalVisibility(false);\n          setEditRecord(null);\n        }}\n      />\n    </div>\n  );\n};\n"],"mappings":";;;;;;;;;;;;AAAA;AACA,SAASA,SAAS,EAAEC,QAAQ,QAAY,OAAO;AAI/C,SAC0BC,aAAa,EAAEC,aAAa,EAAEC,UAAU,QAC3D,mBAAmB;AAC1B,SACEC,aAAa,EAAEC,GAAG,QACb,YAAY;AAInB,SAASC,OAAO,QAAQ,YAAY;AACpC,SAASC,cAAc,QAAQ,6BAA6B;AAC5D,SAASC,WAAW,QAAQ,0BAA0B;AACtD,OAAOC,qBAAqB,MAAM,+CAA+C;AACjF,SAASC,UAAU,QAAQ,wCAAwC;AACnE,OAAO,YAAY;AAAC;AAEpB,MAAM;EAAEC;AAAM,CAAC,cAAa;AAC5B,MAAM;EAAEC;AAAO,CAAC,UAAS;AACzB,MAAM;EAAEC;AAAQ,CAAC,SAAQ;AAEzB,MAAMC,SAAS,GAAG,SAAS;;AAE3B;AACA,OAAO,MAAMC,GAAiB,GAAIC,WAAW,IAAK;EAAA;EAChD,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGlB,QAAQ,CAACmB,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAACf,OAAO,CAAC,CAAC,CAAC;EAC/E;EACA,MAAM,CAACgB,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGvB,QAAQ,CAACiB,SAAS,CAAC;EACrE,MAAM,CAACO,WAAW,EAAEC,cAAc,CAAC,GAAGzB,QAAQ,CAAmBI,aAAa,CAAC,CAAC,CAAC,CAACsB,EAAE,CAAC;EACrF,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAG5B,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAAC6B,QAAQ,EAAEC,WAAW,CAAC,GAAG9B,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC5C,MAAM,CAAC+B,UAAU,EAAEC,aAAa,CAAC,GAAGhC,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACiC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGlC,QAAQ,CAAC,CAAC,CAAC;EAC3D,MAAM,CAACmC,SAAS,EAAEC,YAAY,CAAC,GAAGpC,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACqC,cAAc,EAAEC,iBAAiB,CAAC,GAAGtC,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACuC,YAAY,EAAEC,eAAe,CAAC,GAAGxC,QAAQ,CAAC,KAAK,CAAC;EAEvD,MAAM;IACJyC,iBAAiB;IACjBC,cAAc;IACdC,UAAU;IACVC,aAAa;IACbC,OAAO;IACPC,UAAU;IACVC,aAAa;IACbC,gBAAgB;IAChBC,aAAa;IACbC,cAAc;IACdC,WAAW;IACXC,eAAe;IACfC,eAAe;IACfC;EACF,CAAC,GAAGtC,WAAW;;EAEf;;EAEA,MAAMuC,WAAW,GAAI7B,EAAU,IAAW;IACxCwB,cAAc,CAACxB,EAAE,CAAC;IAClBuB,aAAa,CAAC;MAAEvB;IAAG,CAAC,EAAE,MAAM;MAC1BgB,cAAc,CAAC;QACbc,MAAM,EAAE9C,UAAU;QAClB+C,IAAI,EAAExB,gBAAgB;QACtByB,SAAS,EAAE,KAAK;QAChBC,UAAU,EAAEnC,WAAW;QACvBoC,UAAU,EAAEzB;MACd,CAAC,EAAE,MAAM0B,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC,CAAC;IAC1C,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,gBAAgB,GAAG,CAACC,KAAc,EAAEC,IAAS,KAAK;IACtDf,cAAc,CAACe,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEvC,EAAE,CAAC;IACxBM,aAAa,CAACiC,IAAI,CAAC;IACnBrC,kBAAkB,CAACoC,KAAK,CAAC;IACzBlC,WAAW,CAACmC,IAAI,CAAC;EACnB,CAAC;EAED,MAAMC,gBAAgB,GAAG,MAAM;IAC7B;IACA;IACA;EAAA,CACD;;EAED;;EAEA,MAAMC,qBAAqB,GAAIC,IAAa,IAAW;IACrDxC,kBAAkB,CAACwC,IAAI,CAAC;EAC1B,CAAC;;EAED;;EAEA,MAAMC,kBAAkB,GAAIC,GAAqB,IAAK;IACpDlC,YAAY,CAAC,EAAE,CAAC;IAChBE,iBAAiB,CAAC,EAAE,CAAC;IACrBY,cAAc,CAAC,EAAE,CAAC;IAClBhB,mBAAmB,CAAC,CAAC,CAAC;IACtBT,cAAc,CAAC6C,GAAG,CAAC;EACrB,CAAC;;EAED;EACA,MAAMC,UAAU,gBACd;IAAK,SAAS,EAAG,GAAEzD,SAAU,cAAc;IAAA,uBACzC,QAAC,KAAK;MAAC,KAAK,EAAE,CAAE;MAAC,KAAK,EAAE;QAAE0D,MAAM,EAAE;MAAS,CAAE;MAAA,UAAC;IAE9C;MAAA;MAAA;MAAA;IAAA;EAAQ;IAAA;IAAA;IAAA;EAAA,QAEX;EAED,MAAMC,UAAU,gBACd;IACE,SAAS,EAAG,GAAE3D,SAAU,cAAc;IACtC,YAAY,EAAEV,aAAa,CAAC,CAAC,CAAC,CAACsB,EAAG;IAClC,QAAQ,EAAE2C,kBAAmB;IAAA,UAE5BjE,aAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAEsE,GAAG,CAAEC,GAAG,iBACtB,QAAC,MAAM;MAAc,KAAK,EAAEA,GAAG,CAACjD,EAAG;MAAA,UAAEiD,GAAG,CAACC;IAAI,GAAhCD,GAAG,CAACjD,EAAE;MAAA;MAAA;MAAA;IAAA,QACpB;EAAC;IAAA;IAAA;IAAA;EAAA,QAEL;EAED,MAAMmD,cAAc,gBAClB,QAAC,cAAc;IACb,UAAU,EAAEJ,UAAW;IACvB,SAAS,EAAEtC,SAAU;IACrB,YAAY,EAAEC,YAAa;IAC3B,iBAAiB,EAAEE,iBAAkB;IACrC,WAAW,EAAEL,gBAAiB;IAC9B,UAAU,EAAEvB,UAAW;IACvB,WAAW,EAAEc,WAAY;IACzB,gBAAgB,EAAE2C,qBAAsB;IACxC,iBAAiB,EAAE,KAAM;IACzB,mBAAmB,EAAED,gBAAiB;IACtC,iBAAiB,EAAE,MAAMY,KAAK,CAAC,cAAc;EAAE;IAAA;IAAA;IAAA;EAAA,QAElD;EAED,MAAMC,kBAAkB,GAAG,CAACC,IAAY,EAAEC,MAAW,kBACnD;IAAO,KAAK,EAAC,UAAU;IAAC,IAAI,EAAC,QAAQ;IAAA,wBACnC;MAAA,UACGD;IAAI;MAAA;MAAA;MAAA;IAAA,QACA,EACNC,MAAM,CAACb,IAAI,gBACV,QAAC,UAAU;MACT,SAAS,EAAG,GAAEtD,SAAU,oBAAmBmE,MAAM,CAACb,IAAI,GAAG,WAAW,GAAG,EAAG;IAAE;MAAA;MAAA;MAAA;IAAA,QAC5E,gBACA;MAAA;MAAA;MAAA;IAAA,QAAQ;EAAA;IAAA;IAAA;IAAA;EAAA,QAEf;EAED,MAAMc,sBAAsB,GAAG,CAACC,KAAU,EAAEF,MAAW,kBACrD;IAAO,IAAI,EAAC,QAAQ;IAAA,uBAClB;MACE,SAAS,EAAG,GAAEnE,SAAU,oBAAoB;MAC5C,cAAc,EAAEmE,MAAM,CAACG,QAAS;MAChC,eAAe,eAAE,QAAC,aAAa;QAAA;QAAA;QAAA;MAAA,QAAI;MACnC,iBAAiB,eAAE,QAAC,aAAa;QAAA;QAAA;QAAA;MAAA,QAAI;MACrC,OAAO,EAAEH,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEG,QAAS;MAC1B,QAAQ,EAAGC,OAAgB,IAAK;QAAA;QAC9BxB,OAAO,CAACC,GAAG,CAACmB,MAAM,EAAE,QAAQ,CAAC;QAC7BrC,aAAa,CAAC;UAAE,GAAGqC,MAAM;UAAEG,QAAQ,EAAEC,OAAO;UAAEC,SAAS,uBAAEL,MAAM,CAACK,SAAS,iEAAIC,YAAY,CAACC,OAAO,CAAC,WAAW;QAAE,CAAC,EAAE,MAAM;UACtHrB,qBAAqB,CAAC,KAAK,CAAC;QAC9B,CAAC,CAAC;MACJ;IAAE;MAAA;MAAA;MAAA;IAAA;EACF;IAAA;IAAA;IAAA;EAAA,QAEL;EAED,MAAMsB,UAAU,GAAG,CAAC,CAAC;EACrB,MAAMC,YAAY,GAAG,CAAC,CAAC;EAEvB,MAAMC,UAAU,GAAG,CAAC;IAClBC,KAAK,EAAEpE,WAAW,KAAKnB,GAAG,GAAG,MAAM,GAAG,WAAW;IACjDwF,SAAS,EAAE,UAAU;IACrBC,QAAQ,EAAE,CAAC9B,KAAU,EAAEiB,MAAW,KAAKA,MAAM,CAACL,IAAI,CAACmB,QAAQ,CAAC/B,KAAK,CAAC;IAClEgC,MAAM,EAAE,CAACC,CAAM,EAAEC,CAAM,KAAKD,CAAC,CAACE,QAAQ,CAACC,aAAa,CAACF,CAAC,CAACC,QAAQ,CAAC;IAChEE,MAAM,EAAEtB;EACV,CAAC,EACD;IACEa,KAAK,EAAE,YAAY;IACnBC,SAAS,EAAE,WAAW;IACtBC,QAAQ,EAAE,CAAC9B,KAAU,EAAEiB,MAAW,KAAKA,MAAM,CAACL,IAAI,CAACmB,QAAQ,CAAC/B,KAAK,CAAC;IAClEgC,MAAM,EAAE,CAACC,CAAM,EAAEC,CAAM,KAAKD,CAAC,CAACK,SAAS,CAACF,aAAa,CAACF,CAAC,CAACI,SAAS;EACnE,CAAC,EACD;IACEV,KAAK,EAAE,QAAQ;IACfC,SAAS,EAAE,QAAQ;IACnBC,QAAQ,EAAE,CAAC9B,KAAU,EAAEiB,MAAW,KAAKA,MAAM,CAACL,IAAI,CAACmB,QAAQ,CAAC/B,KAAK,CAAC;IAClEgC,MAAM,EAAE,CAACC,CAAM,EAAEC,CAAM,KAAKD,CAAC,CAACM,MAAM,CAACH,aAAa,CAACF,CAAC,CAACK,MAAM;EAC7D,CAAC,EACD;IACEX,KAAK,EAAE,UAAU;IACjBC,SAAS,EAAE,SAAS;IACpBC,QAAQ,EAAE,CAAC9B,KAAU,EAAEiB,MAAW,KAAKA,MAAM,CAACL,IAAI,CAACmB,QAAQ,CAAC/B,KAAK,CAAC;IAClEgC,MAAM,EAAE,CAACC,CAAM,EAAEC,CAAM,KAAKD,CAAC,CAACO,OAAO,CAACJ,aAAa,CAACF,CAAC,CAACM,OAAO;EAC/D,CAAC,EACD;IACEZ,KAAK,EAAE,MAAM;IACbC,SAAS,EAAE,MAAM;IACjBC,QAAQ,EAAE,CAAC9B,KAAU,EAAEiB,MAAW,KAAKA,MAAM,CAACL,IAAI,CAACmB,QAAQ,CAAC/B,KAAK,CAAC;IAClEgC,MAAM,EAAE,CAACC,CAAM,EAAEC,CAAM,KAAKD,CAAC,CAACQ,IAAI,CAACL,aAAa,CAACF,CAAC,CAACO,IAAI,CAAC;IACxDC,KAAK,EAAE;EACT,CAAC,EACD;IACEd,KAAK,EAAE,OAAO;IACdC,SAAS,EAAE,OAAO;IAClBC,QAAQ,EAAE,CAAC9B,KAAU,EAAEiB,MAAW,KAAKA,MAAM,CAACL,IAAI,CAACmB,QAAQ,CAAC/B,KAAK,CAAC;IAClEgC,MAAM,EAAE,CAACC,CAAM,EAAEC,CAAM,KAAKD,CAAC,CAACU,KAAK,CAACP,aAAa,CAACF,CAAC,CAACS,KAAK;EAC3D,CAAC,EACD;IACEf,KAAK,EAAE,KAAK;IACZC,SAAS,EAAE,KAAK;IAChBC,QAAQ,EAAE,CAAC9B,KAAU,EAAEiB,MAAW,KAAKA,MAAM,CAACL,IAAI,CAACmB,QAAQ,CAAC/B,KAAK,CAAC;IAClEgC,MAAM,EAAE,CAACC,CAAM,EAAEC,CAAM,KAAKD,CAAC,CAACW,GAAG,CAACR,aAAa,CAACF,CAAC,CAACU,GAAG;EACvD,CAAC,EACD;IACEhB,KAAK,EAAE,OAAO;IACdC,SAAS,EAAE,OAAO;IAClBC,QAAQ,EAAE,CAAC9B,KAAU,EAAEiB,MAAW,KAAKA,MAAM,CAACL,IAAI,CAACmB,QAAQ,CAAC/B,KAAK,CAAC;IAClEgC,MAAM,EAAE,CAACC,CAAM,EAAEC,CAAM,KAAKD,CAAC,CAACY,KAAK,CAACrD,MAAM,GAAG0C,CAAC,CAACW,KAAK,CAACrD;EACvD,CAAC,EACD;IACEoC,KAAK,EAAE,OAAO;IACdC,SAAS,EAAE,OAAO;IAClBC,QAAQ,EAAE,CAAC9B,KAAU,EAAEiB,MAAW,KAAKA,MAAM,CAACL,IAAI,CAACmB,QAAQ,CAAC/B,KAAK,CAAC;IAClEgC,MAAM,EAAE,CAACC,CAAM,EAAEC,CAAM,KAAKD,CAAC,CAACa,KAAK,CAACtD,MAAM,GAAG0C,CAAC,CAACY,KAAK,CAACtD,MAAM;IAC3DkD,KAAK,EAAE;EACT,CAAC,EACD;IACEd,KAAK,EAAE,WAAW;IAClBC,SAAS,EAAE,UAAU;IACrBQ,MAAM,EAAEnB;EACV,CAAC,CAAC;;EAEF;EACAnF,SAAS,CAAC,MAAM;IACd2C,cAAc,CAAC;MACbc,MAAM,EAAE9C,UAAU;MAClB+C,IAAI,EAAElB,YAAY,GAAG,GAAG,GAAGN,gBAAgB;MAC3CyB,SAAS,EAAE,KAAK;MAChBC,UAAU,EAAEnC,WAAW;MACvBoC,UAAU,EAAEzB;IACd,CAAC,EAAE,MAAM0B,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC,CAAC;EAC1C,CAAC,EAAE,CAAC7B,gBAAgB,EAAET,WAAW,EAAEa,cAAc,CAAC,CAAC;EAEnDtC,SAAS,CAAC,MAAM;IACd,IAAI,CAACoC,SAAS,EAAE;MACdG,iBAAiB,CAAC,EAAE,CAAC;MACrBI,cAAc,CAAC;QACbc,MAAM,EAAE9C,UAAU;QAClB+C,IAAI,EAAElB,YAAY,GAAG,GAAG,GAAGN,gBAAgB;QAC3CyB,SAAS,EAAE,KAAK;QAChBC,UAAU,EAAEnC,WAAW;QACvBoC,UAAU,EAAEzB;MACd,CAAC,EAAE,MAAM0B,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC,CAAC;IAC1C;EACF,CAAC,EAAE,CAAC3B,SAAS,CAAC,CAAC;EAEfpC,SAAS,CAAC,MAAM;IACdmD,cAAc,CAAC,EAAE,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE;IAAK,SAAS,EAAC,WAAW;IAAA,WAEvB2B,cAAc,eAOf,QAAC,qBAAqB;MACpB,MAAM,EAAE;QACNkC,YAAY,EAAE,OAAO;QACrBC,WAAW,EAAElE,UAAU;QACvBmE,cAAc,EAAE/D,cAAc;QAC9BgE,aAAa,EAAE,KAAK;QACpBC,UAAU,EAAE,IAAI;QAChBC,UAAU,EAAE,IAAI;QAChBC,SAAS,EAAE;MACb,CAAE;MACF,WAAW,EAAElE,WAAY;MACzB,WAAW,EAAElB,gBAAiB;MAC9B,iBAAiB,EAAEC,mBAAoB;MACvC,SAAS,EAAEW,OAAQ;MACnB,UAAU,EAAE8C,UAAW;MACvB,SAAS,EAAElD,iBAAkB;MAC7B,MAAM,EAAGf,EAAU,IAAK6B,WAAW,CAAC7B,EAAE,CAAE;MACxC,gBAAgB,EAAE,CAAC4F,MAAe,EAAErD,IAAS,KAAKF,gBAAgB,CAACuD,MAAM,EAAErD,IAAI;IAAE;MAAA;MAAA;MAAA;IAAA,QACjF,eACF,QAAC,WAAW;MACV,eAAe,EAAE,KAAM;MACvB,OAAO,EAAEtC,eAAgB;MACzB,qBAAqB,EAAEwC,qBAAsB;MAC7C,UAAU,EAAEpC,UAAW;MACvB,aAAa,EAAEC,aAAc;MAC7B,UAAU,EAAEW,UAAW;MACvB,aAAa,EAAEC,aAAc;MAC7B,aAAa,EAAEG,aAAc;MAC7B,gBAAgB,EAAEC,gBAAiB;MACnC,cAAc,EAAEN,cAAe;MAC/B,eAAe,EAAEU,eAAgB;MACjC,YAAY,EAAEhB,YAAa;MAC3B,iBAAiB,EAAEE,iBAAkB;MACrC,cAAc,EAAEY,cAAe;MAC/B,eAAe,EAAEG,eAAgB;MACjC,eAAe,EAAEC,eAAgB;MACjC,aAAa,EAAER,UAAW;MAC1B,YAAY,EAAE;QACZU,MAAM,EAAE9C,UAAU;QAClB+C,IAAI,EAAExB,gBAAgB;QACtByB,SAAS,EAAE,KAAK;QAChBC,UAAU,EAAEnC,WAAW;QACvBoC,UAAU,EAAE;MACd,CAAE;MACF,YAAY,EAAE,MAAM;QAClBO,qBAAqB,CAAC,KAAK,CAAC;QAC5BnC,aAAa,CAAC,IAAI,CAAC;MACrB;IAAE;MAAA;MAAA;MAAA;IAAA,QACF;EAAA;IAAA;IAAA;IAAA;EAAA,QACE;AAEV,CAAC;AAAC,GAzSWjB,GAAiB;AAAA,KAAjBA,GAAiB;AAAA;AAAA"},"metadata":{},"sourceType":"module"}