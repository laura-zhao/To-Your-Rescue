{"ast":null,"code":"import { connect } from 'react-redux';\nimport { getCountCall } from '../../redux/common/action';\nimport { Dashboard } from './Dashboard';\nconst mapStateToProps = state => ({\n  getCountLoading: state.common.getCountLoading,\n  getCountSuccess: state.common.getCountSuccess,\n  counts: state.common.counts\n});\nconst mapDispatchToProps = dispatch => ({\n  getCountCall: (data, callbackFunction) => dispatch(getCountCall(data, callbackFunction))\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);","map":{"version":3,"names":["connect","getCountCall","Dashboard","mapStateToProps","state","getCountLoading","common","getCountSuccess","counts","mapDispatchToProps","dispatch","data","callbackFunction"],"sources":["/Users/zhaoke/Desktop/TYR/TYR.WEB.CLIENT/src/components/dashboard/index.ts"],"sourcesContent":["import { connect } from 'react-redux';\nimport { getCountCall } from '../../redux/common/action';\nimport { Dashboard } from './Dashboard';\n\nconst mapStateToProps = (state: any) => ({\n  getCountLoading: state.common.getCountLoading,\n  getCountSuccess: state.common.getCountSuccess,\n  counts: state.common.counts,\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  getCountCall: (data: {}, callbackFunction: () => void) => dispatch(getCountCall(data, callbackFunction)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,aAAa;AACrC,SAASC,YAAY,QAAQ,2BAA2B;AACxD,SAASC,SAAS,QAAQ,aAAa;AAEvC,MAAMC,eAAe,GAAIC,KAAU,KAAM;EACvCC,eAAe,EAAED,KAAK,CAACE,MAAM,CAACD,eAAe;EAC7CE,eAAe,EAAEH,KAAK,CAACE,MAAM,CAACC,eAAe;EAC7CC,MAAM,EAAEJ,KAAK,CAACE,MAAM,CAACE;AACvB,CAAC,CAAC;AAEF,MAAMC,kBAAkB,GAAIC,QAAa,KAAM;EAC7CT,YAAY,EAAE,CAACU,IAAQ,EAAEC,gBAA4B,KAAKF,QAAQ,CAACT,YAAY,CAACU,IAAI,EAAEC,gBAAgB,CAAC;AACzG,CAAC,CAAC;AAEF,eAAeZ,OAAO,CAACG,eAAe,EAAEM,kBAAkB,CAAC,CAACP,SAAS,CAAC"},"metadata":{},"sourceType":"module"}