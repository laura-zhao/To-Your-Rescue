{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.arrDel = arrDel;\nexports.arrAdd = arrAdd;\nexports.posToArr = posToArr;\nexports.getPosition = getPosition;\nexports.isTreeNode = isTreeNode;\nexports.getDragChildrenKeys = getDragChildrenKeys;\nexports.isLastChild = isLastChild;\nexports.isFirstChild = isFirstChild;\nexports.calcDropPosition = calcDropPosition;\nexports.calcSelectedKeys = calcSelectedKeys;\nexports.convertDataToTree = convertDataToTree;\nexports.parseCheckedKeys = parseCheckedKeys;\nexports.conductExpandParent = conductExpandParent;\nexports.getDataAndAria = getDataAndAria;\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _warning = _interopRequireDefault(require(\"rc-util/lib/warning\"));\nvar _TreeNode = _interopRequireDefault(require(\"./TreeNode\"));\nvar _excluded = [\"children\"];\nfunction arrDel(list, value) {\n  var clone = list.slice();\n  var index = clone.indexOf(value);\n  if (index >= 0) {\n    clone.splice(index, 1);\n  }\n  return clone;\n}\nfunction arrAdd(list, value) {\n  var clone = list.slice();\n  if (clone.indexOf(value) === -1) {\n    clone.push(value);\n  }\n  return clone;\n}\nfunction posToArr(pos) {\n  return pos.split('-');\n}\nfunction getPosition(level, index) {\n  return \"\".concat(level, \"-\").concat(index);\n}\nfunction isTreeNode(node) {\n  return node && node.type && node.type.isTreeNode;\n}\nfunction getDragChildrenKeys(dragNodeKey, keyEntities) {\n  // not contains self\n  // self for left or right drag\n  var dragChildrenKeys = [];\n  var entity = keyEntities[dragNodeKey];\n  function dig() {\n    var list = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    list.forEach(function (_ref) {\n      var key = _ref.key,\n        children = _ref.children;\n      dragChildrenKeys.push(key);\n      dig(children);\n    });\n  }\n  dig(entity.children);\n  return dragChildrenKeys;\n}\nfunction isLastChild(treeNodeEntity) {\n  if (treeNodeEntity.parent) {\n    var posArr = posToArr(treeNodeEntity.pos);\n    return Number(posArr[posArr.length - 1]) === treeNodeEntity.parent.children.length - 1;\n  }\n  return false;\n}\nfunction isFirstChild(treeNodeEntity) {\n  var posArr = posToArr(treeNodeEntity.pos);\n  return Number(posArr[posArr.length - 1]) === 0;\n} // Only used when drag, not affect SSR.\n\nfunction calcDropPosition(event, dragNode, targetNode, indent, startMousePosition, allowDrop, flattenedNodes, keyEntities, expandKeys, direction) {\n  var _abstractDropNodeEnti;\n  var clientX = event.clientX,\n    clientY = event.clientY;\n  var _event$target$getBoun = event.target.getBoundingClientRect(),\n    top = _event$target$getBoun.top,\n    height = _event$target$getBoun.height; // optional chain for testing\n\n  var horizontalMouseOffset = (direction === 'rtl' ? -1 : 1) * (((startMousePosition === null || startMousePosition === void 0 ? void 0 : startMousePosition.x) || 0) - clientX);\n  var rawDropLevelOffset = (horizontalMouseOffset - 12) / indent; // find abstract drop node by horizontal offset\n\n  var abstractDropNodeEntity = keyEntities[targetNode.props.eventKey];\n  if (clientY < top + height / 2) {\n    // first half, set abstract drop node to previous node\n    var nodeIndex = flattenedNodes.findIndex(function (flattenedNode) {\n      return flattenedNode.data.key === abstractDropNodeEntity.key;\n    });\n    var prevNodeIndex = nodeIndex <= 0 ? 0 : nodeIndex - 1;\n    var prevNodeKey = flattenedNodes[prevNodeIndex].data.key;\n    abstractDropNodeEntity = keyEntities[prevNodeKey];\n  }\n  var initialAbstractDropNodeKey = abstractDropNodeEntity.key;\n  var abstractDragOverEntity = abstractDropNodeEntity;\n  var dragOverNodeKey = abstractDropNodeEntity.key;\n  var dropPosition = 0;\n  var dropLevelOffset = 0; // Only allow cross level drop when dragging on a non-expanded node\n\n  if (!expandKeys.includes(initialAbstractDropNodeKey)) {\n    for (var i = 0; i < rawDropLevelOffset; i += 1) {\n      if (isLastChild(abstractDropNodeEntity)) {\n        abstractDropNodeEntity = abstractDropNodeEntity.parent;\n        dropLevelOffset += 1;\n      } else {\n        break;\n      }\n    }\n  }\n  var abstractDropDataNode = abstractDropNodeEntity.node;\n  var dropAllowed = true;\n  if (isFirstChild(abstractDropNodeEntity) && abstractDropNodeEntity.level === 0 && clientY < top + height / 2 && allowDrop({\n    dropNode: abstractDropDataNode,\n    dropPosition: -1\n  }) && abstractDropNodeEntity.key === targetNode.props.eventKey) {\n    // first half of first node in first level\n    dropPosition = -1;\n  } else if ((abstractDragOverEntity.children || []).length && expandKeys.includes(dragOverNodeKey)) {\n    // drop on expanded node\n    // only allow drop inside\n    if (allowDrop({\n      dropNode: abstractDropDataNode,\n      dropPosition: 0\n    })) {\n      dropPosition = 0;\n    } else {\n      dropAllowed = false;\n    }\n  } else if (dropLevelOffset === 0) {\n    if (rawDropLevelOffset > -1.5) {\n      // | Node     | <- abstractDropNode\n      // | -^-===== | <- mousePosition\n      // 1. try drop after\n      // 2. do not allow drop\n      if (allowDrop({\n        dropNode: abstractDropDataNode,\n        dropPosition: 1\n      })) {\n        dropPosition = 1;\n      } else {\n        dropAllowed = false;\n      }\n    } else {\n      // | Node     | <- abstractDropNode\n      // | ---==^== | <- mousePosition\n      // whether it has children or doesn't has children\n      // always\n      // 1. try drop inside\n      // 2. try drop after\n      // 3. do not allow drop\n      if (allowDrop({\n        dropNode: abstractDropDataNode,\n        dropPosition: 0\n      })) {\n        dropPosition = 0;\n      } else if (allowDrop({\n        dropNode: abstractDropDataNode,\n        dropPosition: 1\n      })) {\n        dropPosition = 1;\n      } else {\n        dropAllowed = false;\n      }\n    }\n  } else {\n    // | Node1 | <- abstractDropNode\n    //      |  Node2  |\n    // --^--|----=====| <- mousePosition\n    // 1. try insert after Node1\n    // 2. do not allow drop\n    if (allowDrop({\n      dropNode: abstractDropDataNode,\n      dropPosition: 1\n    })) {\n      dropPosition = 1;\n    } else {\n      dropAllowed = false;\n    }\n  }\n  return {\n    dropPosition: dropPosition,\n    dropLevelOffset: dropLevelOffset,\n    dropTargetKey: abstractDropNodeEntity.key,\n    dropTargetPos: abstractDropNodeEntity.pos,\n    dragOverNodeKey: dragOverNodeKey,\n    dropContainerKey: dropPosition === 0 ? null : ((_abstractDropNodeEnti = abstractDropNodeEntity.parent) === null || _abstractDropNodeEnti === void 0 ? void 0 : _abstractDropNodeEnti.key) || null,\n    dropAllowed: dropAllowed\n  };\n}\n/**\n * Return selectedKeys according with multiple prop\n * @param selectedKeys\n * @param props\n * @returns [string]\n */\n\nfunction calcSelectedKeys(selectedKeys, props) {\n  if (!selectedKeys) return undefined;\n  var multiple = props.multiple;\n  if (multiple) {\n    return selectedKeys.slice();\n  }\n  if (selectedKeys.length) {\n    return [selectedKeys[0]];\n  }\n  return selectedKeys;\n}\nvar internalProcessProps = function internalProcessProps(props) {\n  return props;\n};\nfunction convertDataToTree(treeData, processor) {\n  if (!treeData) return [];\n  var _ref2 = processor || {},\n    _ref2$processProps = _ref2.processProps,\n    processProps = _ref2$processProps === void 0 ? internalProcessProps : _ref2$processProps;\n  var list = Array.isArray(treeData) ? treeData : [treeData];\n  return list.map(function (_ref3) {\n    var children = _ref3.children,\n      props = (0, _objectWithoutProperties2.default)(_ref3, _excluded);\n    var childrenNodes = convertDataToTree(children, processor);\n    return /*#__PURE__*/_react.default.createElement(_TreeNode.default, processProps(props), childrenNodes);\n  });\n}\n/**\n * Parse `checkedKeys` to { checkedKeys, halfCheckedKeys } style\n */\n\nfunction parseCheckedKeys(keys) {\n  if (!keys) {\n    return null;\n  } // Convert keys to object format\n\n  var keyProps;\n  if (Array.isArray(keys)) {\n    // [Legacy] Follow the api doc\n    keyProps = {\n      checkedKeys: keys,\n      halfCheckedKeys: undefined\n    };\n  } else if ((0, _typeof2.default)(keys) === 'object') {\n    keyProps = {\n      checkedKeys: keys.checked || undefined,\n      halfCheckedKeys: keys.halfChecked || undefined\n    };\n  } else {\n    (0, _warning.default)(false, '`checkedKeys` is not an array or an object');\n    return null;\n  }\n  return keyProps;\n}\n/**\n * If user use `autoExpandParent` we should get the list of parent node\n * @param keyList\n * @param keyEntities\n */\n\nfunction conductExpandParent(keyList, keyEntities) {\n  var expandedKeys = new Set();\n  function conductUp(key) {\n    if (expandedKeys.has(key)) return;\n    var entity = keyEntities[key];\n    if (!entity) return;\n    expandedKeys.add(key);\n    var parent = entity.parent,\n      node = entity.node;\n    if (node.disabled) return;\n    if (parent) {\n      conductUp(parent.key);\n    }\n  }\n  (keyList || []).forEach(function (key) {\n    conductUp(key);\n  });\n  return (0, _toConsumableArray2.default)(expandedKeys);\n}\n/**\n * Returns only the data- and aria- key/value pairs\n */\n\nfunction getDataAndAria(props) {\n  var omitProps = {};\n  Object.keys(props).forEach(function (key) {\n    if (key.startsWith('data-') || key.startsWith('aria-')) {\n      omitProps[key] = props[key];\n    }\n  });\n  return omitProps;\n}","map":{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","arrDel","arrAdd","posToArr","getPosition","isTreeNode","getDragChildrenKeys","isLastChild","isFirstChild","calcDropPosition","calcSelectedKeys","convertDataToTree","parseCheckedKeys","conductExpandParent","getDataAndAria","_toConsumableArray2","_typeof2","_objectWithoutProperties2","_react","_warning","_TreeNode","_excluded","list","clone","slice","index","indexOf","splice","push","pos","split","level","concat","node","type","dragNodeKey","keyEntities","dragChildrenKeys","entity","dig","arguments","length","undefined","forEach","_ref","key","children","treeNodeEntity","parent","posArr","Number","event","dragNode","targetNode","indent","startMousePosition","allowDrop","flattenedNodes","expandKeys","direction","_abstractDropNodeEnti","clientX","clientY","_event$target$getBoun","target","getBoundingClientRect","top","height","horizontalMouseOffset","x","rawDropLevelOffset","abstractDropNodeEntity","props","eventKey","nodeIndex","findIndex","flattenedNode","data","prevNodeIndex","prevNodeKey","initialAbstractDropNodeKey","abstractDragOverEntity","dragOverNodeKey","dropPosition","dropLevelOffset","includes","i","abstractDropDataNode","dropAllowed","dropNode","dropTargetKey","dropTargetPos","dropContainerKey","selectedKeys","multiple","internalProcessProps","treeData","processor","_ref2","_ref2$processProps","processProps","Array","isArray","map","_ref3","default","childrenNodes","createElement","keys","keyProps","checkedKeys","halfCheckedKeys","checked","halfChecked","keyList","expandedKeys","Set","conductUp","has","add","disabled","omitProps","startsWith"],"sources":["/Users/zhaoke/Desktop/TYR/TYR.WEB.CLIENT/node_modules/rc-tree/lib/util.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.arrDel = arrDel;\nexports.arrAdd = arrAdd;\nexports.posToArr = posToArr;\nexports.getPosition = getPosition;\nexports.isTreeNode = isTreeNode;\nexports.getDragChildrenKeys = getDragChildrenKeys;\nexports.isLastChild = isLastChild;\nexports.isFirstChild = isFirstChild;\nexports.calcDropPosition = calcDropPosition;\nexports.calcSelectedKeys = calcSelectedKeys;\nexports.convertDataToTree = convertDataToTree;\nexports.parseCheckedKeys = parseCheckedKeys;\nexports.conductExpandParent = conductExpandParent;\nexports.getDataAndAria = getDataAndAria;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _warning = _interopRequireDefault(require(\"rc-util/lib/warning\"));\n\nvar _TreeNode = _interopRequireDefault(require(\"./TreeNode\"));\n\nvar _excluded = [\"children\"];\n\nfunction arrDel(list, value) {\n  var clone = list.slice();\n  var index = clone.indexOf(value);\n\n  if (index >= 0) {\n    clone.splice(index, 1);\n  }\n\n  return clone;\n}\n\nfunction arrAdd(list, value) {\n  var clone = list.slice();\n\n  if (clone.indexOf(value) === -1) {\n    clone.push(value);\n  }\n\n  return clone;\n}\n\nfunction posToArr(pos) {\n  return pos.split('-');\n}\n\nfunction getPosition(level, index) {\n  return \"\".concat(level, \"-\").concat(index);\n}\n\nfunction isTreeNode(node) {\n  return node && node.type && node.type.isTreeNode;\n}\n\nfunction getDragChildrenKeys(dragNodeKey, keyEntities) {\n  // not contains self\n  // self for left or right drag\n  var dragChildrenKeys = [];\n  var entity = keyEntities[dragNodeKey];\n\n  function dig() {\n    var list = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    list.forEach(function (_ref) {\n      var key = _ref.key,\n          children = _ref.children;\n      dragChildrenKeys.push(key);\n      dig(children);\n    });\n  }\n\n  dig(entity.children);\n  return dragChildrenKeys;\n}\n\nfunction isLastChild(treeNodeEntity) {\n  if (treeNodeEntity.parent) {\n    var posArr = posToArr(treeNodeEntity.pos);\n    return Number(posArr[posArr.length - 1]) === treeNodeEntity.parent.children.length - 1;\n  }\n\n  return false;\n}\n\nfunction isFirstChild(treeNodeEntity) {\n  var posArr = posToArr(treeNodeEntity.pos);\n  return Number(posArr[posArr.length - 1]) === 0;\n} // Only used when drag, not affect SSR.\n\n\nfunction calcDropPosition(event, dragNode, targetNode, indent, startMousePosition, allowDrop, flattenedNodes, keyEntities, expandKeys, direction) {\n  var _abstractDropNodeEnti;\n\n  var clientX = event.clientX,\n      clientY = event.clientY;\n\n  var _event$target$getBoun = event.target.getBoundingClientRect(),\n      top = _event$target$getBoun.top,\n      height = _event$target$getBoun.height; // optional chain for testing\n\n\n  var horizontalMouseOffset = (direction === 'rtl' ? -1 : 1) * (((startMousePosition === null || startMousePosition === void 0 ? void 0 : startMousePosition.x) || 0) - clientX);\n  var rawDropLevelOffset = (horizontalMouseOffset - 12) / indent; // find abstract drop node by horizontal offset\n\n  var abstractDropNodeEntity = keyEntities[targetNode.props.eventKey];\n\n  if (clientY < top + height / 2) {\n    // first half, set abstract drop node to previous node\n    var nodeIndex = flattenedNodes.findIndex(function (flattenedNode) {\n      return flattenedNode.data.key === abstractDropNodeEntity.key;\n    });\n    var prevNodeIndex = nodeIndex <= 0 ? 0 : nodeIndex - 1;\n    var prevNodeKey = flattenedNodes[prevNodeIndex].data.key;\n    abstractDropNodeEntity = keyEntities[prevNodeKey];\n  }\n\n  var initialAbstractDropNodeKey = abstractDropNodeEntity.key;\n  var abstractDragOverEntity = abstractDropNodeEntity;\n  var dragOverNodeKey = abstractDropNodeEntity.key;\n  var dropPosition = 0;\n  var dropLevelOffset = 0; // Only allow cross level drop when dragging on a non-expanded node\n\n  if (!expandKeys.includes(initialAbstractDropNodeKey)) {\n    for (var i = 0; i < rawDropLevelOffset; i += 1) {\n      if (isLastChild(abstractDropNodeEntity)) {\n        abstractDropNodeEntity = abstractDropNodeEntity.parent;\n        dropLevelOffset += 1;\n      } else {\n        break;\n      }\n    }\n  }\n\n  var abstractDropDataNode = abstractDropNodeEntity.node;\n  var dropAllowed = true;\n\n  if (isFirstChild(abstractDropNodeEntity) && abstractDropNodeEntity.level === 0 && clientY < top + height / 2 && allowDrop({\n    dropNode: abstractDropDataNode,\n    dropPosition: -1\n  }) && abstractDropNodeEntity.key === targetNode.props.eventKey) {\n    // first half of first node in first level\n    dropPosition = -1;\n  } else if ((abstractDragOverEntity.children || []).length && expandKeys.includes(dragOverNodeKey)) {\n    // drop on expanded node\n    // only allow drop inside\n    if (allowDrop({\n      dropNode: abstractDropDataNode,\n      dropPosition: 0\n    })) {\n      dropPosition = 0;\n    } else {\n      dropAllowed = false;\n    }\n  } else if (dropLevelOffset === 0) {\n    if (rawDropLevelOffset > -1.5) {\n      // | Node     | <- abstractDropNode\n      // | -^-===== | <- mousePosition\n      // 1. try drop after\n      // 2. do not allow drop\n      if (allowDrop({\n        dropNode: abstractDropDataNode,\n        dropPosition: 1\n      })) {\n        dropPosition = 1;\n      } else {\n        dropAllowed = false;\n      }\n    } else {\n      // | Node     | <- abstractDropNode\n      // | ---==^== | <- mousePosition\n      // whether it has children or doesn't has children\n      // always\n      // 1. try drop inside\n      // 2. try drop after\n      // 3. do not allow drop\n      if (allowDrop({\n        dropNode: abstractDropDataNode,\n        dropPosition: 0\n      })) {\n        dropPosition = 0;\n      } else if (allowDrop({\n        dropNode: abstractDropDataNode,\n        dropPosition: 1\n      })) {\n        dropPosition = 1;\n      } else {\n        dropAllowed = false;\n      }\n    }\n  } else {\n    // | Node1 | <- abstractDropNode\n    //      |  Node2  |\n    // --^--|----=====| <- mousePosition\n    // 1. try insert after Node1\n    // 2. do not allow drop\n    if (allowDrop({\n      dropNode: abstractDropDataNode,\n      dropPosition: 1\n    })) {\n      dropPosition = 1;\n    } else {\n      dropAllowed = false;\n    }\n  }\n\n  return {\n    dropPosition: dropPosition,\n    dropLevelOffset: dropLevelOffset,\n    dropTargetKey: abstractDropNodeEntity.key,\n    dropTargetPos: abstractDropNodeEntity.pos,\n    dragOverNodeKey: dragOverNodeKey,\n    dropContainerKey: dropPosition === 0 ? null : ((_abstractDropNodeEnti = abstractDropNodeEntity.parent) === null || _abstractDropNodeEnti === void 0 ? void 0 : _abstractDropNodeEnti.key) || null,\n    dropAllowed: dropAllowed\n  };\n}\n/**\n * Return selectedKeys according with multiple prop\n * @param selectedKeys\n * @param props\n * @returns [string]\n */\n\n\nfunction calcSelectedKeys(selectedKeys, props) {\n  if (!selectedKeys) return undefined;\n  var multiple = props.multiple;\n\n  if (multiple) {\n    return selectedKeys.slice();\n  }\n\n  if (selectedKeys.length) {\n    return [selectedKeys[0]];\n  }\n\n  return selectedKeys;\n}\n\nvar internalProcessProps = function internalProcessProps(props) {\n  return props;\n};\n\nfunction convertDataToTree(treeData, processor) {\n  if (!treeData) return [];\n\n  var _ref2 = processor || {},\n      _ref2$processProps = _ref2.processProps,\n      processProps = _ref2$processProps === void 0 ? internalProcessProps : _ref2$processProps;\n\n  var list = Array.isArray(treeData) ? treeData : [treeData];\n  return list.map(function (_ref3) {\n    var children = _ref3.children,\n        props = (0, _objectWithoutProperties2.default)(_ref3, _excluded);\n    var childrenNodes = convertDataToTree(children, processor);\n    return /*#__PURE__*/_react.default.createElement(_TreeNode.default, processProps(props), childrenNodes);\n  });\n}\n/**\n * Parse `checkedKeys` to { checkedKeys, halfCheckedKeys } style\n */\n\n\nfunction parseCheckedKeys(keys) {\n  if (!keys) {\n    return null;\n  } // Convert keys to object format\n\n\n  var keyProps;\n\n  if (Array.isArray(keys)) {\n    // [Legacy] Follow the api doc\n    keyProps = {\n      checkedKeys: keys,\n      halfCheckedKeys: undefined\n    };\n  } else if ((0, _typeof2.default)(keys) === 'object') {\n    keyProps = {\n      checkedKeys: keys.checked || undefined,\n      halfCheckedKeys: keys.halfChecked || undefined\n    };\n  } else {\n    (0, _warning.default)(false, '`checkedKeys` is not an array or an object');\n    return null;\n  }\n\n  return keyProps;\n}\n/**\n * If user use `autoExpandParent` we should get the list of parent node\n * @param keyList\n * @param keyEntities\n */\n\n\nfunction conductExpandParent(keyList, keyEntities) {\n  var expandedKeys = new Set();\n\n  function conductUp(key) {\n    if (expandedKeys.has(key)) return;\n    var entity = keyEntities[key];\n    if (!entity) return;\n    expandedKeys.add(key);\n    var parent = entity.parent,\n        node = entity.node;\n    if (node.disabled) return;\n\n    if (parent) {\n      conductUp(parent.key);\n    }\n  }\n\n  (keyList || []).forEach(function (key) {\n    conductUp(key);\n  });\n  return (0, _toConsumableArray2.default)(expandedKeys);\n}\n/**\n * Returns only the data- and aria- key/value pairs\n */\n\n\nfunction getDataAndAria(props) {\n  var omitProps = {};\n  Object.keys(props).forEach(function (key) {\n    if (key.startsWith('data-') || key.startsWith('aria-')) {\n      omitProps[key] = props[key];\n    }\n  });\n  return omitProps;\n}"],"mappings":"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"},"metadata":{},"sourceType":"script"}